
hi2.elf:     file format elf32-littlenios2
hi2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04000210

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x04000000 align 2**12
         filesz 0x00000210 memsz 0x00000210 flags r-x
    LOAD off    0x00002210 vaddr 0x04000210 paddr 0x04000210 align 2**12
         filesz 0x0000fbac memsz 0x0000fbac flags r-x
    LOAD off    0x00011dbc vaddr 0x0400fdbc paddr 0x040118ac align 2**12
         filesz 0x00001af0 memsz 0x00001af0 flags rw-
    LOAD off    0x0001439c vaddr 0x0401339c paddr 0x0401339c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  04000000  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f83c  04000210  04000210  00002210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000370  0400fa4c  0400fa4c  00011a4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af0  0400fdbc  040118ac  00011dbc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0401339c  0401339c  0001439c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00000230  00000230  000138ac  2**0
                  CONTENTS
  7 .sdram_controller 00000000  040134fc  040134fc  000138ac  2**0
                  CONTENTS
  8 .intel_generic_serial_flash_interface_top_0_avl_mem 00000000  10000000  10000000  000138ac  2**0
                  CONTENTS
  9 .comment      00000023  00000000  00000000  000138ac  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00000ee8  00000000  00000000  000138d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   00024745  00000000  00000000  000147b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 000093a0  00000000  00000000  00038efd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000b87e  00000000  00000000  0004229d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000020e4  00000000  00000000  0004db1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0000398c  00000000  00000000  0004fc00  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    00017b0b  00000000  00000000  0005358c  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_alt_sim_info 00000010  00000000  00000000  0006b098  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 00001948  00000000  00000000  0006b0a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .thread_model 00000003  00000000  00000000  0006fc3e  2**0
                  CONTENTS, READONLY
 20 .cpu          00000009  00000000  00000000  0006fc41  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  0006fc4a  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  0006fc4b  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  0006fc4c  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  0006fc50  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  0006fc54  2**0
                  CONTENTS, READONLY
 26 .stderr_dev   00000009  00000000  00000000  0006fc58  2**0
                  CONTENTS, READONLY
 27 .stdin_dev    00000009  00000000  00000000  0006fc61  2**0
                  CONTENTS, READONLY
 28 .stdout_dev   00000009  00000000  00000000  0006fc6a  2**0
                  CONTENTS, READONLY
 29 .sopc_system_name 00000009  00000000  00000000  0006fc73  2**0
                  CONTENTS, READONLY
 30 .quartus_project_dir 00000032  00000000  00000000  0006fc7c  2**0
                  CONTENTS, READONLY
 31 .jdi          000061e7  00000000  00000000  0006fcae  2**0
                  CONTENTS, READONLY
 32 .sopcinfo     0004d548  00000000  00000000  00075e95  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
04000210 l    d  .text	00000000 .text
0400fa4c l    d  .rodata	00000000 .rodata
0400fdbc l    d  .rwdata	00000000 .rwdata
0401339c l    d  .bss	00000000 .bss
00000230 l    d  .onchip_memory	00000000 .onchip_memory
040134fc l    d  .sdram_controller	00000000 .sdram_controller
10000000 l    d  .intel_generic_serial_flash_interface_top_0_avl_mem	00000000 .intel_generic_serial_flash_interface_top_0_avl_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../bsp//obj/HAL/src/crt0.o
04000248 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world_small.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0400fb0a l     O .rodata	00000010 zeroes.4404
04002854 l     F .text	000000bc __sbprintf
0400fb1a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04002a64 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
040045bc l     F .text	00000008 __fp_unlock
040045d0 l     F .text	0000019c __sinit.part.1
0400476c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0400fdbc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
04010200 l     O .rwdata	00000020 lc_ctype_charset
040101e0 l     O .rwdata	00000020 lc_message_charset
04010220 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0400fb4c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
04007c40 l     F .text	000000fc __sprint_r.part.0
0400fc70 l     O .rodata	00000010 zeroes.4349
0400927c l     F .text	000000bc __sbprintf
0400fc80 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0400d2c4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0400d3d8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0400d404 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0400d4f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0400d5e0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0400d6cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_read.c
0400d8e4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0401189c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0400db58 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0400dc94 l     F .text	00000034 alt_dev_reg
04010808 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0400df70 l     F .text	0000020c altera_avalon_jtag_uart_irq
0400e17c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0400e900 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0400ed60 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0400eec0 l     F .text	0000003c alt_get_errno
0400eefc l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
040133d0 g     O .bss	00000004 alt_instruction_exception_handler
04007284 g     F .text	00000074 _mprec_log10
04007370 g     F .text	0000008c __any_on
04009830 g     F .text	00000054 _isatty_r
0400fb58 g     O .rodata	00000028 __mprec_tinytens
0400d7e4 g     F .text	0000007c alt_main
040003f0 g     F .text	000000c0 _puts_r
040133fc g     O .bss	00000100 alt_irq
04009884 g     F .text	00000060 _lseek_r
040118ac g       *ABS*	00000000 __flash_rwdata_start
0400bc9c g     F .text	00000088 .hidden __eqdf2
040134fc g       *ABS*	00000000 __alt_heap_start
040003b4 g     F .text	0000003c printf
04009a9c g     F .text	0000009c _wcrtomb_r
04007b00 g     F .text	0000005c __sseek
0400491c g     F .text	00000010 __sinit
04009944 g     F .text	00000140 __swbuf_r
040053f0 g     F .text	0000007c _setlocale_r
04004774 g     F .text	00000078 __sfmoreglue
0400d884 g     F .text	00000024 __malloc_unlock
040060c0 g     F .text	0000015c memmove
04004904 g     F .text	00000018 _cleanup
04006344 g     F .text	000000a8 _Balloc
0400d8a8 g     F .text	0000003c alt_putstr
0400bd24 g     F .text	000000dc .hidden __gtdf2
0400f2e8 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
04000000 g       *ABS*	00000000 __flash_exceptions_start
040097d4 g     F .text	0000005c _fstat_r
040133b4 g     O .bss	00000004 errno
04007a7c g     F .text	00000008 __seofread
04000000 g       *ABS*	00000000 __alt_mem_sdram_controller
040133bc g     O .bss	00000004 alt_argv
04019868 g       *ABS*	00000000 _gp
04010688 g     O .rwdata	00000180 alt_fd_list
0400f30c g     F .text	00000090 alt_find_dev
04005f78 g     F .text	00000148 memcpy
040045c4 g     F .text	0000000c _cleanup_r
0400d0dc g     F .text	000000dc .hidden __floatsidf
0400ee44 g     F .text	0000007c alt_io_redirect
0400be00 g     F .text	000000f4 .hidden __ltdf2
0400fa4c g       *ABS*	00000000 __DTOR_END__
040004b0 g     F .text	00000014 puts
0400f568 g     F .text	0000009c alt_exception_cause_generated_bad_addr
04007960 g     F .text	00000074 __fpclassifyd
040071e0 g     F .text	000000a4 __ratio
04009260 g     F .text	0000001c __vfiprintf_internal
0400e374 g     F .text	0000021c altera_avalon_jtag_uart_read
04000384 g     F .text	00000030 _printf_r
0400a93c g     F .text	00000064 .hidden __udivsi3
0400d534 g     F .text	000000ac isatty
0400fba8 g     O .rodata	000000c8 __mprec_tens
0400546c g     F .text	0000000c __locale_charset
040133b0 g     O .bss	00000004 __malloc_top_pad
04011874 g     O .rwdata	00000004 __mb_cur_max
0400549c g     F .text	0000000c _localeconv_r
04006778 g     F .text	0000003c __i2b
04004da0 g     F .text	000004c8 __sfvwrite_r
040079d4 g     F .text	00000054 _sbrk_r
040098e4 g     F .text	00000060 _read_r
04011894 g     O .rwdata	00000004 alt_max_fd
040094c8 g     F .text	000000f0 _fclose_r
0400458c g     F .text	00000030 fflush
040133ac g     O .bss	00000004 __malloc_max_sbrked_mem
0400aa20 g     F .text	000008ac .hidden __adddf3
04006f88 g     F .text	0000010c __b2d
0400a280 g     F .text	000005c4 .hidden __umoddi3
0400d708 g     F .text	000000dc lseek
0401186c g     O .rwdata	00000004 _global_impure_ptr
040073fc g     F .text	00000564 _realloc_r
040134fc g       *ABS*	00000000 __bss_end
0400ec70 g     F .text	000000f0 alt_iic_isr_register
0400f1e0 g     F .text	00000108 alt_tick
04009c84 g     F .text	000005fc .hidden __udivdi3
04009730 g     F .text	00000024 _fputwc_r
0400fb80 g     O .rodata	00000028 __mprec_bigtens
0400655c g     F .text	00000104 __s2b
0400d1b8 g     F .text	000000a8 .hidden __floatunsidf
04006cc8 g     F .text	00000060 __mcmp
0400493c g     F .text	00000018 __fp_lock_all
0400ec24 g     F .text	0000004c alt_ic_irq_enabled
0400f144 g     F .text	0000009c alt_alarm_stop
040133c4 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
04010660 g     O .rwdata	00000028 alt_dev_null
0400e8e0 g     F .text	00000020 alt_dcache_flush_all
04006660 g     F .text	00000068 __hi0bits
0400d05c g     F .text	00000080 .hidden __fixdfsi
040118ac g       *ABS*	00000000 __ram_rwdata_end
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory
0401188c g     O .rwdata	00000008 alt_dev_list
0400db94 g     F .text	00000100 write
0400fdbc g       *ABS*	00000000 __ram_rodata_end
0400d440 g     F .text	000000b8 fstat
0400be00 g     F .text	000000f4 .hidden __ledf2
04006a40 g     F .text	00000140 __pow5mult
04007d54 g     F .text	0000150c ___vfiprintf_internal_r
040133a4 g     O .bss	00000004 __nlocale_changed
0400a9a0 g     F .text	00000058 .hidden __umodsi3
040134fc g       *ABS*	00000000 end
0400deb0 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0400fa4c g       *ABS*	00000000 __CTOR_LIST__
06000000 g       *ABS*	00000000 __alt_stack_pointer
0400d260 g     F .text	00000064 .hidden __clzsi2
0400e590 g     F .text	00000224 altera_avalon_jtag_uart_write
0400492c g     F .text	00000004 __sfp_lock_acquire
04005e94 g     F .text	000000e4 memchr
0400055c g     F .text	000022dc ___vfprintf_internal_r
04004a90 g     F .text	00000310 _free_r
04005478 g     F .text	00000010 __locale_mb_cur_max
0400f898 g     F .text	00000180 __call_exitprocs
040133a0 g     O .bss	00000004 __mlocale_changed
0400024c g     F .text	00000028 write_data
04011878 g     O .rwdata	00000004 __malloc_sbrk_base
04000210 g     F .text	0000003c _start
040133c8 g     O .bss	00000004 _alt_tick_rate
04006b80 g     F .text	00000148 __lshift
040133cc g     O .bss	00000004 _alt_nticks
0400d920 g     F .text	00000104 read
0400dd00 g     F .text	0000004c alt_sys_init
0400f780 g     F .text	00000118 __register_exitproc
040067b4 g     F .text	0000028c __multiply
0400e21c g     F .text	00000068 altera_avalon_jtag_uart_close
0400a9f8 g     F .text	00000028 .hidden __mulsi3
0400fdbc g       *ABS*	00000000 __ram_rwdata_start
0400fa4c g       *ABS*	00000000 __ram_rodata_start
040133d4 g     O .bss	00000028 __malloc_current_mallinfo
04007094 g     F .text	0000014c __d2b
0400dd4c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0400f4a4 g     F .text	000000c4 alt_get_fd
04009398 g     F .text	00000054 _close_r
0400f704 g     F .text	0000007c memcmp
0400de0c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
040134fc g       *ABS*	00000000 __alt_stack_base
0400de5c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04002910 g     F .text	00000154 __swsetup_r
0400b2cc g     F .text	000009d0 .hidden __divdf3
040047ec g     F .text	00000118 __sfp
040072f8 g     F .text	00000078 __copybits
04010258 g     O .rwdata	00000408 __malloc_av_
04004938 g     F .text	00000004 __sinit_lock_release
0400bef4 g     F .text	0000086c .hidden __muldf3
04007a28 g     F .text	00000054 __sread
0400f39c g     F .text	00000108 alt_find_file
0400e93c g     F .text	000000a4 alt_dev_llist_insert
0400d860 g     F .text	00000024 __malloc_lock
0400daa8 g     F .text	000000b0 sbrk
04004530 g     F .text	0000005c _fflush_r
040093ec g     F .text	000000dc _calloc_r
0401339c g       *ABS*	00000000 __bss_start
0400621c g     F .text	00000128 memset
040002a0 g     F .text	000000e4 main
040133c0 g     O .bss	00000004 alt_envp
040133a8 g     O .bss	00000004 __malloc_max_total_mem
0400ddac g     F .text	00000060 altera_avalon_jtag_uart_write_fd
04009a84 g     F .text	00000018 __swbuf
04000274 g     F .text	00000028 write_pixel
04007b5c g     F .text	00000008 __sclose
06000000 g       *ABS*	00000000 __alt_heap_limit
040095b8 g     F .text	00000014 fclose
04002c8c g     F .text	00001688 _dtoa_r
04005688 g     F .text	0000080c _malloc_r
04009bf8 g     F .text	00000030 __ascii_wctomb
04011898 g     O .rwdata	00000004 alt_errno
10000000 g       *ABS*	00000000 __alt_mem_intel_generic_serial_flash_interface_top_0_avl_mem
04005268 g     F .text	000000c4 _fwalk
0400a844 g     F .text	00000084 .hidden __divsi3
0400496c g     F .text	00000124 _malloc_trim_r
0400fa4c g       *ABS*	00000000 __CTOR_END__
04007b64 g     F .text	000000dc strcmp
0400fa4c g       *ABS*	00000000 __flash_rodata_start
0400fa4c g       *ABS*	00000000 __DTOR_LIST__
0400029c g     F .text	00000004 delay
0400bc9c g     F .text	00000088 .hidden __nedf2
0400dcc8 g     F .text	00000038 alt_irq_init
0400da24 g     F .text	00000084 alt_release_fd
0400fc90 g     O .rodata	00000100 .hidden __clz_tab
0401339c g     O .bss	00000004 _PathLocale
0400f604 g     F .text	00000014 atexit
04009338 g     F .text	00000060 _write_r
040054a8 g     F .text	00000018 setlocale
04011870 g     O .rwdata	00000004 _impure_ptr
040133b8 g     O .bss	00000004 alt_argc
04004314 g     F .text	0000021c __sflush_r
0400ea40 g     F .text	00000060 _do_dtors
04005494 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
04006f24 g     F .text	00000064 __ulp
04004954 g     F .text	00000018 __fp_unlock_all
04011884 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
040054c0 g     F .text	0000000c localeconv
0400eac0 g     F .text	00000050 alt_ic_isr_register
04011868 g     O .rwdata	00000004 ram
040118ac g       *ABS*	00000000 _edata
040134fc g       *ABS*	00000000 _end
040095cc g     F .text	00000164 __fputwc
00000230 g       *ABS*	00000000 __ram_exceptions_end
0400e284 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0400f650 g     F .text	0000009c _fputs_r
0400eb98 g     F .text	0000008c alt_ic_irq_disable
04007a84 g     F .text	0000007c __swrite
0401187c g     O .rwdata	00000004 __malloc_trim_threshold
04005488 g     F .text	0000000c __locale_msgcharset
0400f618 g     F .text	00000038 exit
0400532c g     F .text	000000c4 _fwalk_reent
04006d28 g     F .text	000001fc __mdiff
0400a8c8 g     F .text	00000074 .hidden __modsi3
06000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
04004930 g     F .text	00000004 __sfp_lock_release
0400fa18 g     F .text	00000034 _exit
0400e7b4 g     F .text	0000012c alt_alarm_start
040054cc g     F .text	000001bc __smakebuf_r
040004c4 g     F .text	00000098 strlen
0400efe8 g     F .text	0000015c open
0400bd24 g     F .text	000000dc .hidden __gedf2
04011880 g     O .rwdata	00000004 __wctomb
04007d3c g     F .text	00000018 __sprint_r
0400eaa0 g     F .text	00000020 alt_icache_flush_all
0400f6ec g     F .text	00000018 fputs
040118a0 g     O .rwdata	00000004 alt_priority_mask
0400eb10 g     F .text	00000088 alt_ic_irq_enable
04002838 g     F .text	0000001c __vfprintf_internal
04009c28 g     F .text	0000005c _wctomb_r
0400c760 g     F .text	000008fc .hidden __subdf3
040066c8 g     F .text	000000b0 __lo0bits
040118a4 g     O .rwdata	00000008 alt_alarm_list
0400e9e0 g     F .text	00000060 _do_ctors
04009b38 g     F .text	000000c0 wcrtomb
0400d300 g     F .text	000000d8 close
0400d648 g     F .text	00000084 alt_load
04009754 g     F .text	00000080 fputwc
04004934 g     F .text	00000004 __sinit_lock_acquire
04006414 g     F .text	00000148 __multadd
040063ec g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00410034 	movhi	at,1024
    ori r1, r1, %lo(_start)
   4:	08408414 	ori	at,at,528
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00810074 	movhi	r2,1025
 140:	108cff04 	addi	r2,r2,13308
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00810074 	movhi	r2,1025
 158:	108cff04 	addi	r2,r2,13308
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a6da17 	ldw	r2,-25752(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a6da17 	ldw	r2,-25752(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

04000210 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4000210:	06c18034 	movhi	sp,1536
    ori sp, sp, %lo(__alt_stack_pointer)
 4000214:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 4000218:	06810074 	movhi	gp,1025
    ori gp, gp, %lo(_gp)
 400021c:	d6a61a14 	ori	gp,gp,39016
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4000220:	00810074 	movhi	r2,1025
    ori r2, r2, %lo(__bss_start)
 4000224:	108ce714 	ori	r2,r2,13212

    movhi r3, %hi(__bss_end)
 4000228:	00c10074 	movhi	r3,1025
    ori r3, r3, %lo(__bss_end)
 400022c:	18cd3f14 	ori	r3,r3,13564

    beq r2, r3, 1f
 4000230:	10c00326 	beq	r2,r3,4000240 <_start+0x30>

0:
    stw zero, (r2)
 4000234:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4000238:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 400023c:	10fffd36 	bltu	r2,r3,4000234 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4000240:	400d6480 	call	400d648 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4000244:	400d7e40 	call	400d7e4 <alt_main>

04000248 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4000248:	003fff06 	br	4000248 <alt_after_alt_main>

0400024c <write_data>:
#define DATA_BIT	0
#define CMD_BIT		16
#define STEP_BIT	31

void write_data(uint8_t cmd, uint16_t data) {
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_LCD_CONTROL_BASE,
 400024c:	21003fcc 	andi	r4,r4,255
 4000250:	2008943a 	slli	r4,r4,16
 4000254:	297fffcc 	andi	r5,r5,65535
 4000258:	00944004 	movi	r2,20736
 400025c:	2146b03a 	or	r3,r4,r5
 4000260:	10c00035 	stwio	r3,0(r2)
			(0 << STEP_BIT) | (cmd << CMD_BIT) | data);
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_LCD_CONTROL_BASE,
 4000264:	29600034 	orhi	r5,r5,32768
 4000268:	2908b03a 	or	r4,r5,r4
 400026c:	11000035 	stwio	r4,0(r2)
 4000270:	f800283a 	ret

04000274 <write_pixel>:
// 565
// 5 4..0
// 11 10..5
// 15..11
void write_pixel(uint8_t r, uint8_t g, uint8_t b) {
	write_data(CMD_SET_P,
 4000274:	29400fcc 	andi	r5,r5,63
 4000278:	21003fcc 	andi	r4,r4,255
 400027c:	200892fa 	slli	r4,r4,11
 4000280:	280a917a 	slli	r5,r5,5
 4000284:	318007cc 	andi	r6,r6,31
 4000288:	290ab03a 	or	r5,r5,r4
 400028c:	298ab03a 	or	r5,r5,r6
 4000290:	297fffcc 	andi	r5,r5,65535
 4000294:	01000144 	movi	r4,5
 4000298:	400024c1 	jmpi	400024c <write_data>

0400029c <delay>:
			((r & 0x1F) << 11) | ((g & 0x3F) << 5) | ((b & 0x1F) << 0));
}
void delay() {
 400029c:	f800283a 	ret

040002a0 <main>:
alt_u8 *ram = SDRAM_CONTROLLER_BASE; //+ 0x10000);

#define FLASH_STEP 64
#define FLASH_START_ADD 0x1F2E200
int main() {
	alt_putstr("Hello from Nios IIddd2!\n");
 40002a0:	01010074 	movhi	r4,1025
}
alt_u8 *ram = SDRAM_CONTROLLER_BASE; //+ 0x10000);

#define FLASH_STEP 64
#define FLASH_START_ADD 0x1F2E200
int main() {
 40002a4:	defffa04 	addi	sp,sp,-24
	alt_putstr("Hello from Nios IIddd2!\n");
 40002a8:	213e9304 	addi	r4,r4,-1460
}
alt_u8 *ram = SDRAM_CONTROLLER_BASE; //+ 0x10000);

#define FLASH_STEP 64
#define FLASH_START_ADD 0x1F2E200
int main() {
 40002ac:	dd000415 	stw	r20,16(sp)
 40002b0:	dcc00315 	stw	r19,12(sp)
 40002b4:	dc800215 	stw	r18,8(sp)
 40002b8:	dc400115 	stw	r17,4(sp)
 40002bc:	dc000015 	stw	r16,0(sp)
 40002c0:	dfc00515 	stw	ra,20(sp)
	alt_putstr("Hello from Nios IIddd2!\n");
 40002c4:	04010034 	movhi	r16,1024
 40002c8:	400d8a80 	call	400d8a8 <alt_putstr>
//	for (i = 0; i < 100; i++) {
//		printf("0x%02x \n", *(--ram));
//	}

	int *p = SDRAM_CONTROLLER_BASE;
	int nError = 0;
 40002cc:	0023883a 	mov	r17,zero
	for (int i = 0; i < WRITE_CYCLES; i++) {
		IOWR_16DIRECT(SDRAM_CONTROLLER_BASE, i, WRITE_DATA);
 40002d0:	04d55544 	movi	r19,21845
		int nData = IORD_16DIRECT(SDRAM_CONTROLLER_BASE, i);
		if (nData != WRITE_DATA) {
 40002d4:	05155544 	movi	r20,21845
//		printf("0x%02x \n", *(--ram));
//	}

	int *p = SDRAM_CONTROLLER_BASE;
	int nError = 0;
	for (int i = 0; i < WRITE_CYCLES; i++) {
 40002d8:	04818034 	movhi	r18,1536
		IOWR_16DIRECT(SDRAM_CONTROLLER_BASE, i, WRITE_DATA);
 40002dc:	84c0002d 	sthio	r19,0(r16)
		int nData = IORD_16DIRECT(SDRAM_CONTROLLER_BASE, i);
 40002e0:	8180002b 	ldhuio	r6,0(r16)
 40002e4:	31bfffcc 	andi	r6,r6,65535
		if (nData != WRITE_DATA) {
 40002e8:	35000526 	beq	r6,r20,4000300 <main+0x60>
			nError++;
			printf("[ERROR] Address 0x%08x: 0x%08x\n",
 40002ec:	01010074 	movhi	r4,1025
 40002f0:	800b883a 	mov	r5,r16
 40002f4:	213e9a04 	addi	r4,r4,-1432
	int nError = 0;
	for (int i = 0; i < WRITE_CYCLES; i++) {
		IOWR_16DIRECT(SDRAM_CONTROLLER_BASE, i, WRITE_DATA);
		int nData = IORD_16DIRECT(SDRAM_CONTROLLER_BASE, i);
		if (nData != WRITE_DATA) {
			nError++;
 40002f8:	8c400044 	addi	r17,r17,1
			printf("[ERROR] Address 0x%08x: 0x%08x\n",
 40002fc:	40003b40 	call	40003b4 <printf>
 4000300:	84000044 	addi	r16,r16,1
//		printf("0x%02x \n", *(--ram));
//	}

	int *p = SDRAM_CONTROLLER_BASE;
	int nError = 0;
	for (int i = 0; i < WRITE_CYCLES; i++) {
 4000304:	84bff51e 	bne	r16,r18,40002dc <main+0x3c>
			printf("[ERROR] Address 0x%08x: 0x%08x\n",
					i + SDRAM_CONTROLLER_BASE, nData);
		}
	}

	printf("\n\n[FINISH] %d Addresses tested, %d errors.", WRITE_CYCLES,
 4000308:	01010074 	movhi	r4,1025
 400030c:	880d883a 	mov	r6,r17
 4000310:	01408034 	movhi	r5,512
 4000314:	213ea204 	addi	r4,r4,-1400
 4000318:	40003b40 	call	40003b4 <printf>
			nError);

	//printf("Device ID: %x\n", read_device_id());
	//printf("Status reg: %x\n", read_status_register());
	//enter_4byte_addressing_mode();
	IOWR(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_CSR_BASE, 0x4,
 400031c:	00940404 	movi	r2,20496
 4000320:	10000035 	stwio	zero,0(r2)
			0x00000000);
	IOWR(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_CSR_BASE, 0x0,
 4000324:	00940004 	movi	r2,20480
 4000328:	00c04044 	movi	r3,257
 400032c:	10c00035 	stwio	r3,0(r2)
			0x00000101);
	IOWR(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_CSR_BASE, 0x5,
 4000330:	00940504 	movi	r2,20500
 4000334:	00c000c4 	movi	r3,3
 4000338:	10c00035 	stwio	r3,0(r2)
 400033c:	0405f334 	movhi	r16,6092
			0x00000003);

	for (int add = FLASH_START_ADD;
 4000340:	0446aeb4 	movhi	r17,6842
	//enter_4byte_addressing_mode();
	IOWR(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_CSR_BASE, 0x4,
			0x00000000);
	IOWR(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_CSR_BASE, 0x0,
			0x00000101);
	IOWR(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_CSR_BASE, 0x5,
 4000344:	84220004 	addi	r16,r16,-30720
			0x00000003);

	for (int add = FLASH_START_ADD;
 4000348:	8c620004 	addi	r17,r17,-30720
			add < (FLASH_START_ADD + FLASH_STEP * 240 * 400 * 2);
			add += FLASH_STEP * 2) {
		int value1 = 0xFF
				& IORD(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_MEM_BASE,
 400034c:	80800037 	ldwio	r2,0(r16)
						add);
		int value2 = 0xFF
				& IORD(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_MEM_BASE,
 4000350:	81404037 	ldwio	r5,256(r16)
						add + FLASH_STEP);
		write_data(CMD_SET_P, (value1 << 8) | (value2 << 0));
 4000354:	01000144 	movi	r4,5
 4000358:	10803fcc 	andi	r2,r2,255
 400035c:	1004923a 	slli	r2,r2,8
 4000360:	29403fcc 	andi	r5,r5,255
 4000364:	84008004 	addi	r16,r16,512
 4000368:	114ab03a 	or	r5,r2,r5
 400036c:	400024c0 	call	400024c <write_data>
	IOWR(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_CSR_BASE, 0x0,
			0x00000101);
	IOWR(INTEL_GENERIC_SERIAL_FLASH_INTERFACE_TOP_0_AVL_CSR_BASE, 0x5,
			0x00000003);

	for (int add = FLASH_START_ADD;
 4000370:	847ff61e 	bne	r16,r17,400034c <main+0xac>
						add + FLASH_STEP);
		write_data(CMD_SET_P, (value1 << 8) | (value2 << 0));
		//printf("%08x: %02x\n",add/FLASH_STEP,0xff&value);
	}

	printf("printf test!\n");
 4000374:	01010074 	movhi	r4,1025
 4000378:	213ead04 	addi	r4,r4,-1356
 400037c:	40004b00 	call	40004b0 <puts>
 4000380:	003fff06 	br	4000380 <main+0xe0>

04000384 <_printf_r>:
 4000384:	defffd04 	addi	sp,sp,-12
 4000388:	2805883a 	mov	r2,r5
 400038c:	dfc00015 	stw	ra,0(sp)
 4000390:	d9800115 	stw	r6,4(sp)
 4000394:	d9c00215 	stw	r7,8(sp)
 4000398:	21400217 	ldw	r5,8(r4)
 400039c:	d9c00104 	addi	r7,sp,4
 40003a0:	100d883a 	mov	r6,r2
 40003a4:	400055c0 	call	400055c <___vfprintf_internal_r>
 40003a8:	dfc00017 	ldw	ra,0(sp)
 40003ac:	dec00304 	addi	sp,sp,12
 40003b0:	f800283a 	ret

040003b4 <printf>:
 40003b4:	defffc04 	addi	sp,sp,-16
 40003b8:	dfc00015 	stw	ra,0(sp)
 40003bc:	d9400115 	stw	r5,4(sp)
 40003c0:	d9800215 	stw	r6,8(sp)
 40003c4:	d9c00315 	stw	r7,12(sp)
 40003c8:	00810074 	movhi	r2,1025
 40003cc:	10861c04 	addi	r2,r2,6256
 40003d0:	10800017 	ldw	r2,0(r2)
 40003d4:	200b883a 	mov	r5,r4
 40003d8:	d9800104 	addi	r6,sp,4
 40003dc:	11000217 	ldw	r4,8(r2)
 40003e0:	40028380 	call	4002838 <__vfprintf_internal>
 40003e4:	dfc00017 	ldw	ra,0(sp)
 40003e8:	dec00404 	addi	sp,sp,16
 40003ec:	f800283a 	ret

040003f0 <_puts_r>:
 40003f0:	defff604 	addi	sp,sp,-40
 40003f4:	dc000715 	stw	r16,28(sp)
 40003f8:	2021883a 	mov	r16,r4
 40003fc:	2809883a 	mov	r4,r5
 4000400:	dc400815 	stw	r17,32(sp)
 4000404:	dfc00915 	stw	ra,36(sp)
 4000408:	2823883a 	mov	r17,r5
 400040c:	40004c40 	call	40004c4 <strlen>
 4000410:	10c00044 	addi	r3,r2,1
 4000414:	d8800115 	stw	r2,4(sp)
 4000418:	00810074 	movhi	r2,1025
 400041c:	10beb104 	addi	r2,r2,-1340
 4000420:	d8800215 	stw	r2,8(sp)
 4000424:	00800044 	movi	r2,1
 4000428:	d8800315 	stw	r2,12(sp)
 400042c:	00800084 	movi	r2,2
 4000430:	dc400015 	stw	r17,0(sp)
 4000434:	d8c00615 	stw	r3,24(sp)
 4000438:	dec00415 	stw	sp,16(sp)
 400043c:	d8800515 	stw	r2,20(sp)
 4000440:	80000226 	beq	r16,zero,400044c <_puts_r+0x5c>
 4000444:	80800e17 	ldw	r2,56(r16)
 4000448:	10001426 	beq	r2,zero,400049c <_puts_r+0xac>
 400044c:	81400217 	ldw	r5,8(r16)
 4000450:	2880030b 	ldhu	r2,12(r5)
 4000454:	10c8000c 	andi	r3,r2,8192
 4000458:	1800061e 	bne	r3,zero,4000474 <_puts_r+0x84>
 400045c:	29001917 	ldw	r4,100(r5)
 4000460:	00f7ffc4 	movi	r3,-8193
 4000464:	10880014 	ori	r2,r2,8192
 4000468:	20c6703a 	and	r3,r4,r3
 400046c:	2880030d 	sth	r2,12(r5)
 4000470:	28c01915 	stw	r3,100(r5)
 4000474:	d9800404 	addi	r6,sp,16
 4000478:	8009883a 	mov	r4,r16
 400047c:	4004da00 	call	4004da0 <__sfvwrite_r>
 4000480:	1000091e 	bne	r2,zero,40004a8 <_puts_r+0xb8>
 4000484:	00800284 	movi	r2,10
 4000488:	dfc00917 	ldw	ra,36(sp)
 400048c:	dc400817 	ldw	r17,32(sp)
 4000490:	dc000717 	ldw	r16,28(sp)
 4000494:	dec00a04 	addi	sp,sp,40
 4000498:	f800283a 	ret
 400049c:	8009883a 	mov	r4,r16
 40004a0:	400491c0 	call	400491c <__sinit>
 40004a4:	003fe906 	br	400044c <_puts_r+0x5c>
 40004a8:	00bfffc4 	movi	r2,-1
 40004ac:	003ff606 	br	4000488 <_puts_r+0x98>

040004b0 <puts>:
 40004b0:	00810074 	movhi	r2,1025
 40004b4:	10861c04 	addi	r2,r2,6256
 40004b8:	200b883a 	mov	r5,r4
 40004bc:	11000017 	ldw	r4,0(r2)
 40004c0:	40003f01 	jmpi	40003f0 <_puts_r>

040004c4 <strlen>:
 40004c4:	208000cc 	andi	r2,r4,3
 40004c8:	10002026 	beq	r2,zero,400054c <strlen+0x88>
 40004cc:	20800007 	ldb	r2,0(r4)
 40004d0:	10002026 	beq	r2,zero,4000554 <strlen+0x90>
 40004d4:	2005883a 	mov	r2,r4
 40004d8:	00000206 	br	40004e4 <strlen+0x20>
 40004dc:	10c00007 	ldb	r3,0(r2)
 40004e0:	18001826 	beq	r3,zero,4000544 <strlen+0x80>
 40004e4:	10800044 	addi	r2,r2,1
 40004e8:	10c000cc 	andi	r3,r2,3
 40004ec:	183ffb1e 	bne	r3,zero,40004dc <strlen+0x18>
 40004f0:	10c00017 	ldw	r3,0(r2)
 40004f4:	01ffbff4 	movhi	r7,65279
 40004f8:	39ffbfc4 	addi	r7,r7,-257
 40004fc:	00ca303a 	nor	r5,zero,r3
 4000500:	01a02074 	movhi	r6,32897
 4000504:	19c7883a 	add	r3,r3,r7
 4000508:	31a02004 	addi	r6,r6,-32640
 400050c:	1946703a 	and	r3,r3,r5
 4000510:	1986703a 	and	r3,r3,r6
 4000514:	1800091e 	bne	r3,zero,400053c <strlen+0x78>
 4000518:	10800104 	addi	r2,r2,4
 400051c:	10c00017 	ldw	r3,0(r2)
 4000520:	19cb883a 	add	r5,r3,r7
 4000524:	00c6303a 	nor	r3,zero,r3
 4000528:	28c6703a 	and	r3,r5,r3
 400052c:	1986703a 	and	r3,r3,r6
 4000530:	183ff926 	beq	r3,zero,4000518 <strlen+0x54>
 4000534:	00000106 	br	400053c <strlen+0x78>
 4000538:	10800044 	addi	r2,r2,1
 400053c:	10c00007 	ldb	r3,0(r2)
 4000540:	183ffd1e 	bne	r3,zero,4000538 <strlen+0x74>
 4000544:	1105c83a 	sub	r2,r2,r4
 4000548:	f800283a 	ret
 400054c:	2005883a 	mov	r2,r4
 4000550:	003fe706 	br	40004f0 <strlen+0x2c>
 4000554:	0005883a 	mov	r2,zero
 4000558:	f800283a 	ret

0400055c <___vfprintf_internal_r>:
 400055c:	deffb804 	addi	sp,sp,-288
 4000560:	dfc04715 	stw	ra,284(sp)
 4000564:	ddc04515 	stw	r23,276(sp)
 4000568:	dd404315 	stw	r21,268(sp)
 400056c:	d9002d15 	stw	r4,180(sp)
 4000570:	282f883a 	mov	r23,r5
 4000574:	302b883a 	mov	r21,r6
 4000578:	d9c02e15 	stw	r7,184(sp)
 400057c:	df004615 	stw	fp,280(sp)
 4000580:	dd804415 	stw	r22,272(sp)
 4000584:	dd004215 	stw	r20,264(sp)
 4000588:	dcc04115 	stw	r19,260(sp)
 400058c:	dc804015 	stw	r18,256(sp)
 4000590:	dc403f15 	stw	r17,252(sp)
 4000594:	dc003e15 	stw	r16,248(sp)
 4000598:	400549c0 	call	400549c <_localeconv_r>
 400059c:	10800017 	ldw	r2,0(r2)
 40005a0:	1009883a 	mov	r4,r2
 40005a4:	d8803415 	stw	r2,208(sp)
 40005a8:	40004c40 	call	40004c4 <strlen>
 40005ac:	d8803715 	stw	r2,220(sp)
 40005b0:	d8802d17 	ldw	r2,180(sp)
 40005b4:	10000226 	beq	r2,zero,40005c0 <___vfprintf_internal_r+0x64>
 40005b8:	10800e17 	ldw	r2,56(r2)
 40005bc:	1000fb26 	beq	r2,zero,40009ac <___vfprintf_internal_r+0x450>
 40005c0:	b880030b 	ldhu	r2,12(r23)
 40005c4:	10c8000c 	andi	r3,r2,8192
 40005c8:	1800061e 	bne	r3,zero,40005e4 <___vfprintf_internal_r+0x88>
 40005cc:	b9001917 	ldw	r4,100(r23)
 40005d0:	00f7ffc4 	movi	r3,-8193
 40005d4:	10880014 	ori	r2,r2,8192
 40005d8:	20c6703a 	and	r3,r4,r3
 40005dc:	b880030d 	sth	r2,12(r23)
 40005e0:	b8c01915 	stw	r3,100(r23)
 40005e4:	10c0020c 	andi	r3,r2,8
 40005e8:	1800c326 	beq	r3,zero,40008f8 <___vfprintf_internal_r+0x39c>
 40005ec:	b8c00417 	ldw	r3,16(r23)
 40005f0:	1800c126 	beq	r3,zero,40008f8 <___vfprintf_internal_r+0x39c>
 40005f4:	1080068c 	andi	r2,r2,26
 40005f8:	00c00284 	movi	r3,10
 40005fc:	10c0c626 	beq	r2,r3,4000918 <___vfprintf_internal_r+0x3bc>
 4000600:	d8c00404 	addi	r3,sp,16
 4000604:	05010074 	movhi	r20,1025
 4000608:	d9001e04 	addi	r4,sp,120
 400060c:	a53ec284 	addi	r20,r20,-1270
 4000610:	d8c01e15 	stw	r3,120(sp)
 4000614:	d8002015 	stw	zero,128(sp)
 4000618:	d8001f15 	stw	zero,124(sp)
 400061c:	d8003315 	stw	zero,204(sp)
 4000620:	d8003615 	stw	zero,216(sp)
 4000624:	d8003815 	stw	zero,224(sp)
 4000628:	1811883a 	mov	r8,r3
 400062c:	d8003915 	stw	zero,228(sp)
 4000630:	d8003a15 	stw	zero,232(sp)
 4000634:	d8002f15 	stw	zero,188(sp)
 4000638:	d9002815 	stw	r4,160(sp)
 400063c:	a8800007 	ldb	r2,0(r21)
 4000640:	10028b26 	beq	r2,zero,4001070 <___vfprintf_internal_r+0xb14>
 4000644:	00c00944 	movi	r3,37
 4000648:	a823883a 	mov	r17,r21
 400064c:	10c0021e 	bne	r2,r3,4000658 <___vfprintf_internal_r+0xfc>
 4000650:	00001406 	br	40006a4 <___vfprintf_internal_r+0x148>
 4000654:	10c00326 	beq	r2,r3,4000664 <___vfprintf_internal_r+0x108>
 4000658:	8c400044 	addi	r17,r17,1
 400065c:	88800007 	ldb	r2,0(r17)
 4000660:	103ffc1e 	bne	r2,zero,4000654 <___vfprintf_internal_r+0xf8>
 4000664:	8d61c83a 	sub	r16,r17,r21
 4000668:	80000e26 	beq	r16,zero,40006a4 <___vfprintf_internal_r+0x148>
 400066c:	d8c02017 	ldw	r3,128(sp)
 4000670:	d8801f17 	ldw	r2,124(sp)
 4000674:	45400015 	stw	r21,0(r8)
 4000678:	1c07883a 	add	r3,r3,r16
 400067c:	10800044 	addi	r2,r2,1
 4000680:	d8c02015 	stw	r3,128(sp)
 4000684:	44000115 	stw	r16,4(r8)
 4000688:	d8801f15 	stw	r2,124(sp)
 400068c:	00c001c4 	movi	r3,7
 4000690:	1880a916 	blt	r3,r2,4000938 <___vfprintf_internal_r+0x3dc>
 4000694:	42000204 	addi	r8,r8,8
 4000698:	d9402f17 	ldw	r5,188(sp)
 400069c:	2c0b883a 	add	r5,r5,r16
 40006a0:	d9402f15 	stw	r5,188(sp)
 40006a4:	88800007 	ldb	r2,0(r17)
 40006a8:	1000aa26 	beq	r2,zero,4000954 <___vfprintf_internal_r+0x3f8>
 40006ac:	8d400044 	addi	r21,r17,1
 40006b0:	8c400047 	ldb	r17,1(r17)
 40006b4:	0021883a 	mov	r16,zero
 40006b8:	00bfffc4 	movi	r2,-1
 40006bc:	0025883a 	mov	r18,zero
 40006c0:	dc002905 	stb	r16,164(sp)
 40006c4:	d8002785 	stb	zero,158(sp)
 40006c8:	d8002b05 	stb	zero,172(sp)
 40006cc:	d8802a15 	stw	r2,168(sp)
 40006d0:	d8003115 	stw	zero,196(sp)
 40006d4:	04c01604 	movi	r19,88
 40006d8:	05800244 	movi	r22,9
 40006dc:	9021883a 	mov	r16,r18
 40006e0:	4039883a 	mov	fp,r8
 40006e4:	ad400044 	addi	r21,r21,1
 40006e8:	88bff804 	addi	r2,r17,-32
 40006ec:	98833236 	bltu	r19,r2,40013b8 <___vfprintf_internal_r+0xe5c>
 40006f0:	100490ba 	slli	r2,r2,2
 40006f4:	00c10034 	movhi	r3,1024
 40006f8:	18c1c204 	addi	r3,r3,1800
 40006fc:	10c5883a 	add	r2,r2,r3
 4000700:	10800017 	ldw	r2,0(r2)
 4000704:	1000683a 	jmp	r2
 4000708:	040012b0 	cmpltui	r16,zero,74
 400070c:	040013b8 	rdprs	r16,zero,78
 4000710:	040013b8 	rdprs	r16,zero,78
 4000714:	040012d0 	cmplti	r16,zero,75
 4000718:	040013b8 	rdprs	r16,zero,78
 400071c:	040013b8 	rdprs	r16,zero,78
 4000720:	040013b8 	rdprs	r16,zero,78
 4000724:	040013b8 	rdprs	r16,zero,78
 4000728:	040013b8 	rdprs	r16,zero,78
 400072c:	040013b8 	rdprs	r16,zero,78
 4000730:	040009b8 	rdprs	r16,zero,38
 4000734:	040011c0 	call	40011c <__ram_exceptions_end+0x3ffeec>
 4000738:	040013b8 	rdprs	r16,zero,78
 400073c:	0400087c 	xorhi	r16,zero,33
 4000740:	040009dc 	xori	r16,zero,39
 4000744:	040013b8 	rdprs	r16,zero,78
 4000748:	04000a2c 	andhi	r16,zero,40
 400074c:	04000a38 	rdprs	r16,zero,40
 4000750:	04000a38 	rdprs	r16,zero,40
 4000754:	04000a38 	rdprs	r16,zero,40
 4000758:	04000a38 	rdprs	r16,zero,40
 400075c:	04000a38 	rdprs	r16,zero,40
 4000760:	04000a38 	rdprs	r16,zero,40
 4000764:	04000a38 	rdprs	r16,zero,40
 4000768:	04000a38 	rdprs	r16,zero,40
 400076c:	04000a38 	rdprs	r16,zero,40
 4000770:	040013b8 	rdprs	r16,zero,78
 4000774:	040013b8 	rdprs	r16,zero,78
 4000778:	040013b8 	rdprs	r16,zero,78
 400077c:	040013b8 	rdprs	r16,zero,78
 4000780:	040013b8 	rdprs	r16,zero,78
 4000784:	040013b8 	rdprs	r16,zero,78
 4000788:	040013b8 	rdprs	r16,zero,78
 400078c:	040013b8 	rdprs	r16,zero,78
 4000790:	040013b8 	rdprs	r16,zero,78
 4000794:	040013b8 	rdprs	r16,zero,78
 4000798:	04000a74 	movhi	r16,41
 400079c:	04000b3c 	xorhi	r16,zero,44
 40007a0:	040013b8 	rdprs	r16,zero,78
 40007a4:	04000b3c 	xorhi	r16,zero,44
 40007a8:	040013b8 	rdprs	r16,zero,78
 40007ac:	040013b8 	rdprs	r16,zero,78
 40007b0:	040013b8 	rdprs	r16,zero,78
 40007b4:	040013b8 	rdprs	r16,zero,78
 40007b8:	04000be8 	cmpgeui	r16,zero,47
 40007bc:	040013b8 	rdprs	r16,zero,78
 40007c0:	040013b8 	rdprs	r16,zero,78
 40007c4:	04000bf4 	movhi	r16,47
 40007c8:	040013b8 	rdprs	r16,zero,78
 40007cc:	040013b8 	rdprs	r16,zero,78
 40007d0:	040013b8 	rdprs	r16,zero,78
 40007d4:	040013b8 	rdprs	r16,zero,78
 40007d8:	040013b8 	rdprs	r16,zero,78
 40007dc:	04001078 	rdprs	r16,zero,65
 40007e0:	040013b8 	rdprs	r16,zero,78
 40007e4:	040013b8 	rdprs	r16,zero,78
 40007e8:	040010e4 	muli	r16,zero,67
 40007ec:	040013b8 	rdprs	r16,zero,78
 40007f0:	040013b8 	rdprs	r16,zero,78
 40007f4:	040013b8 	rdprs	r16,zero,78
 40007f8:	040013b8 	rdprs	r16,zero,78
 40007fc:	040013b8 	rdprs	r16,zero,78
 4000800:	040013b8 	rdprs	r16,zero,78
 4000804:	040013b8 	rdprs	r16,zero,78
 4000808:	040013b8 	rdprs	r16,zero,78
 400080c:	040013b8 	rdprs	r16,zero,78
 4000810:	040013b8 	rdprs	r16,zero,78
 4000814:	0400135c 	xori	r16,zero,77
 4000818:	040012dc 	xori	r16,zero,75
 400081c:	04000b3c 	xorhi	r16,zero,44
 4000820:	04000b3c 	xorhi	r16,zero,44
 4000824:	04000b3c 	xorhi	r16,zero,44
 4000828:	040012fc 	xorhi	r16,zero,75
 400082c:	040012dc 	xori	r16,zero,75
 4000830:	040013b8 	rdprs	r16,zero,78
 4000834:	040013b8 	rdprs	r16,zero,78
 4000838:	04001308 	cmpgei	r16,zero,76
 400083c:	040013b8 	rdprs	r16,zero,78
 4000840:	0400131c 	xori	r16,zero,76
 4000844:	040011a0 	cmpeqi	r16,zero,70
 4000848:	04000888 	cmpgei	r16,zero,34
 400084c:	040011d8 	cmpnei	r16,zero,71
 4000850:	040013b8 	rdprs	r16,zero,78
 4000854:	040011e4 	muli	r16,zero,71
 4000858:	040013b8 	rdprs	r16,zero,78
 400085c:	04001248 	cmpgei	r16,zero,73
 4000860:	040013b8 	rdprs	r16,zero,78
 4000864:	040013b8 	rdprs	r16,zero,78
 4000868:	04001268 	cmpgeui	r16,zero,73
 400086c:	d8c03117 	ldw	r3,196(sp)
 4000870:	d8802e15 	stw	r2,184(sp)
 4000874:	00c7c83a 	sub	r3,zero,r3
 4000878:	d8c03115 	stw	r3,196(sp)
 400087c:	84000114 	ori	r16,r16,4
 4000880:	ac400007 	ldb	r17,0(r21)
 4000884:	003f9706 	br	40006e4 <___vfprintf_internal_r+0x188>
 4000888:	00800c04 	movi	r2,48
 400088c:	d8802705 	stb	r2,156(sp)
 4000890:	00801e04 	movi	r2,120
 4000894:	d8802745 	stb	r2,157(sp)
 4000898:	d9002a17 	ldw	r4,168(sp)
 400089c:	d8802e17 	ldw	r2,184(sp)
 40008a0:	d8002785 	stb	zero,158(sp)
 40008a4:	e011883a 	mov	r8,fp
 40008a8:	10c00104 	addi	r3,r2,4
 40008ac:	14c00017 	ldw	r19,0(r2)
 40008b0:	002d883a 	mov	r22,zero
 40008b4:	80800094 	ori	r2,r16,2
 40008b8:	2002ca16 	blt	r4,zero,40013e4 <___vfprintf_internal_r+0xe88>
 40008bc:	00bfdfc4 	movi	r2,-129
 40008c0:	80a4703a 	and	r18,r16,r2
 40008c4:	d8c02e15 	stw	r3,184(sp)
 40008c8:	94800094 	ori	r18,r18,2
 40008cc:	9802b41e 	bne	r19,zero,40013a0 <___vfprintf_internal_r+0xe44>
 40008d0:	01410074 	movhi	r5,1025
 40008d4:	297ebb04 	addi	r5,r5,-1300
 40008d8:	d9403915 	stw	r5,228(sp)
 40008dc:	04401e04 	movi	r17,120
 40008e0:	d8802a17 	ldw	r2,168(sp)
 40008e4:	0039883a 	mov	fp,zero
 40008e8:	1001fa26 	beq	r2,zero,40010d4 <___vfprintf_internal_r+0xb78>
 40008ec:	0027883a 	mov	r19,zero
 40008f0:	002d883a 	mov	r22,zero
 40008f4:	00021906 	br	400115c <___vfprintf_internal_r+0xc00>
 40008f8:	d9002d17 	ldw	r4,180(sp)
 40008fc:	b80b883a 	mov	r5,r23
 4000900:	40029100 	call	4002910 <__swsetup_r>
 4000904:	1005dc1e 	bne	r2,zero,4002078 <___vfprintf_internal_r+0x1b1c>
 4000908:	b880030b 	ldhu	r2,12(r23)
 400090c:	00c00284 	movi	r3,10
 4000910:	1080068c 	andi	r2,r2,26
 4000914:	10ff3a1e 	bne	r2,r3,4000600 <___vfprintf_internal_r+0xa4>
 4000918:	b880038f 	ldh	r2,14(r23)
 400091c:	103f3816 	blt	r2,zero,4000600 <___vfprintf_internal_r+0xa4>
 4000920:	d9c02e17 	ldw	r7,184(sp)
 4000924:	d9002d17 	ldw	r4,180(sp)
 4000928:	a80d883a 	mov	r6,r21
 400092c:	b80b883a 	mov	r5,r23
 4000930:	40028540 	call	4002854 <__sbprintf>
 4000934:	00001106 	br	400097c <___vfprintf_internal_r+0x420>
 4000938:	d9002d17 	ldw	r4,180(sp)
 400093c:	d9801e04 	addi	r6,sp,120
 4000940:	b80b883a 	mov	r5,r23
 4000944:	4007d3c0 	call	4007d3c <__sprint_r>
 4000948:	1000081e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 400094c:	da000404 	addi	r8,sp,16
 4000950:	003f5106 	br	4000698 <___vfprintf_internal_r+0x13c>
 4000954:	d8802017 	ldw	r2,128(sp)
 4000958:	10000426 	beq	r2,zero,400096c <___vfprintf_internal_r+0x410>
 400095c:	d9002d17 	ldw	r4,180(sp)
 4000960:	d9801e04 	addi	r6,sp,120
 4000964:	b80b883a 	mov	r5,r23
 4000968:	4007d3c0 	call	4007d3c <__sprint_r>
 400096c:	b880030b 	ldhu	r2,12(r23)
 4000970:	1080100c 	andi	r2,r2,64
 4000974:	1005c01e 	bne	r2,zero,4002078 <___vfprintf_internal_r+0x1b1c>
 4000978:	d8802f17 	ldw	r2,188(sp)
 400097c:	dfc04717 	ldw	ra,284(sp)
 4000980:	df004617 	ldw	fp,280(sp)
 4000984:	ddc04517 	ldw	r23,276(sp)
 4000988:	dd804417 	ldw	r22,272(sp)
 400098c:	dd404317 	ldw	r21,268(sp)
 4000990:	dd004217 	ldw	r20,264(sp)
 4000994:	dcc04117 	ldw	r19,260(sp)
 4000998:	dc804017 	ldw	r18,256(sp)
 400099c:	dc403f17 	ldw	r17,252(sp)
 40009a0:	dc003e17 	ldw	r16,248(sp)
 40009a4:	dec04804 	addi	sp,sp,288
 40009a8:	f800283a 	ret
 40009ac:	d9002d17 	ldw	r4,180(sp)
 40009b0:	400491c0 	call	400491c <__sinit>
 40009b4:	003f0206 	br	40005c0 <___vfprintf_internal_r+0x64>
 40009b8:	d9002e17 	ldw	r4,184(sp)
 40009bc:	d9402e17 	ldw	r5,184(sp)
 40009c0:	21000017 	ldw	r4,0(r4)
 40009c4:	28800104 	addi	r2,r5,4
 40009c8:	d9003115 	stw	r4,196(sp)
 40009cc:	203fa716 	blt	r4,zero,400086c <___vfprintf_internal_r+0x310>
 40009d0:	d8802e15 	stw	r2,184(sp)
 40009d4:	ac400007 	ldb	r17,0(r21)
 40009d8:	003f4206 	br	40006e4 <___vfprintf_internal_r+0x188>
 40009dc:	ac400007 	ldb	r17,0(r21)
 40009e0:	01000a84 	movi	r4,42
 40009e4:	a8c00044 	addi	r3,r21,1
 40009e8:	89075826 	beq	r17,r4,400274c <___vfprintf_internal_r+0x21f0>
 40009ec:	8cbff404 	addi	r18,r17,-48
 40009f0:	b486ae36 	bltu	r22,r18,40024ac <___vfprintf_internal_r+0x1f50>
 40009f4:	0009883a 	mov	r4,zero
 40009f8:	1823883a 	mov	r17,r3
 40009fc:	01400284 	movi	r5,10
 4000a00:	400a9f80 	call	400a9f8 <__mulsi3>
 4000a04:	88c00007 	ldb	r3,0(r17)
 4000a08:	1489883a 	add	r4,r2,r18
 4000a0c:	8d400044 	addi	r21,r17,1
 4000a10:	1cbff404 	addi	r18,r3,-48
 4000a14:	a823883a 	mov	r17,r21
 4000a18:	b4bff82e 	bgeu	r22,r18,40009fc <___vfprintf_internal_r+0x4a0>
 4000a1c:	1823883a 	mov	r17,r3
 4000a20:	2005f616 	blt	r4,zero,40021fc <___vfprintf_internal_r+0x1ca0>
 4000a24:	d9002a15 	stw	r4,168(sp)
 4000a28:	003f2f06 	br	40006e8 <___vfprintf_internal_r+0x18c>
 4000a2c:	84002014 	ori	r16,r16,128
 4000a30:	ac400007 	ldb	r17,0(r21)
 4000a34:	003f2b06 	br	40006e4 <___vfprintf_internal_r+0x188>
 4000a38:	8cbff404 	addi	r18,r17,-48
 4000a3c:	d8003115 	stw	zero,196(sp)
 4000a40:	0009883a 	mov	r4,zero
 4000a44:	a823883a 	mov	r17,r21
 4000a48:	01400284 	movi	r5,10
 4000a4c:	400a9f80 	call	400a9f8 <__mulsi3>
 4000a50:	88c00007 	ldb	r3,0(r17)
 4000a54:	9089883a 	add	r4,r18,r2
 4000a58:	ad400044 	addi	r21,r21,1
 4000a5c:	1cbff404 	addi	r18,r3,-48
 4000a60:	a823883a 	mov	r17,r21
 4000a64:	b4bff82e 	bgeu	r22,r18,4000a48 <___vfprintf_internal_r+0x4ec>
 4000a68:	1823883a 	mov	r17,r3
 4000a6c:	d9003115 	stw	r4,196(sp)
 4000a70:	003f1d06 	br	40006e8 <___vfprintf_internal_r+0x18c>
 4000a74:	8025883a 	mov	r18,r16
 4000a78:	dc002903 	ldbu	r16,164(sp)
 4000a7c:	e011883a 	mov	r8,fp
 4000a80:	84003fcc 	andi	r16,r16,255
 4000a84:	8007531e 	bne	r16,zero,40027d4 <___vfprintf_internal_r+0x2278>
 4000a88:	94800414 	ori	r18,r18,16
 4000a8c:	9080080c 	andi	r2,r18,32
 4000a90:	1003a326 	beq	r2,zero,4001920 <___vfprintf_internal_r+0x13c4>
 4000a94:	d9002e17 	ldw	r4,184(sp)
 4000a98:	20800117 	ldw	r2,4(r4)
 4000a9c:	24c00017 	ldw	r19,0(r4)
 4000aa0:	21000204 	addi	r4,r4,8
 4000aa4:	d9002e15 	stw	r4,184(sp)
 4000aa8:	102d883a 	mov	r22,r2
 4000aac:	10047316 	blt	r2,zero,4001c7c <___vfprintf_internal_r+0x1720>
 4000ab0:	d9002a17 	ldw	r4,168(sp)
 4000ab4:	df002783 	ldbu	fp,158(sp)
 4000ab8:	2003e416 	blt	r4,zero,4001a4c <___vfprintf_internal_r+0x14f0>
 4000abc:	00ffdfc4 	movi	r3,-129
 4000ac0:	9d84b03a 	or	r2,r19,r22
 4000ac4:	90e4703a 	and	r18,r18,r3
 4000ac8:	10018026 	beq	r2,zero,40010cc <___vfprintf_internal_r+0xb70>
 4000acc:	b003ab26 	beq	r22,zero,400197c <___vfprintf_internal_r+0x1420>
 4000ad0:	dc402915 	stw	r17,164(sp)
 4000ad4:	dc001e04 	addi	r16,sp,120
 4000ad8:	b023883a 	mov	r17,r22
 4000adc:	402d883a 	mov	r22,r8
 4000ae0:	9809883a 	mov	r4,r19
 4000ae4:	880b883a 	mov	r5,r17
 4000ae8:	01800284 	movi	r6,10
 4000aec:	000f883a 	mov	r7,zero
 4000af0:	400a2800 	call	400a280 <__umoddi3>
 4000af4:	10800c04 	addi	r2,r2,48
 4000af8:	843fffc4 	addi	r16,r16,-1
 4000afc:	9809883a 	mov	r4,r19
 4000b00:	880b883a 	mov	r5,r17
 4000b04:	80800005 	stb	r2,0(r16)
 4000b08:	01800284 	movi	r6,10
 4000b0c:	000f883a 	mov	r7,zero
 4000b10:	4009c840 	call	4009c84 <__udivdi3>
 4000b14:	1027883a 	mov	r19,r2
 4000b18:	10c4b03a 	or	r2,r2,r3
 4000b1c:	1823883a 	mov	r17,r3
 4000b20:	103fef1e 	bne	r2,zero,4000ae0 <___vfprintf_internal_r+0x584>
 4000b24:	d8c02817 	ldw	r3,160(sp)
 4000b28:	dc402917 	ldw	r17,164(sp)
 4000b2c:	b011883a 	mov	r8,r22
 4000b30:	1c07c83a 	sub	r3,r3,r16
 4000b34:	d8c02b15 	stw	r3,172(sp)
 4000b38:	00005f06 	br	4000cb8 <___vfprintf_internal_r+0x75c>
 4000b3c:	8025883a 	mov	r18,r16
 4000b40:	dc002903 	ldbu	r16,164(sp)
 4000b44:	e011883a 	mov	r8,fp
 4000b48:	84003fcc 	andi	r16,r16,255
 4000b4c:	80071e1e 	bne	r16,zero,40027c8 <___vfprintf_internal_r+0x226c>
 4000b50:	9080020c 	andi	r2,r18,8
 4000b54:	1004af26 	beq	r2,zero,4001e14 <___vfprintf_internal_r+0x18b8>
 4000b58:	d9002e17 	ldw	r4,184(sp)
 4000b5c:	d9402e17 	ldw	r5,184(sp)
 4000b60:	d8802e17 	ldw	r2,184(sp)
 4000b64:	21000017 	ldw	r4,0(r4)
 4000b68:	29400117 	ldw	r5,4(r5)
 4000b6c:	10800204 	addi	r2,r2,8
 4000b70:	d9003615 	stw	r4,216(sp)
 4000b74:	d9403815 	stw	r5,224(sp)
 4000b78:	d8802e15 	stw	r2,184(sp)
 4000b7c:	d9003617 	ldw	r4,216(sp)
 4000b80:	d9403817 	ldw	r5,224(sp)
 4000b84:	da003d15 	stw	r8,244(sp)
 4000b88:	04000044 	movi	r16,1
 4000b8c:	40079600 	call	4007960 <__fpclassifyd>
 4000b90:	da003d17 	ldw	r8,244(sp)
 4000b94:	1404441e 	bne	r2,r16,4001ca8 <___vfprintf_internal_r+0x174c>
 4000b98:	d9003617 	ldw	r4,216(sp)
 4000b9c:	d9403817 	ldw	r5,224(sp)
 4000ba0:	000d883a 	mov	r6,zero
 4000ba4:	000f883a 	mov	r7,zero
 4000ba8:	400be000 	call	400be00 <__ledf2>
 4000bac:	da003d17 	ldw	r8,244(sp)
 4000bb0:	1005e316 	blt	r2,zero,4002340 <___vfprintf_internal_r+0x1de4>
 4000bb4:	df002783 	ldbu	fp,158(sp)
 4000bb8:	008011c4 	movi	r2,71
 4000bbc:	1445580e 	bge	r2,r17,4002120 <___vfprintf_internal_r+0x1bc4>
 4000bc0:	04010074 	movhi	r16,1025
 4000bc4:	843eb304 	addi	r16,r16,-1332
 4000bc8:	00c000c4 	movi	r3,3
 4000bcc:	00bfdfc4 	movi	r2,-129
 4000bd0:	d8c02915 	stw	r3,164(sp)
 4000bd4:	90a4703a 	and	r18,r18,r2
 4000bd8:	d8c02b15 	stw	r3,172(sp)
 4000bdc:	d8002a15 	stw	zero,168(sp)
 4000be0:	d8003215 	stw	zero,200(sp)
 4000be4:	00003a06 	br	4000cd0 <___vfprintf_internal_r+0x774>
 4000be8:	84000214 	ori	r16,r16,8
 4000bec:	ac400007 	ldb	r17,0(r21)
 4000bf0:	003ebc06 	br	40006e4 <___vfprintf_internal_r+0x188>
 4000bf4:	8025883a 	mov	r18,r16
 4000bf8:	dc002903 	ldbu	r16,164(sp)
 4000bfc:	e011883a 	mov	r8,fp
 4000c00:	84003fcc 	andi	r16,r16,255
 4000c04:	8007001e 	bne	r16,zero,4002808 <___vfprintf_internal_r+0x22ac>
 4000c08:	94800414 	ori	r18,r18,16
 4000c0c:	9080080c 	andi	r2,r18,32
 4000c10:	1002fa26 	beq	r2,zero,40017fc <___vfprintf_internal_r+0x12a0>
 4000c14:	d9002e17 	ldw	r4,184(sp)
 4000c18:	d9402a17 	ldw	r5,168(sp)
 4000c1c:	d8002785 	stb	zero,158(sp)
 4000c20:	20800204 	addi	r2,r4,8
 4000c24:	24c00017 	ldw	r19,0(r4)
 4000c28:	25800117 	ldw	r22,4(r4)
 4000c2c:	2804b116 	blt	r5,zero,4001ef4 <___vfprintf_internal_r+0x1998>
 4000c30:	013fdfc4 	movi	r4,-129
 4000c34:	9d86b03a 	or	r3,r19,r22
 4000c38:	d8802e15 	stw	r2,184(sp)
 4000c3c:	9124703a 	and	r18,r18,r4
 4000c40:	1802fb1e 	bne	r3,zero,4001830 <___vfprintf_internal_r+0x12d4>
 4000c44:	d8c02a17 	ldw	r3,168(sp)
 4000c48:	0039883a 	mov	fp,zero
 4000c4c:	1805e526 	beq	r3,zero,40023e4 <___vfprintf_internal_r+0x1e88>
 4000c50:	0027883a 	mov	r19,zero
 4000c54:	002d883a 	mov	r22,zero
 4000c58:	dc001e04 	addi	r16,sp,120
 4000c5c:	9806d0fa 	srli	r3,r19,3
 4000c60:	b008977a 	slli	r4,r22,29
 4000c64:	b02cd0fa 	srli	r22,r22,3
 4000c68:	9cc001cc 	andi	r19,r19,7
 4000c6c:	98800c04 	addi	r2,r19,48
 4000c70:	843fffc4 	addi	r16,r16,-1
 4000c74:	20e6b03a 	or	r19,r4,r3
 4000c78:	80800005 	stb	r2,0(r16)
 4000c7c:	9d86b03a 	or	r3,r19,r22
 4000c80:	183ff61e 	bne	r3,zero,4000c5c <___vfprintf_internal_r+0x700>
 4000c84:	90c0004c 	andi	r3,r18,1
 4000c88:	18014126 	beq	r3,zero,4001190 <___vfprintf_internal_r+0xc34>
 4000c8c:	10803fcc 	andi	r2,r2,255
 4000c90:	1080201c 	xori	r2,r2,128
 4000c94:	10bfe004 	addi	r2,r2,-128
 4000c98:	00c00c04 	movi	r3,48
 4000c9c:	10c13c26 	beq	r2,r3,4001190 <___vfprintf_internal_r+0xc34>
 4000ca0:	80ffffc5 	stb	r3,-1(r16)
 4000ca4:	d8c02817 	ldw	r3,160(sp)
 4000ca8:	80bfffc4 	addi	r2,r16,-1
 4000cac:	1021883a 	mov	r16,r2
 4000cb0:	1887c83a 	sub	r3,r3,r2
 4000cb4:	d8c02b15 	stw	r3,172(sp)
 4000cb8:	d8802b17 	ldw	r2,172(sp)
 4000cbc:	d9002a17 	ldw	r4,168(sp)
 4000cc0:	1100010e 	bge	r2,r4,4000cc8 <___vfprintf_internal_r+0x76c>
 4000cc4:	2005883a 	mov	r2,r4
 4000cc8:	d8802915 	stw	r2,164(sp)
 4000ccc:	d8003215 	stw	zero,200(sp)
 4000cd0:	e7003fcc 	andi	fp,fp,255
 4000cd4:	e700201c 	xori	fp,fp,128
 4000cd8:	e73fe004 	addi	fp,fp,-128
 4000cdc:	e0000326 	beq	fp,zero,4000cec <___vfprintf_internal_r+0x790>
 4000ce0:	d8c02917 	ldw	r3,164(sp)
 4000ce4:	18c00044 	addi	r3,r3,1
 4000ce8:	d8c02915 	stw	r3,164(sp)
 4000cec:	90c0008c 	andi	r3,r18,2
 4000cf0:	d8c02c15 	stw	r3,176(sp)
 4000cf4:	18000326 	beq	r3,zero,4000d04 <___vfprintf_internal_r+0x7a8>
 4000cf8:	d8c02917 	ldw	r3,164(sp)
 4000cfc:	18c00084 	addi	r3,r3,2
 4000d00:	d8c02915 	stw	r3,164(sp)
 4000d04:	90c0210c 	andi	r3,r18,132
 4000d08:	d8c03015 	stw	r3,192(sp)
 4000d0c:	1801c51e 	bne	r3,zero,4001424 <___vfprintf_internal_r+0xec8>
 4000d10:	d9003117 	ldw	r4,196(sp)
 4000d14:	d8c02917 	ldw	r3,164(sp)
 4000d18:	20e7c83a 	sub	r19,r4,r3
 4000d1c:	04c1c10e 	bge	zero,r19,4001424 <___vfprintf_internal_r+0xec8>
 4000d20:	02400404 	movi	r9,16
 4000d24:	d8c02017 	ldw	r3,128(sp)
 4000d28:	d8801f17 	ldw	r2,124(sp)
 4000d2c:	4cc52f0e 	bge	r9,r19,40021ec <___vfprintf_internal_r+0x1c90>
 4000d30:	01410074 	movhi	r5,1025
 4000d34:	297ec684 	addi	r5,r5,-1254
 4000d38:	dc403b15 	stw	r17,236(sp)
 4000d3c:	d9403515 	stw	r5,212(sp)
 4000d40:	9823883a 	mov	r17,r19
 4000d44:	482d883a 	mov	r22,r9
 4000d48:	9027883a 	mov	r19,r18
 4000d4c:	070001c4 	movi	fp,7
 4000d50:	8025883a 	mov	r18,r16
 4000d54:	dc002d17 	ldw	r16,180(sp)
 4000d58:	00000306 	br	4000d68 <___vfprintf_internal_r+0x80c>
 4000d5c:	8c7ffc04 	addi	r17,r17,-16
 4000d60:	42000204 	addi	r8,r8,8
 4000d64:	b440130e 	bge	r22,r17,4000db4 <___vfprintf_internal_r+0x858>
 4000d68:	01010074 	movhi	r4,1025
 4000d6c:	18c00404 	addi	r3,r3,16
 4000d70:	10800044 	addi	r2,r2,1
 4000d74:	213ec684 	addi	r4,r4,-1254
 4000d78:	41000015 	stw	r4,0(r8)
 4000d7c:	45800115 	stw	r22,4(r8)
 4000d80:	d8c02015 	stw	r3,128(sp)
 4000d84:	d8801f15 	stw	r2,124(sp)
 4000d88:	e0bff40e 	bge	fp,r2,4000d5c <___vfprintf_internal_r+0x800>
 4000d8c:	d9801e04 	addi	r6,sp,120
 4000d90:	b80b883a 	mov	r5,r23
 4000d94:	8009883a 	mov	r4,r16
 4000d98:	4007d3c0 	call	4007d3c <__sprint_r>
 4000d9c:	103ef31e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4000da0:	8c7ffc04 	addi	r17,r17,-16
 4000da4:	d8c02017 	ldw	r3,128(sp)
 4000da8:	d8801f17 	ldw	r2,124(sp)
 4000dac:	da000404 	addi	r8,sp,16
 4000db0:	b47fed16 	blt	r22,r17,4000d68 <___vfprintf_internal_r+0x80c>
 4000db4:	9021883a 	mov	r16,r18
 4000db8:	9825883a 	mov	r18,r19
 4000dbc:	8827883a 	mov	r19,r17
 4000dc0:	dc403b17 	ldw	r17,236(sp)
 4000dc4:	d9403517 	ldw	r5,212(sp)
 4000dc8:	98c7883a 	add	r3,r19,r3
 4000dcc:	10800044 	addi	r2,r2,1
 4000dd0:	41400015 	stw	r5,0(r8)
 4000dd4:	44c00115 	stw	r19,4(r8)
 4000dd8:	d8c02015 	stw	r3,128(sp)
 4000ddc:	d8801f15 	stw	r2,124(sp)
 4000de0:	010001c4 	movi	r4,7
 4000de4:	2082c516 	blt	r4,r2,40018fc <___vfprintf_internal_r+0x13a0>
 4000de8:	df002787 	ldb	fp,158(sp)
 4000dec:	42000204 	addi	r8,r8,8
 4000df0:	e0000c26 	beq	fp,zero,4000e24 <___vfprintf_internal_r+0x8c8>
 4000df4:	d8801f17 	ldw	r2,124(sp)
 4000df8:	d9002784 	addi	r4,sp,158
 4000dfc:	18c00044 	addi	r3,r3,1
 4000e00:	10800044 	addi	r2,r2,1
 4000e04:	41000015 	stw	r4,0(r8)
 4000e08:	01000044 	movi	r4,1
 4000e0c:	41000115 	stw	r4,4(r8)
 4000e10:	d8c02015 	stw	r3,128(sp)
 4000e14:	d8801f15 	stw	r2,124(sp)
 4000e18:	010001c4 	movi	r4,7
 4000e1c:	20825e16 	blt	r4,r2,4001798 <___vfprintf_internal_r+0x123c>
 4000e20:	42000204 	addi	r8,r8,8
 4000e24:	d8802c17 	ldw	r2,176(sp)
 4000e28:	10000c26 	beq	r2,zero,4000e5c <___vfprintf_internal_r+0x900>
 4000e2c:	d8801f17 	ldw	r2,124(sp)
 4000e30:	d9002704 	addi	r4,sp,156
 4000e34:	18c00084 	addi	r3,r3,2
 4000e38:	10800044 	addi	r2,r2,1
 4000e3c:	41000015 	stw	r4,0(r8)
 4000e40:	01000084 	movi	r4,2
 4000e44:	41000115 	stw	r4,4(r8)
 4000e48:	d8c02015 	stw	r3,128(sp)
 4000e4c:	d8801f15 	stw	r2,124(sp)
 4000e50:	010001c4 	movi	r4,7
 4000e54:	20825816 	blt	r4,r2,40017b8 <___vfprintf_internal_r+0x125c>
 4000e58:	42000204 	addi	r8,r8,8
 4000e5c:	d9003017 	ldw	r4,192(sp)
 4000e60:	00802004 	movi	r2,128
 4000e64:	2081bb26 	beq	r4,r2,4001554 <___vfprintf_internal_r+0xff8>
 4000e68:	d9402a17 	ldw	r5,168(sp)
 4000e6c:	d8802b17 	ldw	r2,172(sp)
 4000e70:	28adc83a 	sub	r22,r5,r2
 4000e74:	0580310e 	bge	zero,r22,4000f3c <___vfprintf_internal_r+0x9e0>
 4000e78:	07000404 	movi	fp,16
 4000e7c:	d8801f17 	ldw	r2,124(sp)
 4000e80:	e584360e 	bge	fp,r22,4001f5c <___vfprintf_internal_r+0x1a00>
 4000e84:	01410074 	movhi	r5,1025
 4000e88:	297ec284 	addi	r5,r5,-1270
 4000e8c:	dc402a15 	stw	r17,168(sp)
 4000e90:	d9402c15 	stw	r5,176(sp)
 4000e94:	b023883a 	mov	r17,r22
 4000e98:	04c001c4 	movi	r19,7
 4000e9c:	a82d883a 	mov	r22,r21
 4000ea0:	902b883a 	mov	r21,r18
 4000ea4:	8025883a 	mov	r18,r16
 4000ea8:	dc002d17 	ldw	r16,180(sp)
 4000eac:	00000306 	br	4000ebc <___vfprintf_internal_r+0x960>
 4000eb0:	8c7ffc04 	addi	r17,r17,-16
 4000eb4:	42000204 	addi	r8,r8,8
 4000eb8:	e440110e 	bge	fp,r17,4000f00 <___vfprintf_internal_r+0x9a4>
 4000ebc:	18c00404 	addi	r3,r3,16
 4000ec0:	10800044 	addi	r2,r2,1
 4000ec4:	45000015 	stw	r20,0(r8)
 4000ec8:	47000115 	stw	fp,4(r8)
 4000ecc:	d8c02015 	stw	r3,128(sp)
 4000ed0:	d8801f15 	stw	r2,124(sp)
 4000ed4:	98bff60e 	bge	r19,r2,4000eb0 <___vfprintf_internal_r+0x954>
 4000ed8:	d9801e04 	addi	r6,sp,120
 4000edc:	b80b883a 	mov	r5,r23
 4000ee0:	8009883a 	mov	r4,r16
 4000ee4:	4007d3c0 	call	4007d3c <__sprint_r>
 4000ee8:	103ea01e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4000eec:	8c7ffc04 	addi	r17,r17,-16
 4000ef0:	d8c02017 	ldw	r3,128(sp)
 4000ef4:	d8801f17 	ldw	r2,124(sp)
 4000ef8:	da000404 	addi	r8,sp,16
 4000efc:	e47fef16 	blt	fp,r17,4000ebc <___vfprintf_internal_r+0x960>
 4000f00:	9021883a 	mov	r16,r18
 4000f04:	a825883a 	mov	r18,r21
 4000f08:	b02b883a 	mov	r21,r22
 4000f0c:	882d883a 	mov	r22,r17
 4000f10:	dc402a17 	ldw	r17,168(sp)
 4000f14:	d9002c17 	ldw	r4,176(sp)
 4000f18:	1d87883a 	add	r3,r3,r22
 4000f1c:	10800044 	addi	r2,r2,1
 4000f20:	41000015 	stw	r4,0(r8)
 4000f24:	45800115 	stw	r22,4(r8)
 4000f28:	d8c02015 	stw	r3,128(sp)
 4000f2c:	d8801f15 	stw	r2,124(sp)
 4000f30:	010001c4 	movi	r4,7
 4000f34:	20821016 	blt	r4,r2,4001778 <___vfprintf_internal_r+0x121c>
 4000f38:	42000204 	addi	r8,r8,8
 4000f3c:	9080400c 	andi	r2,r18,256
 4000f40:	10013a1e 	bne	r2,zero,400142c <___vfprintf_internal_r+0xed0>
 4000f44:	d9402b17 	ldw	r5,172(sp)
 4000f48:	d8801f17 	ldw	r2,124(sp)
 4000f4c:	44000015 	stw	r16,0(r8)
 4000f50:	1947883a 	add	r3,r3,r5
 4000f54:	10800044 	addi	r2,r2,1
 4000f58:	41400115 	stw	r5,4(r8)
 4000f5c:	d8c02015 	stw	r3,128(sp)
 4000f60:	d8801f15 	stw	r2,124(sp)
 4000f64:	010001c4 	movi	r4,7
 4000f68:	2081f516 	blt	r4,r2,4001740 <___vfprintf_internal_r+0x11e4>
 4000f6c:	42000204 	addi	r8,r8,8
 4000f70:	9480010c 	andi	r18,r18,4
 4000f74:	90003226 	beq	r18,zero,4001040 <___vfprintf_internal_r+0xae4>
 4000f78:	d9403117 	ldw	r5,196(sp)
 4000f7c:	d8802917 	ldw	r2,164(sp)
 4000f80:	28a1c83a 	sub	r16,r5,r2
 4000f84:	04002e0e 	bge	zero,r16,4001040 <___vfprintf_internal_r+0xae4>
 4000f88:	04400404 	movi	r17,16
 4000f8c:	d8801f17 	ldw	r2,124(sp)
 4000f90:	8c04c40e 	bge	r17,r16,40022a4 <___vfprintf_internal_r+0x1d48>
 4000f94:	01410074 	movhi	r5,1025
 4000f98:	297ec684 	addi	r5,r5,-1254
 4000f9c:	d9403515 	stw	r5,212(sp)
 4000fa0:	048001c4 	movi	r18,7
 4000fa4:	dcc02d17 	ldw	r19,180(sp)
 4000fa8:	00000306 	br	4000fb8 <___vfprintf_internal_r+0xa5c>
 4000fac:	843ffc04 	addi	r16,r16,-16
 4000fb0:	42000204 	addi	r8,r8,8
 4000fb4:	8c00130e 	bge	r17,r16,4001004 <___vfprintf_internal_r+0xaa8>
 4000fb8:	01010074 	movhi	r4,1025
 4000fbc:	18c00404 	addi	r3,r3,16
 4000fc0:	10800044 	addi	r2,r2,1
 4000fc4:	213ec684 	addi	r4,r4,-1254
 4000fc8:	41000015 	stw	r4,0(r8)
 4000fcc:	44400115 	stw	r17,4(r8)
 4000fd0:	d8c02015 	stw	r3,128(sp)
 4000fd4:	d8801f15 	stw	r2,124(sp)
 4000fd8:	90bff40e 	bge	r18,r2,4000fac <___vfprintf_internal_r+0xa50>
 4000fdc:	d9801e04 	addi	r6,sp,120
 4000fe0:	b80b883a 	mov	r5,r23
 4000fe4:	9809883a 	mov	r4,r19
 4000fe8:	4007d3c0 	call	4007d3c <__sprint_r>
 4000fec:	103e5f1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4000ff0:	843ffc04 	addi	r16,r16,-16
 4000ff4:	d8c02017 	ldw	r3,128(sp)
 4000ff8:	d8801f17 	ldw	r2,124(sp)
 4000ffc:	da000404 	addi	r8,sp,16
 4001000:	8c3fed16 	blt	r17,r16,4000fb8 <___vfprintf_internal_r+0xa5c>
 4001004:	d9403517 	ldw	r5,212(sp)
 4001008:	1c07883a 	add	r3,r3,r16
 400100c:	10800044 	addi	r2,r2,1
 4001010:	41400015 	stw	r5,0(r8)
 4001014:	44000115 	stw	r16,4(r8)
 4001018:	d8c02015 	stw	r3,128(sp)
 400101c:	d8801f15 	stw	r2,124(sp)
 4001020:	010001c4 	movi	r4,7
 4001024:	2080060e 	bge	r4,r2,4001040 <___vfprintf_internal_r+0xae4>
 4001028:	d9002d17 	ldw	r4,180(sp)
 400102c:	d9801e04 	addi	r6,sp,120
 4001030:	b80b883a 	mov	r5,r23
 4001034:	4007d3c0 	call	4007d3c <__sprint_r>
 4001038:	103e4c1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 400103c:	d8c02017 	ldw	r3,128(sp)
 4001040:	d8803117 	ldw	r2,196(sp)
 4001044:	d9002917 	ldw	r4,164(sp)
 4001048:	1100010e 	bge	r2,r4,4001050 <___vfprintf_internal_r+0xaf4>
 400104c:	2005883a 	mov	r2,r4
 4001050:	d9402f17 	ldw	r5,188(sp)
 4001054:	288b883a 	add	r5,r5,r2
 4001058:	d9402f15 	stw	r5,188(sp)
 400105c:	1801c01e 	bne	r3,zero,4001760 <___vfprintf_internal_r+0x1204>
 4001060:	a8800007 	ldb	r2,0(r21)
 4001064:	d8001f15 	stw	zero,124(sp)
 4001068:	da000404 	addi	r8,sp,16
 400106c:	103d751e 	bne	r2,zero,4000644 <___vfprintf_internal_r+0xe8>
 4001070:	a823883a 	mov	r17,r21
 4001074:	003d8b06 	br	40006a4 <___vfprintf_internal_r+0x148>
 4001078:	8025883a 	mov	r18,r16
 400107c:	dc002903 	ldbu	r16,164(sp)
 4001080:	e011883a 	mov	r8,fp
 4001084:	84003fcc 	andi	r16,r16,255
 4001088:	8005e51e 	bne	r16,zero,4002820 <___vfprintf_internal_r+0x22c4>
 400108c:	94800414 	ori	r18,r18,16
 4001090:	9080080c 	andi	r2,r18,32
 4001094:	10022b26 	beq	r2,zero,4001944 <___vfprintf_internal_r+0x13e8>
 4001098:	d9002e17 	ldw	r4,184(sp)
 400109c:	d9402a17 	ldw	r5,168(sp)
 40010a0:	d8002785 	stb	zero,158(sp)
 40010a4:	20c00204 	addi	r3,r4,8
 40010a8:	24c00017 	ldw	r19,0(r4)
 40010ac:	25800117 	ldw	r22,4(r4)
 40010b0:	28042e16 	blt	r5,zero,400216c <___vfprintf_internal_r+0x1c10>
 40010b4:	013fdfc4 	movi	r4,-129
 40010b8:	9d84b03a 	or	r2,r19,r22
 40010bc:	d8c02e15 	stw	r3,184(sp)
 40010c0:	9124703a 	and	r18,r18,r4
 40010c4:	0039883a 	mov	fp,zero
 40010c8:	103e801e 	bne	r2,zero,4000acc <___vfprintf_internal_r+0x570>
 40010cc:	d9002a17 	ldw	r4,168(sp)
 40010d0:	2002e01e 	bne	r4,zero,4001c54 <___vfprintf_internal_r+0x16f8>
 40010d4:	d8002a15 	stw	zero,168(sp)
 40010d8:	d8002b15 	stw	zero,172(sp)
 40010dc:	dc001e04 	addi	r16,sp,120
 40010e0:	003ef506 	br	4000cb8 <___vfprintf_internal_r+0x75c>
 40010e4:	8025883a 	mov	r18,r16
 40010e8:	dc002903 	ldbu	r16,164(sp)
 40010ec:	e011883a 	mov	r8,fp
 40010f0:	84003fcc 	andi	r16,r16,255
 40010f4:	8005ba1e 	bne	r16,zero,40027e0 <___vfprintf_internal_r+0x2284>
 40010f8:	01010074 	movhi	r4,1025
 40010fc:	213eb604 	addi	r4,r4,-1320
 4001100:	d9003915 	stw	r4,228(sp)
 4001104:	9080080c 	andi	r2,r18,32
 4001108:	10006126 	beq	r2,zero,4001290 <___vfprintf_internal_r+0xd34>
 400110c:	d9402e17 	ldw	r5,184(sp)
 4001110:	2cc00017 	ldw	r19,0(r5)
 4001114:	2d800117 	ldw	r22,4(r5)
 4001118:	29400204 	addi	r5,r5,8
 400111c:	d9402e15 	stw	r5,184(sp)
 4001120:	9080004c 	andi	r2,r18,1
 4001124:	1001ac26 	beq	r2,zero,40017d8 <___vfprintf_internal_r+0x127c>
 4001128:	9d84b03a 	or	r2,r19,r22
 400112c:	10038526 	beq	r2,zero,4001f44 <___vfprintf_internal_r+0x19e8>
 4001130:	d8c02a17 	ldw	r3,168(sp)
 4001134:	00800c04 	movi	r2,48
 4001138:	d8802705 	stb	r2,156(sp)
 400113c:	dc402745 	stb	r17,157(sp)
 4001140:	d8002785 	stb	zero,158(sp)
 4001144:	90800094 	ori	r2,r18,2
 4001148:	18047916 	blt	r3,zero,4002330 <___vfprintf_internal_r+0x1dd4>
 400114c:	00bfdfc4 	movi	r2,-129
 4001150:	90a4703a 	and	r18,r18,r2
 4001154:	94800094 	ori	r18,r18,2
 4001158:	0039883a 	mov	fp,zero
 400115c:	d9003917 	ldw	r4,228(sp)
 4001160:	dc001e04 	addi	r16,sp,120
 4001164:	988003cc 	andi	r2,r19,15
 4001168:	b006973a 	slli	r3,r22,28
 400116c:	2085883a 	add	r2,r4,r2
 4001170:	9826d13a 	srli	r19,r19,4
 4001174:	10800003 	ldbu	r2,0(r2)
 4001178:	b02cd13a 	srli	r22,r22,4
 400117c:	843fffc4 	addi	r16,r16,-1
 4001180:	1ce6b03a 	or	r19,r3,r19
 4001184:	80800005 	stb	r2,0(r16)
 4001188:	9d84b03a 	or	r2,r19,r22
 400118c:	103ff51e 	bne	r2,zero,4001164 <___vfprintf_internal_r+0xc08>
 4001190:	d8c02817 	ldw	r3,160(sp)
 4001194:	1c07c83a 	sub	r3,r3,r16
 4001198:	d8c02b15 	stw	r3,172(sp)
 400119c:	003ec606 	br	4000cb8 <___vfprintf_internal_r+0x75c>
 40011a0:	8025883a 	mov	r18,r16
 40011a4:	dc002903 	ldbu	r16,164(sp)
 40011a8:	e011883a 	mov	r8,fp
 40011ac:	84003fcc 	andi	r16,r16,255
 40011b0:	803e9626 	beq	r16,zero,4000c0c <___vfprintf_internal_r+0x6b0>
 40011b4:	d8c02b03 	ldbu	r3,172(sp)
 40011b8:	d8c02785 	stb	r3,158(sp)
 40011bc:	003e9306 	br	4000c0c <___vfprintf_internal_r+0x6b0>
 40011c0:	00c00044 	movi	r3,1
 40011c4:	d8c02905 	stb	r3,164(sp)
 40011c8:	00c00ac4 	movi	r3,43
 40011cc:	d8c02b05 	stb	r3,172(sp)
 40011d0:	ac400007 	ldb	r17,0(r21)
 40011d4:	003d4306 	br	40006e4 <___vfprintf_internal_r+0x188>
 40011d8:	84000814 	ori	r16,r16,32
 40011dc:	ac400007 	ldb	r17,0(r21)
 40011e0:	003d4006 	br	40006e4 <___vfprintf_internal_r+0x188>
 40011e4:	d8802e17 	ldw	r2,184(sp)
 40011e8:	8025883a 	mov	r18,r16
 40011ec:	d8002785 	stb	zero,158(sp)
 40011f0:	14000017 	ldw	r16,0(r2)
 40011f4:	e011883a 	mov	r8,fp
 40011f8:	14c00104 	addi	r19,r2,4
 40011fc:	80042d26 	beq	r16,zero,40022b4 <___vfprintf_internal_r+0x1d58>
 4001200:	d8c02a17 	ldw	r3,168(sp)
 4001204:	1803e416 	blt	r3,zero,4002198 <___vfprintf_internal_r+0x1c3c>
 4001208:	180d883a 	mov	r6,r3
 400120c:	000b883a 	mov	r5,zero
 4001210:	8009883a 	mov	r4,r16
 4001214:	df003d15 	stw	fp,244(sp)
 4001218:	4005e940 	call	4005e94 <memchr>
 400121c:	da003d17 	ldw	r8,244(sp)
 4001220:	10046826 	beq	r2,zero,40023c4 <___vfprintf_internal_r+0x1e68>
 4001224:	1405c83a 	sub	r2,r2,r16
 4001228:	d8802b15 	stw	r2,172(sp)
 400122c:	1003e016 	blt	r2,zero,40021b0 <___vfprintf_internal_r+0x1c54>
 4001230:	df002783 	ldbu	fp,158(sp)
 4001234:	d8802915 	stw	r2,164(sp)
 4001238:	dcc02e15 	stw	r19,184(sp)
 400123c:	d8002a15 	stw	zero,168(sp)
 4001240:	d8003215 	stw	zero,200(sp)
 4001244:	003ea206 	br	4000cd0 <___vfprintf_internal_r+0x774>
 4001248:	8025883a 	mov	r18,r16
 400124c:	dc002903 	ldbu	r16,164(sp)
 4001250:	e011883a 	mov	r8,fp
 4001254:	84003fcc 	andi	r16,r16,255
 4001258:	803f8d26 	beq	r16,zero,4001090 <___vfprintf_internal_r+0xb34>
 400125c:	d8c02b03 	ldbu	r3,172(sp)
 4001260:	d8c02785 	stb	r3,158(sp)
 4001264:	003f8a06 	br	4001090 <___vfprintf_internal_r+0xb34>
 4001268:	8025883a 	mov	r18,r16
 400126c:	dc002903 	ldbu	r16,164(sp)
 4001270:	e011883a 	mov	r8,fp
 4001274:	84003fcc 	andi	r16,r16,255
 4001278:	8005661e 	bne	r16,zero,4002814 <___vfprintf_internal_r+0x22b8>
 400127c:	01010074 	movhi	r4,1025
 4001280:	213ebb04 	addi	r4,r4,-1300
 4001284:	d9003915 	stw	r4,228(sp)
 4001288:	9080080c 	andi	r2,r18,32
 400128c:	103f9f1e 	bne	r2,zero,400110c <___vfprintf_internal_r+0xbb0>
 4001290:	9080040c 	andi	r2,r18,16
 4001294:	1002eb26 	beq	r2,zero,4001e44 <___vfprintf_internal_r+0x18e8>
 4001298:	d8802e17 	ldw	r2,184(sp)
 400129c:	002d883a 	mov	r22,zero
 40012a0:	14c00017 	ldw	r19,0(r2)
 40012a4:	10800104 	addi	r2,r2,4
 40012a8:	d8802e15 	stw	r2,184(sp)
 40012ac:	003f9c06 	br	4001120 <___vfprintf_internal_r+0xbc4>
 40012b0:	d8802b07 	ldb	r2,172(sp)
 40012b4:	1002e11e 	bne	r2,zero,4001e3c <___vfprintf_internal_r+0x18e0>
 40012b8:	00c00044 	movi	r3,1
 40012bc:	d8c02905 	stb	r3,164(sp)
 40012c0:	00c00804 	movi	r3,32
 40012c4:	d8c02b05 	stb	r3,172(sp)
 40012c8:	ac400007 	ldb	r17,0(r21)
 40012cc:	003d0506 	br	40006e4 <___vfprintf_internal_r+0x188>
 40012d0:	84000054 	ori	r16,r16,1
 40012d4:	ac400007 	ldb	r17,0(r21)
 40012d8:	003d0206 	br	40006e4 <___vfprintf_internal_r+0x188>
 40012dc:	8025883a 	mov	r18,r16
 40012e0:	dc002903 	ldbu	r16,164(sp)
 40012e4:	e011883a 	mov	r8,fp
 40012e8:	84003fcc 	andi	r16,r16,255
 40012ec:	803de726 	beq	r16,zero,4000a8c <___vfprintf_internal_r+0x530>
 40012f0:	d8c02b03 	ldbu	r3,172(sp)
 40012f4:	d8c02785 	stb	r3,158(sp)
 40012f8:	003de406 	br	4000a8c <___vfprintf_internal_r+0x530>
 40012fc:	84001014 	ori	r16,r16,64
 4001300:	ac400007 	ldb	r17,0(r21)
 4001304:	003cf706 	br	40006e4 <___vfprintf_internal_r+0x188>
 4001308:	ac400007 	ldb	r17,0(r21)
 400130c:	00801b04 	movi	r2,108
 4001310:	88838f26 	beq	r17,r2,4002150 <___vfprintf_internal_r+0x1bf4>
 4001314:	84000414 	ori	r16,r16,16
 4001318:	003cf206 	br	40006e4 <___vfprintf_internal_r+0x188>
 400131c:	8025883a 	mov	r18,r16
 4001320:	dc002903 	ldbu	r16,164(sp)
 4001324:	e011883a 	mov	r8,fp
 4001328:	84003fcc 	andi	r16,r16,255
 400132c:	80053f1e 	bne	r16,zero,400282c <___vfprintf_internal_r+0x22d0>
 4001330:	9080080c 	andi	r2,r18,32
 4001334:	1002d226 	beq	r2,zero,4001e80 <___vfprintf_internal_r+0x1924>
 4001338:	d9002e17 	ldw	r4,184(sp)
 400133c:	d9402f17 	ldw	r5,188(sp)
 4001340:	20800017 	ldw	r2,0(r4)
 4001344:	2807d7fa 	srai	r3,r5,31
 4001348:	21000104 	addi	r4,r4,4
 400134c:	d9002e15 	stw	r4,184(sp)
 4001350:	11400015 	stw	r5,0(r2)
 4001354:	10c00115 	stw	r3,4(r2)
 4001358:	003cb806 	br	400063c <___vfprintf_internal_r+0xe0>
 400135c:	d8c02e17 	ldw	r3,184(sp)
 4001360:	d9002e17 	ldw	r4,184(sp)
 4001364:	8025883a 	mov	r18,r16
 4001368:	18800017 	ldw	r2,0(r3)
 400136c:	21000104 	addi	r4,r4,4
 4001370:	00c00044 	movi	r3,1
 4001374:	e011883a 	mov	r8,fp
 4001378:	d8c02915 	stw	r3,164(sp)
 400137c:	d8002785 	stb	zero,158(sp)
 4001380:	d8801405 	stb	r2,80(sp)
 4001384:	d9002e15 	stw	r4,184(sp)
 4001388:	d8c02b15 	stw	r3,172(sp)
 400138c:	d8002a15 	stw	zero,168(sp)
 4001390:	d8003215 	stw	zero,200(sp)
 4001394:	dc001404 	addi	r16,sp,80
 4001398:	0039883a 	mov	fp,zero
 400139c:	003e5306 	br	4000cec <___vfprintf_internal_r+0x790>
 40013a0:	01010074 	movhi	r4,1025
 40013a4:	213ebb04 	addi	r4,r4,-1300
 40013a8:	0039883a 	mov	fp,zero
 40013ac:	d9003915 	stw	r4,228(sp)
 40013b0:	04401e04 	movi	r17,120
 40013b4:	003f6906 	br	400115c <___vfprintf_internal_r+0xc00>
 40013b8:	8025883a 	mov	r18,r16
 40013bc:	dc002903 	ldbu	r16,164(sp)
 40013c0:	e011883a 	mov	r8,fp
 40013c4:	84003fcc 	andi	r16,r16,255
 40013c8:	8005081e 	bne	r16,zero,40027ec <___vfprintf_internal_r+0x2290>
 40013cc:	883d6126 	beq	r17,zero,4000954 <___vfprintf_internal_r+0x3f8>
 40013d0:	00c00044 	movi	r3,1
 40013d4:	d8c02915 	stw	r3,164(sp)
 40013d8:	dc401405 	stb	r17,80(sp)
 40013dc:	d8002785 	stb	zero,158(sp)
 40013e0:	003fe906 	br	4001388 <___vfprintf_internal_r+0xe2c>
 40013e4:	01410074 	movhi	r5,1025
 40013e8:	297ebb04 	addi	r5,r5,-1300
 40013ec:	d9403915 	stw	r5,228(sp)
 40013f0:	d8c02e15 	stw	r3,184(sp)
 40013f4:	1025883a 	mov	r18,r2
 40013f8:	04401e04 	movi	r17,120
 40013fc:	9d84b03a 	or	r2,r19,r22
 4001400:	1000fc1e 	bne	r2,zero,40017f4 <___vfprintf_internal_r+0x1298>
 4001404:	0039883a 	mov	fp,zero
 4001408:	00800084 	movi	r2,2
 400140c:	10803fcc 	andi	r2,r2,255
 4001410:	00c00044 	movi	r3,1
 4001414:	10c20f26 	beq	r2,r3,4001c54 <___vfprintf_internal_r+0x16f8>
 4001418:	00c00084 	movi	r3,2
 400141c:	10fd3326 	beq	r2,r3,40008ec <___vfprintf_internal_r+0x390>
 4001420:	003e0b06 	br	4000c50 <___vfprintf_internal_r+0x6f4>
 4001424:	d8c02017 	ldw	r3,128(sp)
 4001428:	003e7106 	br	4000df0 <___vfprintf_internal_r+0x894>
 400142c:	00801944 	movi	r2,101
 4001430:	14407e0e 	bge	r2,r17,400162c <___vfprintf_internal_r+0x10d0>
 4001434:	d9003617 	ldw	r4,216(sp)
 4001438:	d9403817 	ldw	r5,224(sp)
 400143c:	000d883a 	mov	r6,zero
 4001440:	000f883a 	mov	r7,zero
 4001444:	d8c03c15 	stw	r3,240(sp)
 4001448:	da003d15 	stw	r8,244(sp)
 400144c:	400bc9c0 	call	400bc9c <__eqdf2>
 4001450:	d8c03c17 	ldw	r3,240(sp)
 4001454:	da003d17 	ldw	r8,244(sp)
 4001458:	1000f71e 	bne	r2,zero,4001838 <___vfprintf_internal_r+0x12dc>
 400145c:	d8801f17 	ldw	r2,124(sp)
 4001460:	01010074 	movhi	r4,1025
 4001464:	213ec204 	addi	r4,r4,-1272
 4001468:	18c00044 	addi	r3,r3,1
 400146c:	10800044 	addi	r2,r2,1
 4001470:	41000015 	stw	r4,0(r8)
 4001474:	01000044 	movi	r4,1
 4001478:	41000115 	stw	r4,4(r8)
 400147c:	d8c02015 	stw	r3,128(sp)
 4001480:	d8801f15 	stw	r2,124(sp)
 4001484:	010001c4 	movi	r4,7
 4001488:	2082b816 	blt	r4,r2,4001f6c <___vfprintf_internal_r+0x1a10>
 400148c:	42000204 	addi	r8,r8,8
 4001490:	d8802617 	ldw	r2,152(sp)
 4001494:	d9403317 	ldw	r5,204(sp)
 4001498:	11400216 	blt	r2,r5,40014a4 <___vfprintf_internal_r+0xf48>
 400149c:	9080004c 	andi	r2,r18,1
 40014a0:	103eb326 	beq	r2,zero,4000f70 <___vfprintf_internal_r+0xa14>
 40014a4:	d8803717 	ldw	r2,220(sp)
 40014a8:	d9003417 	ldw	r4,208(sp)
 40014ac:	d9403717 	ldw	r5,220(sp)
 40014b0:	1887883a 	add	r3,r3,r2
 40014b4:	d8801f17 	ldw	r2,124(sp)
 40014b8:	41000015 	stw	r4,0(r8)
 40014bc:	41400115 	stw	r5,4(r8)
 40014c0:	10800044 	addi	r2,r2,1
 40014c4:	d8c02015 	stw	r3,128(sp)
 40014c8:	d8801f15 	stw	r2,124(sp)
 40014cc:	010001c4 	movi	r4,7
 40014d0:	20832916 	blt	r4,r2,4002178 <___vfprintf_internal_r+0x1c1c>
 40014d4:	42000204 	addi	r8,r8,8
 40014d8:	d8803317 	ldw	r2,204(sp)
 40014dc:	143fffc4 	addi	r16,r2,-1
 40014e0:	043ea30e 	bge	zero,r16,4000f70 <___vfprintf_internal_r+0xa14>
 40014e4:	04400404 	movi	r17,16
 40014e8:	d8801f17 	ldw	r2,124(sp)
 40014ec:	8c00880e 	bge	r17,r16,4001710 <___vfprintf_internal_r+0x11b4>
 40014f0:	01410074 	movhi	r5,1025
 40014f4:	297ec284 	addi	r5,r5,-1270
 40014f8:	d9402c15 	stw	r5,176(sp)
 40014fc:	058001c4 	movi	r22,7
 4001500:	dcc02d17 	ldw	r19,180(sp)
 4001504:	00000306 	br	4001514 <___vfprintf_internal_r+0xfb8>
 4001508:	42000204 	addi	r8,r8,8
 400150c:	843ffc04 	addi	r16,r16,-16
 4001510:	8c00820e 	bge	r17,r16,400171c <___vfprintf_internal_r+0x11c0>
 4001514:	18c00404 	addi	r3,r3,16
 4001518:	10800044 	addi	r2,r2,1
 400151c:	45000015 	stw	r20,0(r8)
 4001520:	44400115 	stw	r17,4(r8)
 4001524:	d8c02015 	stw	r3,128(sp)
 4001528:	d8801f15 	stw	r2,124(sp)
 400152c:	b0bff60e 	bge	r22,r2,4001508 <___vfprintf_internal_r+0xfac>
 4001530:	d9801e04 	addi	r6,sp,120
 4001534:	b80b883a 	mov	r5,r23
 4001538:	9809883a 	mov	r4,r19
 400153c:	4007d3c0 	call	4007d3c <__sprint_r>
 4001540:	103d0a1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001544:	d8c02017 	ldw	r3,128(sp)
 4001548:	d8801f17 	ldw	r2,124(sp)
 400154c:	da000404 	addi	r8,sp,16
 4001550:	003fee06 	br	400150c <___vfprintf_internal_r+0xfb0>
 4001554:	d9403117 	ldw	r5,196(sp)
 4001558:	d8802917 	ldw	r2,164(sp)
 400155c:	28adc83a 	sub	r22,r5,r2
 4001560:	05be410e 	bge	zero,r22,4000e68 <___vfprintf_internal_r+0x90c>
 4001564:	07000404 	movi	fp,16
 4001568:	d8801f17 	ldw	r2,124(sp)
 400156c:	e5838f0e 	bge	fp,r22,40023ac <___vfprintf_internal_r+0x1e50>
 4001570:	01410074 	movhi	r5,1025
 4001574:	297ec284 	addi	r5,r5,-1270
 4001578:	dc403015 	stw	r17,192(sp)
 400157c:	d9402c15 	stw	r5,176(sp)
 4001580:	b023883a 	mov	r17,r22
 4001584:	04c001c4 	movi	r19,7
 4001588:	a82d883a 	mov	r22,r21
 400158c:	902b883a 	mov	r21,r18
 4001590:	8025883a 	mov	r18,r16
 4001594:	dc002d17 	ldw	r16,180(sp)
 4001598:	00000306 	br	40015a8 <___vfprintf_internal_r+0x104c>
 400159c:	8c7ffc04 	addi	r17,r17,-16
 40015a0:	42000204 	addi	r8,r8,8
 40015a4:	e440110e 	bge	fp,r17,40015ec <___vfprintf_internal_r+0x1090>
 40015a8:	18c00404 	addi	r3,r3,16
 40015ac:	10800044 	addi	r2,r2,1
 40015b0:	45000015 	stw	r20,0(r8)
 40015b4:	47000115 	stw	fp,4(r8)
 40015b8:	d8c02015 	stw	r3,128(sp)
 40015bc:	d8801f15 	stw	r2,124(sp)
 40015c0:	98bff60e 	bge	r19,r2,400159c <___vfprintf_internal_r+0x1040>
 40015c4:	d9801e04 	addi	r6,sp,120
 40015c8:	b80b883a 	mov	r5,r23
 40015cc:	8009883a 	mov	r4,r16
 40015d0:	4007d3c0 	call	4007d3c <__sprint_r>
 40015d4:	103ce51e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 40015d8:	8c7ffc04 	addi	r17,r17,-16
 40015dc:	d8c02017 	ldw	r3,128(sp)
 40015e0:	d8801f17 	ldw	r2,124(sp)
 40015e4:	da000404 	addi	r8,sp,16
 40015e8:	e47fef16 	blt	fp,r17,40015a8 <___vfprintf_internal_r+0x104c>
 40015ec:	9021883a 	mov	r16,r18
 40015f0:	a825883a 	mov	r18,r21
 40015f4:	b02b883a 	mov	r21,r22
 40015f8:	882d883a 	mov	r22,r17
 40015fc:	dc403017 	ldw	r17,192(sp)
 4001600:	d9002c17 	ldw	r4,176(sp)
 4001604:	1d87883a 	add	r3,r3,r22
 4001608:	10800044 	addi	r2,r2,1
 400160c:	41000015 	stw	r4,0(r8)
 4001610:	45800115 	stw	r22,4(r8)
 4001614:	d8c02015 	stw	r3,128(sp)
 4001618:	d8801f15 	stw	r2,124(sp)
 400161c:	010001c4 	movi	r4,7
 4001620:	20818e16 	blt	r4,r2,4001c5c <___vfprintf_internal_r+0x1700>
 4001624:	42000204 	addi	r8,r8,8
 4001628:	003e0f06 	br	4000e68 <___vfprintf_internal_r+0x90c>
 400162c:	d9403317 	ldw	r5,204(sp)
 4001630:	00800044 	movi	r2,1
 4001634:	18c00044 	addi	r3,r3,1
 4001638:	1141530e 	bge	r2,r5,4001b88 <___vfprintf_internal_r+0x162c>
 400163c:	dc401f17 	ldw	r17,124(sp)
 4001640:	00800044 	movi	r2,1
 4001644:	40800115 	stw	r2,4(r8)
 4001648:	8c400044 	addi	r17,r17,1
 400164c:	44000015 	stw	r16,0(r8)
 4001650:	d8c02015 	stw	r3,128(sp)
 4001654:	dc401f15 	stw	r17,124(sp)
 4001658:	008001c4 	movi	r2,7
 400165c:	14416b16 	blt	r2,r17,4001c0c <___vfprintf_internal_r+0x16b0>
 4001660:	42000204 	addi	r8,r8,8
 4001664:	d8803717 	ldw	r2,220(sp)
 4001668:	d9003417 	ldw	r4,208(sp)
 400166c:	8c400044 	addi	r17,r17,1
 4001670:	10c7883a 	add	r3,r2,r3
 4001674:	40800115 	stw	r2,4(r8)
 4001678:	41000015 	stw	r4,0(r8)
 400167c:	d8c02015 	stw	r3,128(sp)
 4001680:	dc401f15 	stw	r17,124(sp)
 4001684:	008001c4 	movi	r2,7
 4001688:	14416916 	blt	r2,r17,4001c30 <___vfprintf_internal_r+0x16d4>
 400168c:	45800204 	addi	r22,r8,8
 4001690:	d9003617 	ldw	r4,216(sp)
 4001694:	d9403817 	ldw	r5,224(sp)
 4001698:	000d883a 	mov	r6,zero
 400169c:	000f883a 	mov	r7,zero
 40016a0:	d8c03c15 	stw	r3,240(sp)
 40016a4:	400bc9c0 	call	400bc9c <__eqdf2>
 40016a8:	d8c03c17 	ldw	r3,240(sp)
 40016ac:	1000bc26 	beq	r2,zero,40019a0 <___vfprintf_internal_r+0x1444>
 40016b0:	d9403317 	ldw	r5,204(sp)
 40016b4:	84000044 	addi	r16,r16,1
 40016b8:	8c400044 	addi	r17,r17,1
 40016bc:	28bfffc4 	addi	r2,r5,-1
 40016c0:	1887883a 	add	r3,r3,r2
 40016c4:	b0800115 	stw	r2,4(r22)
 40016c8:	b4000015 	stw	r16,0(r22)
 40016cc:	d8c02015 	stw	r3,128(sp)
 40016d0:	dc401f15 	stw	r17,124(sp)
 40016d4:	008001c4 	movi	r2,7
 40016d8:	14414316 	blt	r2,r17,4001be8 <___vfprintf_internal_r+0x168c>
 40016dc:	b5800204 	addi	r22,r22,8
 40016e0:	d9003a17 	ldw	r4,232(sp)
 40016e4:	df0022c4 	addi	fp,sp,139
 40016e8:	8c400044 	addi	r17,r17,1
 40016ec:	20c7883a 	add	r3,r4,r3
 40016f0:	b7000015 	stw	fp,0(r22)
 40016f4:	b1000115 	stw	r4,4(r22)
 40016f8:	d8c02015 	stw	r3,128(sp)
 40016fc:	dc401f15 	stw	r17,124(sp)
 4001700:	008001c4 	movi	r2,7
 4001704:	14400e16 	blt	r2,r17,4001740 <___vfprintf_internal_r+0x11e4>
 4001708:	b2000204 	addi	r8,r22,8
 400170c:	003e1806 	br	4000f70 <___vfprintf_internal_r+0xa14>
 4001710:	01010074 	movhi	r4,1025
 4001714:	213ec284 	addi	r4,r4,-1270
 4001718:	d9002c15 	stw	r4,176(sp)
 400171c:	d9002c17 	ldw	r4,176(sp)
 4001720:	1c07883a 	add	r3,r3,r16
 4001724:	44000115 	stw	r16,4(r8)
 4001728:	41000015 	stw	r4,0(r8)
 400172c:	10800044 	addi	r2,r2,1
 4001730:	d8c02015 	stw	r3,128(sp)
 4001734:	d8801f15 	stw	r2,124(sp)
 4001738:	010001c4 	movi	r4,7
 400173c:	20be0b0e 	bge	r4,r2,4000f6c <___vfprintf_internal_r+0xa10>
 4001740:	d9002d17 	ldw	r4,180(sp)
 4001744:	d9801e04 	addi	r6,sp,120
 4001748:	b80b883a 	mov	r5,r23
 400174c:	4007d3c0 	call	4007d3c <__sprint_r>
 4001750:	103c861e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001754:	d8c02017 	ldw	r3,128(sp)
 4001758:	da000404 	addi	r8,sp,16
 400175c:	003e0406 	br	4000f70 <___vfprintf_internal_r+0xa14>
 4001760:	d9002d17 	ldw	r4,180(sp)
 4001764:	d9801e04 	addi	r6,sp,120
 4001768:	b80b883a 	mov	r5,r23
 400176c:	4007d3c0 	call	4007d3c <__sprint_r>
 4001770:	103e3b26 	beq	r2,zero,4001060 <___vfprintf_internal_r+0xb04>
 4001774:	003c7d06 	br	400096c <___vfprintf_internal_r+0x410>
 4001778:	d9002d17 	ldw	r4,180(sp)
 400177c:	d9801e04 	addi	r6,sp,120
 4001780:	b80b883a 	mov	r5,r23
 4001784:	4007d3c0 	call	4007d3c <__sprint_r>
 4001788:	103c781e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 400178c:	d8c02017 	ldw	r3,128(sp)
 4001790:	da000404 	addi	r8,sp,16
 4001794:	003de906 	br	4000f3c <___vfprintf_internal_r+0x9e0>
 4001798:	d9002d17 	ldw	r4,180(sp)
 400179c:	d9801e04 	addi	r6,sp,120
 40017a0:	b80b883a 	mov	r5,r23
 40017a4:	4007d3c0 	call	4007d3c <__sprint_r>
 40017a8:	103c701e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 40017ac:	d8c02017 	ldw	r3,128(sp)
 40017b0:	da000404 	addi	r8,sp,16
 40017b4:	003d9b06 	br	4000e24 <___vfprintf_internal_r+0x8c8>
 40017b8:	d9002d17 	ldw	r4,180(sp)
 40017bc:	d9801e04 	addi	r6,sp,120
 40017c0:	b80b883a 	mov	r5,r23
 40017c4:	4007d3c0 	call	4007d3c <__sprint_r>
 40017c8:	103c681e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 40017cc:	d8c02017 	ldw	r3,128(sp)
 40017d0:	da000404 	addi	r8,sp,16
 40017d4:	003da106 	br	4000e5c <___vfprintf_internal_r+0x900>
 40017d8:	d9402a17 	ldw	r5,168(sp)
 40017dc:	d8002785 	stb	zero,158(sp)
 40017e0:	283f0616 	blt	r5,zero,40013fc <___vfprintf_internal_r+0xea0>
 40017e4:	00ffdfc4 	movi	r3,-129
 40017e8:	9d84b03a 	or	r2,r19,r22
 40017ec:	90e4703a 	and	r18,r18,r3
 40017f0:	103c3b26 	beq	r2,zero,40008e0 <___vfprintf_internal_r+0x384>
 40017f4:	0039883a 	mov	fp,zero
 40017f8:	003e5806 	br	400115c <___vfprintf_internal_r+0xc00>
 40017fc:	9080040c 	andi	r2,r18,16
 4001800:	1001b326 	beq	r2,zero,4001ed0 <___vfprintf_internal_r+0x1974>
 4001804:	d8c02e17 	ldw	r3,184(sp)
 4001808:	d9002a17 	ldw	r4,168(sp)
 400180c:	d8002785 	stb	zero,158(sp)
 4001810:	18800104 	addi	r2,r3,4
 4001814:	1cc00017 	ldw	r19,0(r3)
 4001818:	002d883a 	mov	r22,zero
 400181c:	2001b516 	blt	r4,zero,4001ef4 <___vfprintf_internal_r+0x1998>
 4001820:	00ffdfc4 	movi	r3,-129
 4001824:	d8802e15 	stw	r2,184(sp)
 4001828:	90e4703a 	and	r18,r18,r3
 400182c:	983d0526 	beq	r19,zero,4000c44 <___vfprintf_internal_r+0x6e8>
 4001830:	0039883a 	mov	fp,zero
 4001834:	003d0806 	br	4000c58 <___vfprintf_internal_r+0x6fc>
 4001838:	dc402617 	ldw	r17,152(sp)
 400183c:	0441d30e 	bge	zero,r17,4001f8c <___vfprintf_internal_r+0x1a30>
 4001840:	dc403217 	ldw	r17,200(sp)
 4001844:	d8803317 	ldw	r2,204(sp)
 4001848:	1440010e 	bge	r2,r17,4001850 <___vfprintf_internal_r+0x12f4>
 400184c:	1023883a 	mov	r17,r2
 4001850:	04400a0e 	bge	zero,r17,400187c <___vfprintf_internal_r+0x1320>
 4001854:	d8801f17 	ldw	r2,124(sp)
 4001858:	1c47883a 	add	r3,r3,r17
 400185c:	44000015 	stw	r16,0(r8)
 4001860:	10800044 	addi	r2,r2,1
 4001864:	44400115 	stw	r17,4(r8)
 4001868:	d8c02015 	stw	r3,128(sp)
 400186c:	d8801f15 	stw	r2,124(sp)
 4001870:	010001c4 	movi	r4,7
 4001874:	20826516 	blt	r4,r2,400220c <___vfprintf_internal_r+0x1cb0>
 4001878:	42000204 	addi	r8,r8,8
 400187c:	88026116 	blt	r17,zero,4002204 <___vfprintf_internal_r+0x1ca8>
 4001880:	d9003217 	ldw	r4,200(sp)
 4001884:	2463c83a 	sub	r17,r4,r17
 4001888:	04407b0e 	bge	zero,r17,4001a78 <___vfprintf_internal_r+0x151c>
 400188c:	05800404 	movi	r22,16
 4001890:	d8801f17 	ldw	r2,124(sp)
 4001894:	b4419d0e 	bge	r22,r17,4001f0c <___vfprintf_internal_r+0x19b0>
 4001898:	01010074 	movhi	r4,1025
 400189c:	213ec284 	addi	r4,r4,-1270
 40018a0:	d9002c15 	stw	r4,176(sp)
 40018a4:	070001c4 	movi	fp,7
 40018a8:	dcc02d17 	ldw	r19,180(sp)
 40018ac:	00000306 	br	40018bc <___vfprintf_internal_r+0x1360>
 40018b0:	42000204 	addi	r8,r8,8
 40018b4:	8c7ffc04 	addi	r17,r17,-16
 40018b8:	b441970e 	bge	r22,r17,4001f18 <___vfprintf_internal_r+0x19bc>
 40018bc:	18c00404 	addi	r3,r3,16
 40018c0:	10800044 	addi	r2,r2,1
 40018c4:	45000015 	stw	r20,0(r8)
 40018c8:	45800115 	stw	r22,4(r8)
 40018cc:	d8c02015 	stw	r3,128(sp)
 40018d0:	d8801f15 	stw	r2,124(sp)
 40018d4:	e0bff60e 	bge	fp,r2,40018b0 <___vfprintf_internal_r+0x1354>
 40018d8:	d9801e04 	addi	r6,sp,120
 40018dc:	b80b883a 	mov	r5,r23
 40018e0:	9809883a 	mov	r4,r19
 40018e4:	4007d3c0 	call	4007d3c <__sprint_r>
 40018e8:	103c201e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 40018ec:	d8c02017 	ldw	r3,128(sp)
 40018f0:	d8801f17 	ldw	r2,124(sp)
 40018f4:	da000404 	addi	r8,sp,16
 40018f8:	003fee06 	br	40018b4 <___vfprintf_internal_r+0x1358>
 40018fc:	d9002d17 	ldw	r4,180(sp)
 4001900:	d9801e04 	addi	r6,sp,120
 4001904:	b80b883a 	mov	r5,r23
 4001908:	4007d3c0 	call	4007d3c <__sprint_r>
 400190c:	103c171e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001910:	d8c02017 	ldw	r3,128(sp)
 4001914:	df002787 	ldb	fp,158(sp)
 4001918:	da000404 	addi	r8,sp,16
 400191c:	003d3406 	br	4000df0 <___vfprintf_internal_r+0x894>
 4001920:	9080040c 	andi	r2,r18,16
 4001924:	10016126 	beq	r2,zero,4001eac <___vfprintf_internal_r+0x1950>
 4001928:	d9402e17 	ldw	r5,184(sp)
 400192c:	2cc00017 	ldw	r19,0(r5)
 4001930:	29400104 	addi	r5,r5,4
 4001934:	d9402e15 	stw	r5,184(sp)
 4001938:	982dd7fa 	srai	r22,r19,31
 400193c:	b005883a 	mov	r2,r22
 4001940:	003c5a06 	br	4000aac <___vfprintf_internal_r+0x550>
 4001944:	9080040c 	andi	r2,r18,16
 4001948:	10003526 	beq	r2,zero,4001a20 <___vfprintf_internal_r+0x14c4>
 400194c:	d8c02e17 	ldw	r3,184(sp)
 4001950:	d9002a17 	ldw	r4,168(sp)
 4001954:	d8002785 	stb	zero,158(sp)
 4001958:	18800104 	addi	r2,r3,4
 400195c:	1cc00017 	ldw	r19,0(r3)
 4001960:	002d883a 	mov	r22,zero
 4001964:	20003716 	blt	r4,zero,4001a44 <___vfprintf_internal_r+0x14e8>
 4001968:	00ffdfc4 	movi	r3,-129
 400196c:	d8802e15 	stw	r2,184(sp)
 4001970:	90e4703a 	and	r18,r18,r3
 4001974:	0039883a 	mov	fp,zero
 4001978:	983dd426 	beq	r19,zero,40010cc <___vfprintf_internal_r+0xb70>
 400197c:	00800244 	movi	r2,9
 4001980:	14fc5336 	bltu	r2,r19,4000ad0 <___vfprintf_internal_r+0x574>
 4001984:	d8c02817 	ldw	r3,160(sp)
 4001988:	dc001dc4 	addi	r16,sp,119
 400198c:	9cc00c04 	addi	r19,r19,48
 4001990:	1c07c83a 	sub	r3,r3,r16
 4001994:	dcc01dc5 	stb	r19,119(sp)
 4001998:	d8c02b15 	stw	r3,172(sp)
 400199c:	003cc606 	br	4000cb8 <___vfprintf_internal_r+0x75c>
 40019a0:	d8803317 	ldw	r2,204(sp)
 40019a4:	143fffc4 	addi	r16,r2,-1
 40019a8:	043f4d0e 	bge	zero,r16,40016e0 <___vfprintf_internal_r+0x1184>
 40019ac:	07000404 	movi	fp,16
 40019b0:	e400810e 	bge	fp,r16,4001bb8 <___vfprintf_internal_r+0x165c>
 40019b4:	01410074 	movhi	r5,1025
 40019b8:	297ec284 	addi	r5,r5,-1270
 40019bc:	d9402c15 	stw	r5,176(sp)
 40019c0:	01c001c4 	movi	r7,7
 40019c4:	dcc02d17 	ldw	r19,180(sp)
 40019c8:	00000306 	br	40019d8 <___vfprintf_internal_r+0x147c>
 40019cc:	b5800204 	addi	r22,r22,8
 40019d0:	843ffc04 	addi	r16,r16,-16
 40019d4:	e4007b0e 	bge	fp,r16,4001bc4 <___vfprintf_internal_r+0x1668>
 40019d8:	18c00404 	addi	r3,r3,16
 40019dc:	8c400044 	addi	r17,r17,1
 40019e0:	b5000015 	stw	r20,0(r22)
 40019e4:	b7000115 	stw	fp,4(r22)
 40019e8:	d8c02015 	stw	r3,128(sp)
 40019ec:	dc401f15 	stw	r17,124(sp)
 40019f0:	3c7ff60e 	bge	r7,r17,40019cc <___vfprintf_internal_r+0x1470>
 40019f4:	d9801e04 	addi	r6,sp,120
 40019f8:	b80b883a 	mov	r5,r23
 40019fc:	9809883a 	mov	r4,r19
 4001a00:	d9c03c15 	stw	r7,240(sp)
 4001a04:	4007d3c0 	call	4007d3c <__sprint_r>
 4001a08:	d9c03c17 	ldw	r7,240(sp)
 4001a0c:	103bd71e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001a10:	d8c02017 	ldw	r3,128(sp)
 4001a14:	dc401f17 	ldw	r17,124(sp)
 4001a18:	dd800404 	addi	r22,sp,16
 4001a1c:	003fec06 	br	40019d0 <___vfprintf_internal_r+0x1474>
 4001a20:	9080100c 	andi	r2,r18,64
 4001a24:	d8002785 	stb	zero,158(sp)
 4001a28:	10010e26 	beq	r2,zero,4001e64 <___vfprintf_internal_r+0x1908>
 4001a2c:	d9402e17 	ldw	r5,184(sp)
 4001a30:	d8c02a17 	ldw	r3,168(sp)
 4001a34:	002d883a 	mov	r22,zero
 4001a38:	28800104 	addi	r2,r5,4
 4001a3c:	2cc0000b 	ldhu	r19,0(r5)
 4001a40:	183fc90e 	bge	r3,zero,4001968 <___vfprintf_internal_r+0x140c>
 4001a44:	d8802e15 	stw	r2,184(sp)
 4001a48:	0039883a 	mov	fp,zero
 4001a4c:	9d84b03a 	or	r2,r19,r22
 4001a50:	103c1e1e 	bne	r2,zero,4000acc <___vfprintf_internal_r+0x570>
 4001a54:	00800044 	movi	r2,1
 4001a58:	003e6c06 	br	400140c <___vfprintf_internal_r+0xeb0>
 4001a5c:	d9002d17 	ldw	r4,180(sp)
 4001a60:	d9801e04 	addi	r6,sp,120
 4001a64:	b80b883a 	mov	r5,r23
 4001a68:	4007d3c0 	call	4007d3c <__sprint_r>
 4001a6c:	103bbf1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001a70:	d8c02017 	ldw	r3,128(sp)
 4001a74:	da000404 	addi	r8,sp,16
 4001a78:	d9003217 	ldw	r4,200(sp)
 4001a7c:	d8802617 	ldw	r2,152(sp)
 4001a80:	d9403317 	ldw	r5,204(sp)
 4001a84:	8123883a 	add	r17,r16,r4
 4001a88:	11400216 	blt	r2,r5,4001a94 <___vfprintf_internal_r+0x1538>
 4001a8c:	9100004c 	andi	r4,r18,1
 4001a90:	20000d26 	beq	r4,zero,4001ac8 <___vfprintf_internal_r+0x156c>
 4001a94:	d9003717 	ldw	r4,220(sp)
 4001a98:	d9403417 	ldw	r5,208(sp)
 4001a9c:	1907883a 	add	r3,r3,r4
 4001aa0:	d9001f17 	ldw	r4,124(sp)
 4001aa4:	41400015 	stw	r5,0(r8)
 4001aa8:	d9403717 	ldw	r5,220(sp)
 4001aac:	21000044 	addi	r4,r4,1
 4001ab0:	d8c02015 	stw	r3,128(sp)
 4001ab4:	41400115 	stw	r5,4(r8)
 4001ab8:	d9001f15 	stw	r4,124(sp)
 4001abc:	014001c4 	movi	r5,7
 4001ac0:	2901e816 	blt	r5,r4,4002264 <___vfprintf_internal_r+0x1d08>
 4001ac4:	42000204 	addi	r8,r8,8
 4001ac8:	d9003317 	ldw	r4,204(sp)
 4001acc:	8121883a 	add	r16,r16,r4
 4001ad0:	2085c83a 	sub	r2,r4,r2
 4001ad4:	8461c83a 	sub	r16,r16,r17
 4001ad8:	1400010e 	bge	r2,r16,4001ae0 <___vfprintf_internal_r+0x1584>
 4001adc:	1021883a 	mov	r16,r2
 4001ae0:	04000a0e 	bge	zero,r16,4001b0c <___vfprintf_internal_r+0x15b0>
 4001ae4:	d9001f17 	ldw	r4,124(sp)
 4001ae8:	1c07883a 	add	r3,r3,r16
 4001aec:	44400015 	stw	r17,0(r8)
 4001af0:	21000044 	addi	r4,r4,1
 4001af4:	44000115 	stw	r16,4(r8)
 4001af8:	d8c02015 	stw	r3,128(sp)
 4001afc:	d9001f15 	stw	r4,124(sp)
 4001b00:	014001c4 	movi	r5,7
 4001b04:	2901fb16 	blt	r5,r4,40022f4 <___vfprintf_internal_r+0x1d98>
 4001b08:	42000204 	addi	r8,r8,8
 4001b0c:	8001f716 	blt	r16,zero,40022ec <___vfprintf_internal_r+0x1d90>
 4001b10:	1421c83a 	sub	r16,r2,r16
 4001b14:	043d160e 	bge	zero,r16,4000f70 <___vfprintf_internal_r+0xa14>
 4001b18:	04400404 	movi	r17,16
 4001b1c:	d8801f17 	ldw	r2,124(sp)
 4001b20:	8c3efb0e 	bge	r17,r16,4001710 <___vfprintf_internal_r+0x11b4>
 4001b24:	01410074 	movhi	r5,1025
 4001b28:	297ec284 	addi	r5,r5,-1270
 4001b2c:	d9402c15 	stw	r5,176(sp)
 4001b30:	058001c4 	movi	r22,7
 4001b34:	dcc02d17 	ldw	r19,180(sp)
 4001b38:	00000306 	br	4001b48 <___vfprintf_internal_r+0x15ec>
 4001b3c:	42000204 	addi	r8,r8,8
 4001b40:	843ffc04 	addi	r16,r16,-16
 4001b44:	8c3ef50e 	bge	r17,r16,400171c <___vfprintf_internal_r+0x11c0>
 4001b48:	18c00404 	addi	r3,r3,16
 4001b4c:	10800044 	addi	r2,r2,1
 4001b50:	45000015 	stw	r20,0(r8)
 4001b54:	44400115 	stw	r17,4(r8)
 4001b58:	d8c02015 	stw	r3,128(sp)
 4001b5c:	d8801f15 	stw	r2,124(sp)
 4001b60:	b0bff60e 	bge	r22,r2,4001b3c <___vfprintf_internal_r+0x15e0>
 4001b64:	d9801e04 	addi	r6,sp,120
 4001b68:	b80b883a 	mov	r5,r23
 4001b6c:	9809883a 	mov	r4,r19
 4001b70:	4007d3c0 	call	4007d3c <__sprint_r>
 4001b74:	103b7d1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001b78:	d8c02017 	ldw	r3,128(sp)
 4001b7c:	d8801f17 	ldw	r2,124(sp)
 4001b80:	da000404 	addi	r8,sp,16
 4001b84:	003fee06 	br	4001b40 <___vfprintf_internal_r+0x15e4>
 4001b88:	9088703a 	and	r4,r18,r2
 4001b8c:	203eab1e 	bne	r4,zero,400163c <___vfprintf_internal_r+0x10e0>
 4001b90:	dc401f17 	ldw	r17,124(sp)
 4001b94:	40800115 	stw	r2,4(r8)
 4001b98:	44000015 	stw	r16,0(r8)
 4001b9c:	8c400044 	addi	r17,r17,1
 4001ba0:	d8c02015 	stw	r3,128(sp)
 4001ba4:	dc401f15 	stw	r17,124(sp)
 4001ba8:	008001c4 	movi	r2,7
 4001bac:	14400e16 	blt	r2,r17,4001be8 <___vfprintf_internal_r+0x168c>
 4001bb0:	45800204 	addi	r22,r8,8
 4001bb4:	003eca06 	br	40016e0 <___vfprintf_internal_r+0x1184>
 4001bb8:	01010074 	movhi	r4,1025
 4001bbc:	213ec284 	addi	r4,r4,-1270
 4001bc0:	d9002c15 	stw	r4,176(sp)
 4001bc4:	d8802c17 	ldw	r2,176(sp)
 4001bc8:	1c07883a 	add	r3,r3,r16
 4001bcc:	8c400044 	addi	r17,r17,1
 4001bd0:	b0800015 	stw	r2,0(r22)
 4001bd4:	b4000115 	stw	r16,4(r22)
 4001bd8:	d8c02015 	stw	r3,128(sp)
 4001bdc:	dc401f15 	stw	r17,124(sp)
 4001be0:	008001c4 	movi	r2,7
 4001be4:	147ebd0e 	bge	r2,r17,40016dc <___vfprintf_internal_r+0x1180>
 4001be8:	d9002d17 	ldw	r4,180(sp)
 4001bec:	d9801e04 	addi	r6,sp,120
 4001bf0:	b80b883a 	mov	r5,r23
 4001bf4:	4007d3c0 	call	4007d3c <__sprint_r>
 4001bf8:	103b5c1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001bfc:	d8c02017 	ldw	r3,128(sp)
 4001c00:	dc401f17 	ldw	r17,124(sp)
 4001c04:	dd800404 	addi	r22,sp,16
 4001c08:	003eb506 	br	40016e0 <___vfprintf_internal_r+0x1184>
 4001c0c:	d9002d17 	ldw	r4,180(sp)
 4001c10:	d9801e04 	addi	r6,sp,120
 4001c14:	b80b883a 	mov	r5,r23
 4001c18:	4007d3c0 	call	4007d3c <__sprint_r>
 4001c1c:	103b531e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001c20:	d8c02017 	ldw	r3,128(sp)
 4001c24:	dc401f17 	ldw	r17,124(sp)
 4001c28:	da000404 	addi	r8,sp,16
 4001c2c:	003e8d06 	br	4001664 <___vfprintf_internal_r+0x1108>
 4001c30:	d9002d17 	ldw	r4,180(sp)
 4001c34:	d9801e04 	addi	r6,sp,120
 4001c38:	b80b883a 	mov	r5,r23
 4001c3c:	4007d3c0 	call	4007d3c <__sprint_r>
 4001c40:	103b4a1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001c44:	d8c02017 	ldw	r3,128(sp)
 4001c48:	dc401f17 	ldw	r17,124(sp)
 4001c4c:	dd800404 	addi	r22,sp,16
 4001c50:	003e8f06 	br	4001690 <___vfprintf_internal_r+0x1134>
 4001c54:	0027883a 	mov	r19,zero
 4001c58:	003f4a06 	br	4001984 <___vfprintf_internal_r+0x1428>
 4001c5c:	d9002d17 	ldw	r4,180(sp)
 4001c60:	d9801e04 	addi	r6,sp,120
 4001c64:	b80b883a 	mov	r5,r23
 4001c68:	4007d3c0 	call	4007d3c <__sprint_r>
 4001c6c:	103b3f1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001c70:	d8c02017 	ldw	r3,128(sp)
 4001c74:	da000404 	addi	r8,sp,16
 4001c78:	003c7b06 	br	4000e68 <___vfprintf_internal_r+0x90c>
 4001c7c:	d9402a17 	ldw	r5,168(sp)
 4001c80:	04e7c83a 	sub	r19,zero,r19
 4001c84:	07000b44 	movi	fp,45
 4001c88:	9804c03a 	cmpne	r2,r19,zero
 4001c8c:	05adc83a 	sub	r22,zero,r22
 4001c90:	df002785 	stb	fp,158(sp)
 4001c94:	b0adc83a 	sub	r22,r22,r2
 4001c98:	28017b16 	blt	r5,zero,4002288 <___vfprintf_internal_r+0x1d2c>
 4001c9c:	00bfdfc4 	movi	r2,-129
 4001ca0:	90a4703a 	and	r18,r18,r2
 4001ca4:	003b8906 	br	4000acc <___vfprintf_internal_r+0x570>
 4001ca8:	d9003617 	ldw	r4,216(sp)
 4001cac:	d9403817 	ldw	r5,224(sp)
 4001cb0:	da003d15 	stw	r8,244(sp)
 4001cb4:	40079600 	call	4007960 <__fpclassifyd>
 4001cb8:	da003d17 	ldw	r8,244(sp)
 4001cbc:	1000f026 	beq	r2,zero,4002080 <___vfprintf_internal_r+0x1b24>
 4001cc0:	d9002a17 	ldw	r4,168(sp)
 4001cc4:	05bff7c4 	movi	r22,-33
 4001cc8:	00bfffc4 	movi	r2,-1
 4001ccc:	8dac703a 	and	r22,r17,r22
 4001cd0:	20820026 	beq	r4,r2,40024d4 <___vfprintf_internal_r+0x1f78>
 4001cd4:	008011c4 	movi	r2,71
 4001cd8:	b081f726 	beq	r22,r2,40024b8 <___vfprintf_internal_r+0x1f5c>
 4001cdc:	d9003817 	ldw	r4,224(sp)
 4001ce0:	90c04014 	ori	r3,r18,256
 4001ce4:	d8c02c15 	stw	r3,176(sp)
 4001ce8:	20021516 	blt	r4,zero,4002540 <___vfprintf_internal_r+0x1fe4>
 4001cec:	dcc03817 	ldw	r19,224(sp)
 4001cf0:	d8002905 	stb	zero,164(sp)
 4001cf4:	00801984 	movi	r2,102
 4001cf8:	8881f926 	beq	r17,r2,40024e0 <___vfprintf_internal_r+0x1f84>
 4001cfc:	00801184 	movi	r2,70
 4001d00:	88821c26 	beq	r17,r2,4002574 <___vfprintf_internal_r+0x2018>
 4001d04:	00801144 	movi	r2,69
 4001d08:	b081ef26 	beq	r22,r2,40024c8 <___vfprintf_internal_r+0x1f6c>
 4001d0c:	d8c02a17 	ldw	r3,168(sp)
 4001d10:	d8802104 	addi	r2,sp,132
 4001d14:	d8800315 	stw	r2,12(sp)
 4001d18:	d9403617 	ldw	r5,216(sp)
 4001d1c:	d8802504 	addi	r2,sp,148
 4001d20:	d9002d17 	ldw	r4,180(sp)
 4001d24:	d8800215 	stw	r2,8(sp)
 4001d28:	d8802604 	addi	r2,sp,152
 4001d2c:	d8c00015 	stw	r3,0(sp)
 4001d30:	d8800115 	stw	r2,4(sp)
 4001d34:	01c00084 	movi	r7,2
 4001d38:	980d883a 	mov	r6,r19
 4001d3c:	d8c03c15 	stw	r3,240(sp)
 4001d40:	da003d15 	stw	r8,244(sp)
 4001d44:	4002c8c0 	call	4002c8c <_dtoa_r>
 4001d48:	1021883a 	mov	r16,r2
 4001d4c:	008019c4 	movi	r2,103
 4001d50:	d8c03c17 	ldw	r3,240(sp)
 4001d54:	da003d17 	ldw	r8,244(sp)
 4001d58:	88817126 	beq	r17,r2,4002320 <___vfprintf_internal_r+0x1dc4>
 4001d5c:	008011c4 	movi	r2,71
 4001d60:	88829126 	beq	r17,r2,40027a8 <___vfprintf_internal_r+0x224c>
 4001d64:	80f9883a 	add	fp,r16,r3
 4001d68:	d9003617 	ldw	r4,216(sp)
 4001d6c:	000d883a 	mov	r6,zero
 4001d70:	000f883a 	mov	r7,zero
 4001d74:	980b883a 	mov	r5,r19
 4001d78:	da003d15 	stw	r8,244(sp)
 4001d7c:	400bc9c0 	call	400bc9c <__eqdf2>
 4001d80:	da003d17 	ldw	r8,244(sp)
 4001d84:	10018d26 	beq	r2,zero,40023bc <___vfprintf_internal_r+0x1e60>
 4001d88:	d8802117 	ldw	r2,132(sp)
 4001d8c:	1700062e 	bgeu	r2,fp,4001da8 <___vfprintf_internal_r+0x184c>
 4001d90:	01000c04 	movi	r4,48
 4001d94:	10c00044 	addi	r3,r2,1
 4001d98:	d8c02115 	stw	r3,132(sp)
 4001d9c:	11000005 	stb	r4,0(r2)
 4001da0:	d8802117 	ldw	r2,132(sp)
 4001da4:	173ffb36 	bltu	r2,fp,4001d94 <___vfprintf_internal_r+0x1838>
 4001da8:	1405c83a 	sub	r2,r2,r16
 4001dac:	d8803315 	stw	r2,204(sp)
 4001db0:	008011c4 	movi	r2,71
 4001db4:	b0817626 	beq	r22,r2,4002390 <___vfprintf_internal_r+0x1e34>
 4001db8:	00801944 	movi	r2,101
 4001dbc:	1442800e 	bge	r2,r17,40027c0 <___vfprintf_internal_r+0x2264>
 4001dc0:	d8c02617 	ldw	r3,152(sp)
 4001dc4:	00801984 	movi	r2,102
 4001dc8:	d8c03215 	stw	r3,200(sp)
 4001dcc:	8881fe26 	beq	r17,r2,40025c8 <___vfprintf_internal_r+0x206c>
 4001dd0:	d8c03217 	ldw	r3,200(sp)
 4001dd4:	d9003317 	ldw	r4,204(sp)
 4001dd8:	1901dd16 	blt	r3,r4,4002550 <___vfprintf_internal_r+0x1ff4>
 4001ddc:	9480004c 	andi	r18,r18,1
 4001de0:	90022b1e 	bne	r18,zero,4002690 <___vfprintf_internal_r+0x2134>
 4001de4:	1805883a 	mov	r2,r3
 4001de8:	18028316 	blt	r3,zero,40027f8 <___vfprintf_internal_r+0x229c>
 4001dec:	d8c03217 	ldw	r3,200(sp)
 4001df0:	044019c4 	movi	r17,103
 4001df4:	d8c02b15 	stw	r3,172(sp)
 4001df8:	df002907 	ldb	fp,164(sp)
 4001dfc:	e001531e 	bne	fp,zero,400234c <___vfprintf_internal_r+0x1df0>
 4001e00:	df002783 	ldbu	fp,158(sp)
 4001e04:	d8802915 	stw	r2,164(sp)
 4001e08:	dc802c17 	ldw	r18,176(sp)
 4001e0c:	d8002a15 	stw	zero,168(sp)
 4001e10:	003baf06 	br	4000cd0 <___vfprintf_internal_r+0x774>
 4001e14:	d8c02e17 	ldw	r3,184(sp)
 4001e18:	d9002e17 	ldw	r4,184(sp)
 4001e1c:	d9402e17 	ldw	r5,184(sp)
 4001e20:	18c00017 	ldw	r3,0(r3)
 4001e24:	21000117 	ldw	r4,4(r4)
 4001e28:	29400204 	addi	r5,r5,8
 4001e2c:	d8c03615 	stw	r3,216(sp)
 4001e30:	d9003815 	stw	r4,224(sp)
 4001e34:	d9402e15 	stw	r5,184(sp)
 4001e38:	003b5006 	br	4000b7c <___vfprintf_internal_r+0x620>
 4001e3c:	ac400007 	ldb	r17,0(r21)
 4001e40:	003a2806 	br	40006e4 <___vfprintf_internal_r+0x188>
 4001e44:	9080100c 	andi	r2,r18,64
 4001e48:	1000a826 	beq	r2,zero,40020ec <___vfprintf_internal_r+0x1b90>
 4001e4c:	d8c02e17 	ldw	r3,184(sp)
 4001e50:	002d883a 	mov	r22,zero
 4001e54:	1cc0000b 	ldhu	r19,0(r3)
 4001e58:	18c00104 	addi	r3,r3,4
 4001e5c:	d8c02e15 	stw	r3,184(sp)
 4001e60:	003caf06 	br	4001120 <___vfprintf_internal_r+0xbc4>
 4001e64:	d9002e17 	ldw	r4,184(sp)
 4001e68:	d9402a17 	ldw	r5,168(sp)
 4001e6c:	002d883a 	mov	r22,zero
 4001e70:	20800104 	addi	r2,r4,4
 4001e74:	24c00017 	ldw	r19,0(r4)
 4001e78:	283ebb0e 	bge	r5,zero,4001968 <___vfprintf_internal_r+0x140c>
 4001e7c:	003ef106 	br	4001a44 <___vfprintf_internal_r+0x14e8>
 4001e80:	9080040c 	andi	r2,r18,16
 4001e84:	1000921e 	bne	r2,zero,40020d0 <___vfprintf_internal_r+0x1b74>
 4001e88:	9480100c 	andi	r18,r18,64
 4001e8c:	90013926 	beq	r18,zero,4002374 <___vfprintf_internal_r+0x1e18>
 4001e90:	d9402e17 	ldw	r5,184(sp)
 4001e94:	d8c02f17 	ldw	r3,188(sp)
 4001e98:	28800017 	ldw	r2,0(r5)
 4001e9c:	29400104 	addi	r5,r5,4
 4001ea0:	d9402e15 	stw	r5,184(sp)
 4001ea4:	10c0000d 	sth	r3,0(r2)
 4001ea8:	0039e406 	br	400063c <___vfprintf_internal_r+0xe0>
 4001eac:	9080100c 	andi	r2,r18,64
 4001eb0:	10008026 	beq	r2,zero,40020b4 <___vfprintf_internal_r+0x1b58>
 4001eb4:	d8802e17 	ldw	r2,184(sp)
 4001eb8:	14c0000f 	ldh	r19,0(r2)
 4001ebc:	10800104 	addi	r2,r2,4
 4001ec0:	d8802e15 	stw	r2,184(sp)
 4001ec4:	982dd7fa 	srai	r22,r19,31
 4001ec8:	b005883a 	mov	r2,r22
 4001ecc:	003af706 	br	4000aac <___vfprintf_internal_r+0x550>
 4001ed0:	9080100c 	andi	r2,r18,64
 4001ed4:	d8002785 	stb	zero,158(sp)
 4001ed8:	10008a1e 	bne	r2,zero,4002104 <___vfprintf_internal_r+0x1ba8>
 4001edc:	d9002e17 	ldw	r4,184(sp)
 4001ee0:	d9402a17 	ldw	r5,168(sp)
 4001ee4:	002d883a 	mov	r22,zero
 4001ee8:	20800104 	addi	r2,r4,4
 4001eec:	24c00017 	ldw	r19,0(r4)
 4001ef0:	283e4b0e 	bge	r5,zero,4001820 <___vfprintf_internal_r+0x12c4>
 4001ef4:	9d86b03a 	or	r3,r19,r22
 4001ef8:	d8802e15 	stw	r2,184(sp)
 4001efc:	183e4c1e 	bne	r3,zero,4001830 <___vfprintf_internal_r+0x12d4>
 4001f00:	0039883a 	mov	fp,zero
 4001f04:	0005883a 	mov	r2,zero
 4001f08:	003d4006 	br	400140c <___vfprintf_internal_r+0xeb0>
 4001f0c:	01410074 	movhi	r5,1025
 4001f10:	297ec284 	addi	r5,r5,-1270
 4001f14:	d9402c15 	stw	r5,176(sp)
 4001f18:	d9402c17 	ldw	r5,176(sp)
 4001f1c:	1c47883a 	add	r3,r3,r17
 4001f20:	10800044 	addi	r2,r2,1
 4001f24:	41400015 	stw	r5,0(r8)
 4001f28:	44400115 	stw	r17,4(r8)
 4001f2c:	d8c02015 	stw	r3,128(sp)
 4001f30:	d8801f15 	stw	r2,124(sp)
 4001f34:	010001c4 	movi	r4,7
 4001f38:	20bec816 	blt	r4,r2,4001a5c <___vfprintf_internal_r+0x1500>
 4001f3c:	42000204 	addi	r8,r8,8
 4001f40:	003ecd06 	br	4001a78 <___vfprintf_internal_r+0x151c>
 4001f44:	d9002a17 	ldw	r4,168(sp)
 4001f48:	d8002785 	stb	zero,158(sp)
 4001f4c:	203d2d16 	blt	r4,zero,4001404 <___vfprintf_internal_r+0xea8>
 4001f50:	00bfdfc4 	movi	r2,-129
 4001f54:	90a4703a 	and	r18,r18,r2
 4001f58:	003a6106 	br	40008e0 <___vfprintf_internal_r+0x384>
 4001f5c:	01010074 	movhi	r4,1025
 4001f60:	213ec284 	addi	r4,r4,-1270
 4001f64:	d9002c15 	stw	r4,176(sp)
 4001f68:	003bea06 	br	4000f14 <___vfprintf_internal_r+0x9b8>
 4001f6c:	d9002d17 	ldw	r4,180(sp)
 4001f70:	d9801e04 	addi	r6,sp,120
 4001f74:	b80b883a 	mov	r5,r23
 4001f78:	4007d3c0 	call	4007d3c <__sprint_r>
 4001f7c:	103a7b1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4001f80:	d8c02017 	ldw	r3,128(sp)
 4001f84:	da000404 	addi	r8,sp,16
 4001f88:	003d4106 	br	4001490 <___vfprintf_internal_r+0xf34>
 4001f8c:	d8801f17 	ldw	r2,124(sp)
 4001f90:	01410074 	movhi	r5,1025
 4001f94:	01000044 	movi	r4,1
 4001f98:	18c00044 	addi	r3,r3,1
 4001f9c:	10800044 	addi	r2,r2,1
 4001fa0:	297ec204 	addi	r5,r5,-1272
 4001fa4:	41000115 	stw	r4,4(r8)
 4001fa8:	41400015 	stw	r5,0(r8)
 4001fac:	d8c02015 	stw	r3,128(sp)
 4001fb0:	d8801f15 	stw	r2,124(sp)
 4001fb4:	010001c4 	movi	r4,7
 4001fb8:	20805c16 	blt	r4,r2,400212c <___vfprintf_internal_r+0x1bd0>
 4001fbc:	42000204 	addi	r8,r8,8
 4001fc0:	8800041e 	bne	r17,zero,4001fd4 <___vfprintf_internal_r+0x1a78>
 4001fc4:	d8803317 	ldw	r2,204(sp)
 4001fc8:	1000021e 	bne	r2,zero,4001fd4 <___vfprintf_internal_r+0x1a78>
 4001fcc:	9080004c 	andi	r2,r18,1
 4001fd0:	103be726 	beq	r2,zero,4000f70 <___vfprintf_internal_r+0xa14>
 4001fd4:	d9003717 	ldw	r4,220(sp)
 4001fd8:	d8801f17 	ldw	r2,124(sp)
 4001fdc:	d9403417 	ldw	r5,208(sp)
 4001fe0:	20c7883a 	add	r3,r4,r3
 4001fe4:	10800044 	addi	r2,r2,1
 4001fe8:	41000115 	stw	r4,4(r8)
 4001fec:	41400015 	stw	r5,0(r8)
 4001ff0:	d8c02015 	stw	r3,128(sp)
 4001ff4:	d8801f15 	stw	r2,124(sp)
 4001ff8:	010001c4 	movi	r4,7
 4001ffc:	20812116 	blt	r4,r2,4002484 <___vfprintf_internal_r+0x1f28>
 4002000:	42000204 	addi	r8,r8,8
 4002004:	0463c83a 	sub	r17,zero,r17
 4002008:	0440730e 	bge	zero,r17,40021d8 <___vfprintf_internal_r+0x1c7c>
 400200c:	05800404 	movi	r22,16
 4002010:	b440860e 	bge	r22,r17,400222c <___vfprintf_internal_r+0x1cd0>
 4002014:	01410074 	movhi	r5,1025
 4002018:	297ec284 	addi	r5,r5,-1270
 400201c:	d9402c15 	stw	r5,176(sp)
 4002020:	070001c4 	movi	fp,7
 4002024:	dcc02d17 	ldw	r19,180(sp)
 4002028:	00000306 	br	4002038 <___vfprintf_internal_r+0x1adc>
 400202c:	42000204 	addi	r8,r8,8
 4002030:	8c7ffc04 	addi	r17,r17,-16
 4002034:	b440800e 	bge	r22,r17,4002238 <___vfprintf_internal_r+0x1cdc>
 4002038:	18c00404 	addi	r3,r3,16
 400203c:	10800044 	addi	r2,r2,1
 4002040:	45000015 	stw	r20,0(r8)
 4002044:	45800115 	stw	r22,4(r8)
 4002048:	d8c02015 	stw	r3,128(sp)
 400204c:	d8801f15 	stw	r2,124(sp)
 4002050:	e0bff60e 	bge	fp,r2,400202c <___vfprintf_internal_r+0x1ad0>
 4002054:	d9801e04 	addi	r6,sp,120
 4002058:	b80b883a 	mov	r5,r23
 400205c:	9809883a 	mov	r4,r19
 4002060:	4007d3c0 	call	4007d3c <__sprint_r>
 4002064:	103a411e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4002068:	d8c02017 	ldw	r3,128(sp)
 400206c:	d8801f17 	ldw	r2,124(sp)
 4002070:	da000404 	addi	r8,sp,16
 4002074:	003fee06 	br	4002030 <___vfprintf_internal_r+0x1ad4>
 4002078:	00bfffc4 	movi	r2,-1
 400207c:	003a3f06 	br	400097c <___vfprintf_internal_r+0x420>
 4002080:	008011c4 	movi	r2,71
 4002084:	1440b816 	blt	r2,r17,4002368 <___vfprintf_internal_r+0x1e0c>
 4002088:	04010074 	movhi	r16,1025
 400208c:	843eb404 	addi	r16,r16,-1328
 4002090:	00c000c4 	movi	r3,3
 4002094:	00bfdfc4 	movi	r2,-129
 4002098:	d8c02915 	stw	r3,164(sp)
 400209c:	90a4703a 	and	r18,r18,r2
 40020a0:	df002783 	ldbu	fp,158(sp)
 40020a4:	d8c02b15 	stw	r3,172(sp)
 40020a8:	d8002a15 	stw	zero,168(sp)
 40020ac:	d8003215 	stw	zero,200(sp)
 40020b0:	003b0706 	br	4000cd0 <___vfprintf_internal_r+0x774>
 40020b4:	d8c02e17 	ldw	r3,184(sp)
 40020b8:	1cc00017 	ldw	r19,0(r3)
 40020bc:	18c00104 	addi	r3,r3,4
 40020c0:	d8c02e15 	stw	r3,184(sp)
 40020c4:	982dd7fa 	srai	r22,r19,31
 40020c8:	b005883a 	mov	r2,r22
 40020cc:	003a7706 	br	4000aac <___vfprintf_internal_r+0x550>
 40020d0:	d8c02e17 	ldw	r3,184(sp)
 40020d4:	d9002f17 	ldw	r4,188(sp)
 40020d8:	18800017 	ldw	r2,0(r3)
 40020dc:	18c00104 	addi	r3,r3,4
 40020e0:	d8c02e15 	stw	r3,184(sp)
 40020e4:	11000015 	stw	r4,0(r2)
 40020e8:	00395406 	br	400063c <___vfprintf_internal_r+0xe0>
 40020ec:	d9002e17 	ldw	r4,184(sp)
 40020f0:	002d883a 	mov	r22,zero
 40020f4:	24c00017 	ldw	r19,0(r4)
 40020f8:	21000104 	addi	r4,r4,4
 40020fc:	d9002e15 	stw	r4,184(sp)
 4002100:	003c0706 	br	4001120 <___vfprintf_internal_r+0xbc4>
 4002104:	d9402e17 	ldw	r5,184(sp)
 4002108:	d8c02a17 	ldw	r3,168(sp)
 400210c:	002d883a 	mov	r22,zero
 4002110:	28800104 	addi	r2,r5,4
 4002114:	2cc0000b 	ldhu	r19,0(r5)
 4002118:	183dc10e 	bge	r3,zero,4001820 <___vfprintf_internal_r+0x12c4>
 400211c:	003f7506 	br	4001ef4 <___vfprintf_internal_r+0x1998>
 4002120:	04010074 	movhi	r16,1025
 4002124:	843eb204 	addi	r16,r16,-1336
 4002128:	003aa706 	br	4000bc8 <___vfprintf_internal_r+0x66c>
 400212c:	d9002d17 	ldw	r4,180(sp)
 4002130:	d9801e04 	addi	r6,sp,120
 4002134:	b80b883a 	mov	r5,r23
 4002138:	4007d3c0 	call	4007d3c <__sprint_r>
 400213c:	103a0b1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4002140:	dc402617 	ldw	r17,152(sp)
 4002144:	d8c02017 	ldw	r3,128(sp)
 4002148:	da000404 	addi	r8,sp,16
 400214c:	003f9c06 	br	4001fc0 <___vfprintf_internal_r+0x1a64>
 4002150:	ac400043 	ldbu	r17,1(r21)
 4002154:	84000814 	ori	r16,r16,32
 4002158:	ad400044 	addi	r21,r21,1
 400215c:	8c403fcc 	andi	r17,r17,255
 4002160:	8c40201c 	xori	r17,r17,128
 4002164:	8c7fe004 	addi	r17,r17,-128
 4002168:	00395e06 	br	40006e4 <___vfprintf_internal_r+0x188>
 400216c:	d8c02e15 	stw	r3,184(sp)
 4002170:	0039883a 	mov	fp,zero
 4002174:	003e3506 	br	4001a4c <___vfprintf_internal_r+0x14f0>
 4002178:	d9002d17 	ldw	r4,180(sp)
 400217c:	d9801e04 	addi	r6,sp,120
 4002180:	b80b883a 	mov	r5,r23
 4002184:	4007d3c0 	call	4007d3c <__sprint_r>
 4002188:	1039f81e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 400218c:	d8c02017 	ldw	r3,128(sp)
 4002190:	da000404 	addi	r8,sp,16
 4002194:	003cd006 	br	40014d8 <___vfprintf_internal_r+0xf7c>
 4002198:	8009883a 	mov	r4,r16
 400219c:	df003d15 	stw	fp,244(sp)
 40021a0:	40004c40 	call	40004c4 <strlen>
 40021a4:	d8802b15 	stw	r2,172(sp)
 40021a8:	da003d17 	ldw	r8,244(sp)
 40021ac:	103c200e 	bge	r2,zero,4001230 <___vfprintf_internal_r+0xcd4>
 40021b0:	0005883a 	mov	r2,zero
 40021b4:	003c1e06 	br	4001230 <___vfprintf_internal_r+0xcd4>
 40021b8:	d9002d17 	ldw	r4,180(sp)
 40021bc:	d9801e04 	addi	r6,sp,120
 40021c0:	b80b883a 	mov	r5,r23
 40021c4:	4007d3c0 	call	4007d3c <__sprint_r>
 40021c8:	1039e81e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 40021cc:	d8c02017 	ldw	r3,128(sp)
 40021d0:	d8801f17 	ldw	r2,124(sp)
 40021d4:	da000404 	addi	r8,sp,16
 40021d8:	d9403317 	ldw	r5,204(sp)
 40021dc:	10800044 	addi	r2,r2,1
 40021e0:	44000015 	stw	r16,0(r8)
 40021e4:	28c7883a 	add	r3,r5,r3
 40021e8:	003b5b06 	br	4000f58 <___vfprintf_internal_r+0x9fc>
 40021ec:	01010074 	movhi	r4,1025
 40021f0:	213ec684 	addi	r4,r4,-1254
 40021f4:	d9003515 	stw	r4,212(sp)
 40021f8:	003af206 	br	4000dc4 <___vfprintf_internal_r+0x868>
 40021fc:	013fffc4 	movi	r4,-1
 4002200:	003a0806 	br	4000a24 <___vfprintf_internal_r+0x4c8>
 4002204:	0023883a 	mov	r17,zero
 4002208:	003d9d06 	br	4001880 <___vfprintf_internal_r+0x1324>
 400220c:	d9002d17 	ldw	r4,180(sp)
 4002210:	d9801e04 	addi	r6,sp,120
 4002214:	b80b883a 	mov	r5,r23
 4002218:	4007d3c0 	call	4007d3c <__sprint_r>
 400221c:	1039d31e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4002220:	d8c02017 	ldw	r3,128(sp)
 4002224:	da000404 	addi	r8,sp,16
 4002228:	003d9406 	br	400187c <___vfprintf_internal_r+0x1320>
 400222c:	01010074 	movhi	r4,1025
 4002230:	213ec284 	addi	r4,r4,-1270
 4002234:	d9002c15 	stw	r4,176(sp)
 4002238:	d9002c17 	ldw	r4,176(sp)
 400223c:	1c47883a 	add	r3,r3,r17
 4002240:	10800044 	addi	r2,r2,1
 4002244:	41000015 	stw	r4,0(r8)
 4002248:	44400115 	stw	r17,4(r8)
 400224c:	d8c02015 	stw	r3,128(sp)
 4002250:	d8801f15 	stw	r2,124(sp)
 4002254:	010001c4 	movi	r4,7
 4002258:	20bfd716 	blt	r4,r2,40021b8 <___vfprintf_internal_r+0x1c5c>
 400225c:	42000204 	addi	r8,r8,8
 4002260:	003fdd06 	br	40021d8 <___vfprintf_internal_r+0x1c7c>
 4002264:	d9002d17 	ldw	r4,180(sp)
 4002268:	d9801e04 	addi	r6,sp,120
 400226c:	b80b883a 	mov	r5,r23
 4002270:	4007d3c0 	call	4007d3c <__sprint_r>
 4002274:	1039bd1e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4002278:	d8802617 	ldw	r2,152(sp)
 400227c:	d8c02017 	ldw	r3,128(sp)
 4002280:	da000404 	addi	r8,sp,16
 4002284:	003e1006 	br	4001ac8 <___vfprintf_internal_r+0x156c>
 4002288:	00800044 	movi	r2,1
 400228c:	10803fcc 	andi	r2,r2,255
 4002290:	00c00044 	movi	r3,1
 4002294:	10fa0d26 	beq	r2,r3,4000acc <___vfprintf_internal_r+0x570>
 4002298:	00c00084 	movi	r3,2
 400229c:	10fbaf26 	beq	r2,r3,400115c <___vfprintf_internal_r+0xc00>
 40022a0:	003a6d06 	br	4000c58 <___vfprintf_internal_r+0x6fc>
 40022a4:	01010074 	movhi	r4,1025
 40022a8:	213ec684 	addi	r4,r4,-1254
 40022ac:	d9003515 	stw	r4,212(sp)
 40022b0:	003b5406 	br	4001004 <___vfprintf_internal_r+0xaa8>
 40022b4:	d8802a17 	ldw	r2,168(sp)
 40022b8:	00c00184 	movi	r3,6
 40022bc:	1880012e 	bgeu	r3,r2,40022c4 <___vfprintf_internal_r+0x1d68>
 40022c0:	1805883a 	mov	r2,r3
 40022c4:	d8802b15 	stw	r2,172(sp)
 40022c8:	1000ef16 	blt	r2,zero,4002688 <___vfprintf_internal_r+0x212c>
 40022cc:	04010074 	movhi	r16,1025
 40022d0:	d8802915 	stw	r2,164(sp)
 40022d4:	dcc02e15 	stw	r19,184(sp)
 40022d8:	d8002a15 	stw	zero,168(sp)
 40022dc:	d8003215 	stw	zero,200(sp)
 40022e0:	843ec004 	addi	r16,r16,-1280
 40022e4:	0039883a 	mov	fp,zero
 40022e8:	003a8006 	br	4000cec <___vfprintf_internal_r+0x790>
 40022ec:	0021883a 	mov	r16,zero
 40022f0:	003e0706 	br	4001b10 <___vfprintf_internal_r+0x15b4>
 40022f4:	d9002d17 	ldw	r4,180(sp)
 40022f8:	d9801e04 	addi	r6,sp,120
 40022fc:	b80b883a 	mov	r5,r23
 4002300:	4007d3c0 	call	4007d3c <__sprint_r>
 4002304:	1039991e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4002308:	d8802617 	ldw	r2,152(sp)
 400230c:	d9403317 	ldw	r5,204(sp)
 4002310:	d8c02017 	ldw	r3,128(sp)
 4002314:	da000404 	addi	r8,sp,16
 4002318:	2885c83a 	sub	r2,r5,r2
 400231c:	003dfb06 	br	4001b0c <___vfprintf_internal_r+0x15b0>
 4002320:	9080004c 	andi	r2,r18,1
 4002324:	103e8f1e 	bne	r2,zero,4001d64 <___vfprintf_internal_r+0x1808>
 4002328:	d8802117 	ldw	r2,132(sp)
 400232c:	003e9e06 	br	4001da8 <___vfprintf_internal_r+0x184c>
 4002330:	1025883a 	mov	r18,r2
 4002334:	0039883a 	mov	fp,zero
 4002338:	00800084 	movi	r2,2
 400233c:	003fd306 	br	400228c <___vfprintf_internal_r+0x1d30>
 4002340:	07000b44 	movi	fp,45
 4002344:	df002785 	stb	fp,158(sp)
 4002348:	003a1b06 	br	4000bb8 <___vfprintf_internal_r+0x65c>
 400234c:	00c00b44 	movi	r3,45
 4002350:	d8c02785 	stb	r3,158(sp)
 4002354:	d8802915 	stw	r2,164(sp)
 4002358:	dc802c17 	ldw	r18,176(sp)
 400235c:	d8002a15 	stw	zero,168(sp)
 4002360:	07000b44 	movi	fp,45
 4002364:	003a5e06 	br	4000ce0 <___vfprintf_internal_r+0x784>
 4002368:	04010074 	movhi	r16,1025
 400236c:	843eb504 	addi	r16,r16,-1324
 4002370:	003f4706 	br	4002090 <___vfprintf_internal_r+0x1b34>
 4002374:	d9002e17 	ldw	r4,184(sp)
 4002378:	d9402f17 	ldw	r5,188(sp)
 400237c:	20800017 	ldw	r2,0(r4)
 4002380:	21000104 	addi	r4,r4,4
 4002384:	d9002e15 	stw	r4,184(sp)
 4002388:	11400015 	stw	r5,0(r2)
 400238c:	0038ab06 	br	400063c <___vfprintf_internal_r+0xe0>
 4002390:	dd802617 	ldw	r22,152(sp)
 4002394:	00bfff44 	movi	r2,-3
 4002398:	b0801c16 	blt	r22,r2,400240c <___vfprintf_internal_r+0x1eb0>
 400239c:	d9402a17 	ldw	r5,168(sp)
 40023a0:	2d801a16 	blt	r5,r22,400240c <___vfprintf_internal_r+0x1eb0>
 40023a4:	dd803215 	stw	r22,200(sp)
 40023a8:	003e8906 	br	4001dd0 <___vfprintf_internal_r+0x1874>
 40023ac:	01010074 	movhi	r4,1025
 40023b0:	213ec284 	addi	r4,r4,-1270
 40023b4:	d9002c15 	stw	r4,176(sp)
 40023b8:	003c9106 	br	4001600 <___vfprintf_internal_r+0x10a4>
 40023bc:	e005883a 	mov	r2,fp
 40023c0:	003e7906 	br	4001da8 <___vfprintf_internal_r+0x184c>
 40023c4:	d9002a17 	ldw	r4,168(sp)
 40023c8:	df002783 	ldbu	fp,158(sp)
 40023cc:	dcc02e15 	stw	r19,184(sp)
 40023d0:	d9002915 	stw	r4,164(sp)
 40023d4:	d9002b15 	stw	r4,172(sp)
 40023d8:	d8002a15 	stw	zero,168(sp)
 40023dc:	d8003215 	stw	zero,200(sp)
 40023e0:	003a3b06 	br	4000cd0 <___vfprintf_internal_r+0x774>
 40023e4:	9080004c 	andi	r2,r18,1
 40023e8:	0039883a 	mov	fp,zero
 40023ec:	10000426 	beq	r2,zero,4002400 <___vfprintf_internal_r+0x1ea4>
 40023f0:	00800c04 	movi	r2,48
 40023f4:	dc001dc4 	addi	r16,sp,119
 40023f8:	d8801dc5 	stb	r2,119(sp)
 40023fc:	003b6406 	br	4001190 <___vfprintf_internal_r+0xc34>
 4002400:	d8002b15 	stw	zero,172(sp)
 4002404:	dc001e04 	addi	r16,sp,120
 4002408:	003a2b06 	br	4000cb8 <___vfprintf_internal_r+0x75c>
 400240c:	8c7fff84 	addi	r17,r17,-2
 4002410:	b5bfffc4 	addi	r22,r22,-1
 4002414:	dd802615 	stw	r22,152(sp)
 4002418:	dc4022c5 	stb	r17,139(sp)
 400241c:	b000bf16 	blt	r22,zero,400271c <___vfprintf_internal_r+0x21c0>
 4002420:	00800ac4 	movi	r2,43
 4002424:	d8802305 	stb	r2,140(sp)
 4002428:	00800244 	movi	r2,9
 400242c:	15807016 	blt	r2,r22,40025f0 <___vfprintf_internal_r+0x2094>
 4002430:	00800c04 	movi	r2,48
 4002434:	b5800c04 	addi	r22,r22,48
 4002438:	d8802345 	stb	r2,141(sp)
 400243c:	dd802385 	stb	r22,142(sp)
 4002440:	d88023c4 	addi	r2,sp,143
 4002444:	df0022c4 	addi	fp,sp,139
 4002448:	d8c03317 	ldw	r3,204(sp)
 400244c:	1739c83a 	sub	fp,r2,fp
 4002450:	d9003317 	ldw	r4,204(sp)
 4002454:	e0c7883a 	add	r3,fp,r3
 4002458:	df003a15 	stw	fp,232(sp)
 400245c:	d8c02b15 	stw	r3,172(sp)
 4002460:	00800044 	movi	r2,1
 4002464:	1100b30e 	bge	r2,r4,4002734 <___vfprintf_internal_r+0x21d8>
 4002468:	d8c02b17 	ldw	r3,172(sp)
 400246c:	18c00044 	addi	r3,r3,1
 4002470:	d8c02b15 	stw	r3,172(sp)
 4002474:	1805883a 	mov	r2,r3
 4002478:	1800ac16 	blt	r3,zero,400272c <___vfprintf_internal_r+0x21d0>
 400247c:	d8003215 	stw	zero,200(sp)
 4002480:	003e5d06 	br	4001df8 <___vfprintf_internal_r+0x189c>
 4002484:	d9002d17 	ldw	r4,180(sp)
 4002488:	d9801e04 	addi	r6,sp,120
 400248c:	b80b883a 	mov	r5,r23
 4002490:	4007d3c0 	call	4007d3c <__sprint_r>
 4002494:	1039351e 	bne	r2,zero,400096c <___vfprintf_internal_r+0x410>
 4002498:	dc402617 	ldw	r17,152(sp)
 400249c:	d8c02017 	ldw	r3,128(sp)
 40024a0:	d8801f17 	ldw	r2,124(sp)
 40024a4:	da000404 	addi	r8,sp,16
 40024a8:	003ed606 	br	4002004 <___vfprintf_internal_r+0x1aa8>
 40024ac:	182b883a 	mov	r21,r3
 40024b0:	d8002a15 	stw	zero,168(sp)
 40024b4:	00388c06 	br	40006e8 <___vfprintf_internal_r+0x18c>
 40024b8:	d8802a17 	ldw	r2,168(sp)
 40024bc:	103e071e 	bne	r2,zero,4001cdc <___vfprintf_internal_r+0x1780>
 40024c0:	dc002a15 	stw	r16,168(sp)
 40024c4:	003e0506 	br	4001cdc <___vfprintf_internal_r+0x1780>
 40024c8:	d9002a17 	ldw	r4,168(sp)
 40024cc:	20c00044 	addi	r3,r4,1
 40024d0:	003e0f06 	br	4001d10 <___vfprintf_internal_r+0x17b4>
 40024d4:	01400184 	movi	r5,6
 40024d8:	d9402a15 	stw	r5,168(sp)
 40024dc:	003dff06 	br	4001cdc <___vfprintf_internal_r+0x1780>
 40024e0:	d8802104 	addi	r2,sp,132
 40024e4:	d8800315 	stw	r2,12(sp)
 40024e8:	d8802504 	addi	r2,sp,148
 40024ec:	d8800215 	stw	r2,8(sp)
 40024f0:	d8802604 	addi	r2,sp,152
 40024f4:	d8800115 	stw	r2,4(sp)
 40024f8:	d8802a17 	ldw	r2,168(sp)
 40024fc:	d9403617 	ldw	r5,216(sp)
 4002500:	d9002d17 	ldw	r4,180(sp)
 4002504:	d8800015 	stw	r2,0(sp)
 4002508:	01c000c4 	movi	r7,3
 400250c:	980d883a 	mov	r6,r19
 4002510:	da003d15 	stw	r8,244(sp)
 4002514:	4002c8c0 	call	4002c8c <_dtoa_r>
 4002518:	d8c02a17 	ldw	r3,168(sp)
 400251c:	da003d17 	ldw	r8,244(sp)
 4002520:	1021883a 	mov	r16,r2
 4002524:	10f9883a 	add	fp,r2,r3
 4002528:	81000007 	ldb	r4,0(r16)
 400252c:	00800c04 	movi	r2,48
 4002530:	20805e26 	beq	r4,r2,40026ac <___vfprintf_internal_r+0x2150>
 4002534:	d8c02617 	ldw	r3,152(sp)
 4002538:	e0f9883a 	add	fp,fp,r3
 400253c:	003e0a06 	br	4001d68 <___vfprintf_internal_r+0x180c>
 4002540:	00c00b44 	movi	r3,45
 4002544:	24e0003c 	xorhi	r19,r4,32768
 4002548:	d8c02905 	stb	r3,164(sp)
 400254c:	003de906 	br	4001cf4 <___vfprintf_internal_r+0x1798>
 4002550:	d8c03217 	ldw	r3,200(sp)
 4002554:	00c07a0e 	bge	zero,r3,4002740 <___vfprintf_internal_r+0x21e4>
 4002558:	00800044 	movi	r2,1
 400255c:	d9003317 	ldw	r4,204(sp)
 4002560:	1105883a 	add	r2,r2,r4
 4002564:	d8802b15 	stw	r2,172(sp)
 4002568:	10004e16 	blt	r2,zero,40026a4 <___vfprintf_internal_r+0x2148>
 400256c:	044019c4 	movi	r17,103
 4002570:	003e2106 	br	4001df8 <___vfprintf_internal_r+0x189c>
 4002574:	d9002a17 	ldw	r4,168(sp)
 4002578:	d8802104 	addi	r2,sp,132
 400257c:	d8800315 	stw	r2,12(sp)
 4002580:	d9000015 	stw	r4,0(sp)
 4002584:	d8802504 	addi	r2,sp,148
 4002588:	d9403617 	ldw	r5,216(sp)
 400258c:	d9002d17 	ldw	r4,180(sp)
 4002590:	d8800215 	stw	r2,8(sp)
 4002594:	d8802604 	addi	r2,sp,152
 4002598:	d8800115 	stw	r2,4(sp)
 400259c:	01c000c4 	movi	r7,3
 40025a0:	980d883a 	mov	r6,r19
 40025a4:	da003d15 	stw	r8,244(sp)
 40025a8:	4002c8c0 	call	4002c8c <_dtoa_r>
 40025ac:	d8c02a17 	ldw	r3,168(sp)
 40025b0:	da003d17 	ldw	r8,244(sp)
 40025b4:	1021883a 	mov	r16,r2
 40025b8:	00801184 	movi	r2,70
 40025bc:	80f9883a 	add	fp,r16,r3
 40025c0:	88bfd926 	beq	r17,r2,4002528 <___vfprintf_internal_r+0x1fcc>
 40025c4:	003de806 	br	4001d68 <___vfprintf_internal_r+0x180c>
 40025c8:	d9002a17 	ldw	r4,168(sp)
 40025cc:	00c04d0e 	bge	zero,r3,4002704 <___vfprintf_internal_r+0x21a8>
 40025d0:	2000441e 	bne	r4,zero,40026e4 <___vfprintf_internal_r+0x2188>
 40025d4:	9480004c 	andi	r18,r18,1
 40025d8:	9000421e 	bne	r18,zero,40026e4 <___vfprintf_internal_r+0x2188>
 40025dc:	1805883a 	mov	r2,r3
 40025e0:	18006f16 	blt	r3,zero,40027a0 <___vfprintf_internal_r+0x2244>
 40025e4:	d8c03217 	ldw	r3,200(sp)
 40025e8:	d8c02b15 	stw	r3,172(sp)
 40025ec:	003e0206 	br	4001df8 <___vfprintf_internal_r+0x189c>
 40025f0:	df0022c4 	addi	fp,sp,139
 40025f4:	dc002a15 	stw	r16,168(sp)
 40025f8:	4027883a 	mov	r19,r8
 40025fc:	e021883a 	mov	r16,fp
 4002600:	b009883a 	mov	r4,r22
 4002604:	01400284 	movi	r5,10
 4002608:	400a8c80 	call	400a8c8 <__modsi3>
 400260c:	10800c04 	addi	r2,r2,48
 4002610:	843fffc4 	addi	r16,r16,-1
 4002614:	b009883a 	mov	r4,r22
 4002618:	01400284 	movi	r5,10
 400261c:	80800005 	stb	r2,0(r16)
 4002620:	400a8440 	call	400a844 <__divsi3>
 4002624:	102d883a 	mov	r22,r2
 4002628:	00800244 	movi	r2,9
 400262c:	15bff416 	blt	r2,r22,4002600 <___vfprintf_internal_r+0x20a4>
 4002630:	9811883a 	mov	r8,r19
 4002634:	b0800c04 	addi	r2,r22,48
 4002638:	8027883a 	mov	r19,r16
 400263c:	997fffc4 	addi	r5,r19,-1
 4002640:	98bfffc5 	stb	r2,-1(r19)
 4002644:	dc002a17 	ldw	r16,168(sp)
 4002648:	2f006d2e 	bgeu	r5,fp,4002800 <___vfprintf_internal_r+0x22a4>
 400264c:	d9c02384 	addi	r7,sp,142
 4002650:	3ccfc83a 	sub	r7,r7,r19
 4002654:	d9002344 	addi	r4,sp,141
 4002658:	e1cf883a 	add	r7,fp,r7
 400265c:	00000106 	br	4002664 <___vfprintf_internal_r+0x2108>
 4002660:	28800003 	ldbu	r2,0(r5)
 4002664:	20800005 	stb	r2,0(r4)
 4002668:	21000044 	addi	r4,r4,1
 400266c:	29400044 	addi	r5,r5,1
 4002670:	393ffb1e 	bne	r7,r4,4002660 <___vfprintf_internal_r+0x2104>
 4002674:	d8802304 	addi	r2,sp,140
 4002678:	14c5c83a 	sub	r2,r2,r19
 400267c:	d8c02344 	addi	r3,sp,141
 4002680:	1885883a 	add	r2,r3,r2
 4002684:	003f7006 	br	4002448 <___vfprintf_internal_r+0x1eec>
 4002688:	0005883a 	mov	r2,zero
 400268c:	003f0f06 	br	40022cc <___vfprintf_internal_r+0x1d70>
 4002690:	d8c03217 	ldw	r3,200(sp)
 4002694:	18c00044 	addi	r3,r3,1
 4002698:	d8c02b15 	stw	r3,172(sp)
 400269c:	1805883a 	mov	r2,r3
 40026a0:	183fb20e 	bge	r3,zero,400256c <___vfprintf_internal_r+0x2010>
 40026a4:	0005883a 	mov	r2,zero
 40026a8:	003fb006 	br	400256c <___vfprintf_internal_r+0x2010>
 40026ac:	d9003617 	ldw	r4,216(sp)
 40026b0:	000d883a 	mov	r6,zero
 40026b4:	000f883a 	mov	r7,zero
 40026b8:	980b883a 	mov	r5,r19
 40026bc:	d8c03c15 	stw	r3,240(sp)
 40026c0:	da003d15 	stw	r8,244(sp)
 40026c4:	400bc9c0 	call	400bc9c <__eqdf2>
 40026c8:	d8c03c17 	ldw	r3,240(sp)
 40026cc:	da003d17 	ldw	r8,244(sp)
 40026d0:	103f9826 	beq	r2,zero,4002534 <___vfprintf_internal_r+0x1fd8>
 40026d4:	00800044 	movi	r2,1
 40026d8:	10c7c83a 	sub	r3,r2,r3
 40026dc:	d8c02615 	stw	r3,152(sp)
 40026e0:	003f9506 	br	4002538 <___vfprintf_internal_r+0x1fdc>
 40026e4:	d9002a17 	ldw	r4,168(sp)
 40026e8:	d8c03217 	ldw	r3,200(sp)
 40026ec:	20800044 	addi	r2,r4,1
 40026f0:	1885883a 	add	r2,r3,r2
 40026f4:	d8802b15 	stw	r2,172(sp)
 40026f8:	103dbf0e 	bge	r2,zero,4001df8 <___vfprintf_internal_r+0x189c>
 40026fc:	0005883a 	mov	r2,zero
 4002700:	003dbd06 	br	4001df8 <___vfprintf_internal_r+0x189c>
 4002704:	2000201e 	bne	r4,zero,4002788 <___vfprintf_internal_r+0x222c>
 4002708:	9480004c 	andi	r18,r18,1
 400270c:	90001e1e 	bne	r18,zero,4002788 <___vfprintf_internal_r+0x222c>
 4002710:	00800044 	movi	r2,1
 4002714:	d8802b15 	stw	r2,172(sp)
 4002718:	003db706 	br	4001df8 <___vfprintf_internal_r+0x189c>
 400271c:	00800b44 	movi	r2,45
 4002720:	05adc83a 	sub	r22,zero,r22
 4002724:	d8802305 	stb	r2,140(sp)
 4002728:	003f3f06 	br	4002428 <___vfprintf_internal_r+0x1ecc>
 400272c:	0005883a 	mov	r2,zero
 4002730:	003f5206 	br	400247c <___vfprintf_internal_r+0x1f20>
 4002734:	90a4703a 	and	r18,r18,r2
 4002738:	903f4e26 	beq	r18,zero,4002474 <___vfprintf_internal_r+0x1f18>
 400273c:	003f4a06 	br	4002468 <___vfprintf_internal_r+0x1f0c>
 4002740:	00800084 	movi	r2,2
 4002744:	10c5c83a 	sub	r2,r2,r3
 4002748:	003f8406 	br	400255c <___vfprintf_internal_r+0x2000>
 400274c:	d9402e17 	ldw	r5,184(sp)
 4002750:	d9002e17 	ldw	r4,184(sp)
 4002754:	ac400043 	ldbu	r17,1(r21)
 4002758:	29400017 	ldw	r5,0(r5)
 400275c:	20800104 	addi	r2,r4,4
 4002760:	d8802e15 	stw	r2,184(sp)
 4002764:	d9402a15 	stw	r5,168(sp)
 4002768:	182b883a 	mov	r21,r3
 400276c:	283e7b0e 	bge	r5,zero,400215c <___vfprintf_internal_r+0x1c00>
 4002770:	8c403fcc 	andi	r17,r17,255
 4002774:	017fffc4 	movi	r5,-1
 4002778:	8c40201c 	xori	r17,r17,128
 400277c:	d9402a15 	stw	r5,168(sp)
 4002780:	8c7fe004 	addi	r17,r17,-128
 4002784:	0037d706 	br	40006e4 <___vfprintf_internal_r+0x188>
 4002788:	d8c02a17 	ldw	r3,168(sp)
 400278c:	18c00084 	addi	r3,r3,2
 4002790:	d8c02b15 	stw	r3,172(sp)
 4002794:	1805883a 	mov	r2,r3
 4002798:	183d970e 	bge	r3,zero,4001df8 <___vfprintf_internal_r+0x189c>
 400279c:	003fd706 	br	40026fc <___vfprintf_internal_r+0x21a0>
 40027a0:	0005883a 	mov	r2,zero
 40027a4:	003f8f06 	br	40025e4 <___vfprintf_internal_r+0x2088>
 40027a8:	9080004c 	andi	r2,r18,1
 40027ac:	103f821e 	bne	r2,zero,40025b8 <___vfprintf_internal_r+0x205c>
 40027b0:	d8802117 	ldw	r2,132(sp)
 40027b4:	1405c83a 	sub	r2,r2,r16
 40027b8:	d8803315 	stw	r2,204(sp)
 40027bc:	b47ef426 	beq	r22,r17,4002390 <___vfprintf_internal_r+0x1e34>
 40027c0:	dd802617 	ldw	r22,152(sp)
 40027c4:	003f1206 	br	4002410 <___vfprintf_internal_r+0x1eb4>
 40027c8:	d8c02b03 	ldbu	r3,172(sp)
 40027cc:	d8c02785 	stb	r3,158(sp)
 40027d0:	0038df06 	br	4000b50 <___vfprintf_internal_r+0x5f4>
 40027d4:	d8c02b03 	ldbu	r3,172(sp)
 40027d8:	d8c02785 	stb	r3,158(sp)
 40027dc:	0038aa06 	br	4000a88 <___vfprintf_internal_r+0x52c>
 40027e0:	d8c02b03 	ldbu	r3,172(sp)
 40027e4:	d8c02785 	stb	r3,158(sp)
 40027e8:	003a4306 	br	40010f8 <___vfprintf_internal_r+0xb9c>
 40027ec:	d8c02b03 	ldbu	r3,172(sp)
 40027f0:	d8c02785 	stb	r3,158(sp)
 40027f4:	003af506 	br	40013cc <___vfprintf_internal_r+0xe70>
 40027f8:	0005883a 	mov	r2,zero
 40027fc:	003d7b06 	br	4001dec <___vfprintf_internal_r+0x1890>
 4002800:	d8802344 	addi	r2,sp,141
 4002804:	003f1006 	br	4002448 <___vfprintf_internal_r+0x1eec>
 4002808:	d8c02b03 	ldbu	r3,172(sp)
 400280c:	d8c02785 	stb	r3,158(sp)
 4002810:	0038fd06 	br	4000c08 <___vfprintf_internal_r+0x6ac>
 4002814:	d8c02b03 	ldbu	r3,172(sp)
 4002818:	d8c02785 	stb	r3,158(sp)
 400281c:	003a9706 	br	400127c <___vfprintf_internal_r+0xd20>
 4002820:	d8c02b03 	ldbu	r3,172(sp)
 4002824:	d8c02785 	stb	r3,158(sp)
 4002828:	003a1806 	br	400108c <___vfprintf_internal_r+0xb30>
 400282c:	d8c02b03 	ldbu	r3,172(sp)
 4002830:	d8c02785 	stb	r3,158(sp)
 4002834:	003abe06 	br	4001330 <___vfprintf_internal_r+0xdd4>

04002838 <__vfprintf_internal>:
 4002838:	00810074 	movhi	r2,1025
 400283c:	10861c04 	addi	r2,r2,6256
 4002840:	300f883a 	mov	r7,r6
 4002844:	280d883a 	mov	r6,r5
 4002848:	200b883a 	mov	r5,r4
 400284c:	11000017 	ldw	r4,0(r2)
 4002850:	400055c1 	jmpi	400055c <___vfprintf_internal_r>

04002854 <__sbprintf>:
 4002854:	2880030b 	ldhu	r2,12(r5)
 4002858:	2ac01917 	ldw	r11,100(r5)
 400285c:	2a80038b 	ldhu	r10,14(r5)
 4002860:	2a400717 	ldw	r9,28(r5)
 4002864:	2a000917 	ldw	r8,36(r5)
 4002868:	defee204 	addi	sp,sp,-1144
 400286c:	00c10004 	movi	r3,1024
 4002870:	dc011a15 	stw	r16,1128(sp)
 4002874:	10bfff4c 	andi	r2,r2,65533
 4002878:	2821883a 	mov	r16,r5
 400287c:	d8cb883a 	add	r5,sp,r3
 4002880:	dc811c15 	stw	r18,1136(sp)
 4002884:	dc411b15 	stw	r17,1132(sp)
 4002888:	dfc11d15 	stw	ra,1140(sp)
 400288c:	2025883a 	mov	r18,r4
 4002890:	d881030d 	sth	r2,1036(sp)
 4002894:	dac11915 	stw	r11,1124(sp)
 4002898:	da81038d 	sth	r10,1038(sp)
 400289c:	da410715 	stw	r9,1052(sp)
 40028a0:	da010915 	stw	r8,1060(sp)
 40028a4:	dec10015 	stw	sp,1024(sp)
 40028a8:	dec10415 	stw	sp,1040(sp)
 40028ac:	d8c10215 	stw	r3,1032(sp)
 40028b0:	d8c10515 	stw	r3,1044(sp)
 40028b4:	d8010615 	stw	zero,1048(sp)
 40028b8:	400055c0 	call	400055c <___vfprintf_internal_r>
 40028bc:	1023883a 	mov	r17,r2
 40028c0:	10000416 	blt	r2,zero,40028d4 <__sbprintf+0x80>
 40028c4:	d9410004 	addi	r5,sp,1024
 40028c8:	9009883a 	mov	r4,r18
 40028cc:	40045300 	call	4004530 <_fflush_r>
 40028d0:	10000d1e 	bne	r2,zero,4002908 <__sbprintf+0xb4>
 40028d4:	d881030b 	ldhu	r2,1036(sp)
 40028d8:	1080100c 	andi	r2,r2,64
 40028dc:	10000326 	beq	r2,zero,40028ec <__sbprintf+0x98>
 40028e0:	8080030b 	ldhu	r2,12(r16)
 40028e4:	10801014 	ori	r2,r2,64
 40028e8:	8080030d 	sth	r2,12(r16)
 40028ec:	8805883a 	mov	r2,r17
 40028f0:	dfc11d17 	ldw	ra,1140(sp)
 40028f4:	dc811c17 	ldw	r18,1136(sp)
 40028f8:	dc411b17 	ldw	r17,1132(sp)
 40028fc:	dc011a17 	ldw	r16,1128(sp)
 4002900:	dec11e04 	addi	sp,sp,1144
 4002904:	f800283a 	ret
 4002908:	047fffc4 	movi	r17,-1
 400290c:	003ff106 	br	40028d4 <__sbprintf+0x80>

04002910 <__swsetup_r>:
 4002910:	00810074 	movhi	r2,1025
 4002914:	defffd04 	addi	sp,sp,-12
 4002918:	10861c04 	addi	r2,r2,6256
 400291c:	dc400115 	stw	r17,4(sp)
 4002920:	2023883a 	mov	r17,r4
 4002924:	11000017 	ldw	r4,0(r2)
 4002928:	dc000015 	stw	r16,0(sp)
 400292c:	dfc00215 	stw	ra,8(sp)
 4002930:	2821883a 	mov	r16,r5
 4002934:	20000226 	beq	r4,zero,4002940 <__swsetup_r+0x30>
 4002938:	20800e17 	ldw	r2,56(r4)
 400293c:	10003126 	beq	r2,zero,4002a04 <__swsetup_r+0xf4>
 4002940:	8080030b 	ldhu	r2,12(r16)
 4002944:	10c0020c 	andi	r3,r2,8
 4002948:	1009883a 	mov	r4,r2
 400294c:	18000f26 	beq	r3,zero,400298c <__swsetup_r+0x7c>
 4002950:	80c00417 	ldw	r3,16(r16)
 4002954:	18001526 	beq	r3,zero,40029ac <__swsetup_r+0x9c>
 4002958:	1100004c 	andi	r4,r2,1
 400295c:	20001c1e 	bne	r4,zero,40029d0 <__swsetup_r+0xc0>
 4002960:	1080008c 	andi	r2,r2,2
 4002964:	1000291e 	bne	r2,zero,4002a0c <__swsetup_r+0xfc>
 4002968:	80800517 	ldw	r2,20(r16)
 400296c:	80800215 	stw	r2,8(r16)
 4002970:	18001c26 	beq	r3,zero,40029e4 <__swsetup_r+0xd4>
 4002974:	0005883a 	mov	r2,zero
 4002978:	dfc00217 	ldw	ra,8(sp)
 400297c:	dc400117 	ldw	r17,4(sp)
 4002980:	dc000017 	ldw	r16,0(sp)
 4002984:	dec00304 	addi	sp,sp,12
 4002988:	f800283a 	ret
 400298c:	2080040c 	andi	r2,r4,16
 4002990:	10002e26 	beq	r2,zero,4002a4c <__swsetup_r+0x13c>
 4002994:	2080010c 	andi	r2,r4,4
 4002998:	10001e1e 	bne	r2,zero,4002a14 <__swsetup_r+0x104>
 400299c:	80c00417 	ldw	r3,16(r16)
 40029a0:	20800214 	ori	r2,r4,8
 40029a4:	8080030d 	sth	r2,12(r16)
 40029a8:	183feb1e 	bne	r3,zero,4002958 <__swsetup_r+0x48>
 40029ac:	1100a00c 	andi	r4,r2,640
 40029b0:	01408004 	movi	r5,512
 40029b4:	217fe826 	beq	r4,r5,4002958 <__swsetup_r+0x48>
 40029b8:	800b883a 	mov	r5,r16
 40029bc:	8809883a 	mov	r4,r17
 40029c0:	40054cc0 	call	40054cc <__smakebuf_r>
 40029c4:	8080030b 	ldhu	r2,12(r16)
 40029c8:	80c00417 	ldw	r3,16(r16)
 40029cc:	003fe206 	br	4002958 <__swsetup_r+0x48>
 40029d0:	80800517 	ldw	r2,20(r16)
 40029d4:	80000215 	stw	zero,8(r16)
 40029d8:	0085c83a 	sub	r2,zero,r2
 40029dc:	80800615 	stw	r2,24(r16)
 40029e0:	183fe41e 	bne	r3,zero,4002974 <__swsetup_r+0x64>
 40029e4:	80c0030b 	ldhu	r3,12(r16)
 40029e8:	0005883a 	mov	r2,zero
 40029ec:	1900200c 	andi	r4,r3,128
 40029f0:	203fe126 	beq	r4,zero,4002978 <__swsetup_r+0x68>
 40029f4:	18c01014 	ori	r3,r3,64
 40029f8:	80c0030d 	sth	r3,12(r16)
 40029fc:	00bfffc4 	movi	r2,-1
 4002a00:	003fdd06 	br	4002978 <__swsetup_r+0x68>
 4002a04:	400491c0 	call	400491c <__sinit>
 4002a08:	003fcd06 	br	4002940 <__swsetup_r+0x30>
 4002a0c:	0005883a 	mov	r2,zero
 4002a10:	003fd606 	br	400296c <__swsetup_r+0x5c>
 4002a14:	81400c17 	ldw	r5,48(r16)
 4002a18:	28000626 	beq	r5,zero,4002a34 <__swsetup_r+0x124>
 4002a1c:	80801004 	addi	r2,r16,64
 4002a20:	28800326 	beq	r5,r2,4002a30 <__swsetup_r+0x120>
 4002a24:	8809883a 	mov	r4,r17
 4002a28:	4004a900 	call	4004a90 <_free_r>
 4002a2c:	8100030b 	ldhu	r4,12(r16)
 4002a30:	80000c15 	stw	zero,48(r16)
 4002a34:	80c00417 	ldw	r3,16(r16)
 4002a38:	00bff6c4 	movi	r2,-37
 4002a3c:	1108703a 	and	r4,r2,r4
 4002a40:	80000115 	stw	zero,4(r16)
 4002a44:	80c00015 	stw	r3,0(r16)
 4002a48:	003fd506 	br	40029a0 <__swsetup_r+0x90>
 4002a4c:	00800244 	movi	r2,9
 4002a50:	88800015 	stw	r2,0(r17)
 4002a54:	20801014 	ori	r2,r4,64
 4002a58:	8080030d 	sth	r2,12(r16)
 4002a5c:	00bfffc4 	movi	r2,-1
 4002a60:	003fc506 	br	4002978 <__swsetup_r+0x68>

04002a64 <quorem>:
 4002a64:	defff204 	addi	sp,sp,-56
 4002a68:	ddc00b15 	stw	r23,44(sp)
 4002a6c:	20800417 	ldw	r2,16(r4)
 4002a70:	2dc00417 	ldw	r23,16(r5)
 4002a74:	dfc00d15 	stw	ra,52(sp)
 4002a78:	df000c15 	stw	fp,48(sp)
 4002a7c:	dd800a15 	stw	r22,40(sp)
 4002a80:	dd400915 	stw	r21,36(sp)
 4002a84:	dd000815 	stw	r20,32(sp)
 4002a88:	dcc00715 	stw	r19,28(sp)
 4002a8c:	dc800615 	stw	r18,24(sp)
 4002a90:	dc400515 	stw	r17,20(sp)
 4002a94:	dc000415 	stw	r16,16(sp)
 4002a98:	15c07a16 	blt	r2,r23,4002c84 <quorem+0x220>
 4002a9c:	bdffffc4 	addi	r23,r23,-1
 4002aa0:	bde9883a 	add	r20,r23,r23
 4002aa4:	28c00504 	addi	r3,r5,20
 4002aa8:	a529883a 	add	r20,r20,r20
 4002aac:	1d39883a 	add	fp,r3,r20
 4002ab0:	24c00504 	addi	r19,r4,20
 4002ab4:	d9400215 	stw	r5,8(sp)
 4002ab8:	9d29883a 	add	r20,r19,r20
 4002abc:	e1400017 	ldw	r5,0(fp)
 4002ac0:	d9000015 	stw	r4,0(sp)
 4002ac4:	a1000017 	ldw	r4,0(r20)
 4002ac8:	29400044 	addi	r5,r5,1
 4002acc:	d8c00115 	stw	r3,4(sp)
 4002ad0:	dd000315 	stw	r20,12(sp)
 4002ad4:	400a93c0 	call	400a93c <__udivsi3>
 4002ad8:	1025883a 	mov	r18,r2
 4002adc:	10003026 	beq	r2,zero,4002ba0 <quorem+0x13c>
 4002ae0:	dc400117 	ldw	r17,4(sp)
 4002ae4:	9829883a 	mov	r20,r19
 4002ae8:	002d883a 	mov	r22,zero
 4002aec:	0021883a 	mov	r16,zero
 4002af0:	8d400017 	ldw	r21,0(r17)
 4002af4:	900b883a 	mov	r5,r18
 4002af8:	8c400104 	addi	r17,r17,4
 4002afc:	a93fffcc 	andi	r4,r21,65535
 4002b00:	400a9f80 	call	400a9f8 <__mulsi3>
 4002b04:	a808d43a 	srli	r4,r21,16
 4002b08:	900b883a 	mov	r5,r18
 4002b0c:	15ad883a 	add	r22,r2,r22
 4002b10:	400a9f80 	call	400a9f8 <__mulsi3>
 4002b14:	a1000017 	ldw	r4,0(r20)
 4002b18:	b00cd43a 	srli	r6,r22,16
 4002b1c:	b0ffffcc 	andi	r3,r22,65535
 4002b20:	217fffcc 	andi	r5,r4,65535
 4002b24:	2c21883a 	add	r16,r5,r16
 4002b28:	80c7c83a 	sub	r3,r16,r3
 4002b2c:	2008d43a 	srli	r4,r4,16
 4002b30:	1185883a 	add	r2,r2,r6
 4002b34:	1821d43a 	srai	r16,r3,16
 4002b38:	117fffcc 	andi	r5,r2,65535
 4002b3c:	2149c83a 	sub	r4,r4,r5
 4002b40:	2421883a 	add	r16,r4,r16
 4002b44:	8008943a 	slli	r4,r16,16
 4002b48:	18ffffcc 	andi	r3,r3,65535
 4002b4c:	102cd43a 	srli	r22,r2,16
 4002b50:	20c8b03a 	or	r4,r4,r3
 4002b54:	a1000015 	stw	r4,0(r20)
 4002b58:	8021d43a 	srai	r16,r16,16
 4002b5c:	a5000104 	addi	r20,r20,4
 4002b60:	e47fe32e 	bgeu	fp,r17,4002af0 <quorem+0x8c>
 4002b64:	d8c00317 	ldw	r3,12(sp)
 4002b68:	18800017 	ldw	r2,0(r3)
 4002b6c:	10000c1e 	bne	r2,zero,4002ba0 <quorem+0x13c>
 4002b70:	18bfff04 	addi	r2,r3,-4
 4002b74:	9880082e 	bgeu	r19,r2,4002b98 <quorem+0x134>
 4002b78:	18ffff17 	ldw	r3,-4(r3)
 4002b7c:	18000326 	beq	r3,zero,4002b8c <quorem+0x128>
 4002b80:	00000506 	br	4002b98 <quorem+0x134>
 4002b84:	10c00017 	ldw	r3,0(r2)
 4002b88:	1800031e 	bne	r3,zero,4002b98 <quorem+0x134>
 4002b8c:	10bfff04 	addi	r2,r2,-4
 4002b90:	bdffffc4 	addi	r23,r23,-1
 4002b94:	98bffb36 	bltu	r19,r2,4002b84 <quorem+0x120>
 4002b98:	d8c00017 	ldw	r3,0(sp)
 4002b9c:	1dc00415 	stw	r23,16(r3)
 4002ba0:	d9400217 	ldw	r5,8(sp)
 4002ba4:	d9000017 	ldw	r4,0(sp)
 4002ba8:	4006cc80 	call	4006cc8 <__mcmp>
 4002bac:	10002816 	blt	r2,zero,4002c50 <quorem+0x1ec>
 4002bb0:	dc400117 	ldw	r17,4(sp)
 4002bb4:	94800044 	addi	r18,r18,1
 4002bb8:	980d883a 	mov	r6,r19
 4002bbc:	0007883a 	mov	r3,zero
 4002bc0:	31000017 	ldw	r4,0(r6)
 4002bc4:	89400017 	ldw	r5,0(r17)
 4002bc8:	31800104 	addi	r6,r6,4
 4002bcc:	20bfffcc 	andi	r2,r4,65535
 4002bd0:	10c7883a 	add	r3,r2,r3
 4002bd4:	28bfffcc 	andi	r2,r5,65535
 4002bd8:	1885c83a 	sub	r2,r3,r2
 4002bdc:	280ad43a 	srli	r5,r5,16
 4002be0:	2008d43a 	srli	r4,r4,16
 4002be4:	1007d43a 	srai	r3,r2,16
 4002be8:	10bfffcc 	andi	r2,r2,65535
 4002bec:	2149c83a 	sub	r4,r4,r5
 4002bf0:	20c9883a 	add	r4,r4,r3
 4002bf4:	200a943a 	slli	r5,r4,16
 4002bf8:	8c400104 	addi	r17,r17,4
 4002bfc:	2007d43a 	srai	r3,r4,16
 4002c00:	2884b03a 	or	r2,r5,r2
 4002c04:	30bfff15 	stw	r2,-4(r6)
 4002c08:	e47fed2e 	bgeu	fp,r17,4002bc0 <quorem+0x15c>
 4002c0c:	bdc5883a 	add	r2,r23,r23
 4002c10:	1085883a 	add	r2,r2,r2
 4002c14:	9887883a 	add	r3,r19,r2
 4002c18:	18800017 	ldw	r2,0(r3)
 4002c1c:	10000c1e 	bne	r2,zero,4002c50 <quorem+0x1ec>
 4002c20:	18bfff04 	addi	r2,r3,-4
 4002c24:	9880082e 	bgeu	r19,r2,4002c48 <quorem+0x1e4>
 4002c28:	18ffff17 	ldw	r3,-4(r3)
 4002c2c:	18000326 	beq	r3,zero,4002c3c <quorem+0x1d8>
 4002c30:	00000506 	br	4002c48 <quorem+0x1e4>
 4002c34:	10c00017 	ldw	r3,0(r2)
 4002c38:	1800031e 	bne	r3,zero,4002c48 <quorem+0x1e4>
 4002c3c:	10bfff04 	addi	r2,r2,-4
 4002c40:	bdffffc4 	addi	r23,r23,-1
 4002c44:	98bffb36 	bltu	r19,r2,4002c34 <quorem+0x1d0>
 4002c48:	d8c00017 	ldw	r3,0(sp)
 4002c4c:	1dc00415 	stw	r23,16(r3)
 4002c50:	9005883a 	mov	r2,r18
 4002c54:	dfc00d17 	ldw	ra,52(sp)
 4002c58:	df000c17 	ldw	fp,48(sp)
 4002c5c:	ddc00b17 	ldw	r23,44(sp)
 4002c60:	dd800a17 	ldw	r22,40(sp)
 4002c64:	dd400917 	ldw	r21,36(sp)
 4002c68:	dd000817 	ldw	r20,32(sp)
 4002c6c:	dcc00717 	ldw	r19,28(sp)
 4002c70:	dc800617 	ldw	r18,24(sp)
 4002c74:	dc400517 	ldw	r17,20(sp)
 4002c78:	dc000417 	ldw	r16,16(sp)
 4002c7c:	dec00e04 	addi	sp,sp,56
 4002c80:	f800283a 	ret
 4002c84:	0005883a 	mov	r2,zero
 4002c88:	003ff206 	br	4002c54 <quorem+0x1f0>

04002c8c <_dtoa_r>:
 4002c8c:	20801017 	ldw	r2,64(r4)
 4002c90:	deffde04 	addi	sp,sp,-136
 4002c94:	df002015 	stw	fp,128(sp)
 4002c98:	dcc01b15 	stw	r19,108(sp)
 4002c9c:	dc801a15 	stw	r18,104(sp)
 4002ca0:	dc401915 	stw	r17,100(sp)
 4002ca4:	dc001815 	stw	r16,96(sp)
 4002ca8:	dfc02115 	stw	ra,132(sp)
 4002cac:	ddc01f15 	stw	r23,124(sp)
 4002cb0:	dd801e15 	stw	r22,120(sp)
 4002cb4:	dd401d15 	stw	r21,116(sp)
 4002cb8:	dd001c15 	stw	r20,112(sp)
 4002cbc:	d9c00315 	stw	r7,12(sp)
 4002cc0:	2039883a 	mov	fp,r4
 4002cc4:	3023883a 	mov	r17,r6
 4002cc8:	2825883a 	mov	r18,r5
 4002ccc:	dc002417 	ldw	r16,144(sp)
 4002cd0:	3027883a 	mov	r19,r6
 4002cd4:	10000826 	beq	r2,zero,4002cf8 <_dtoa_r+0x6c>
 4002cd8:	21801117 	ldw	r6,68(r4)
 4002cdc:	00c00044 	movi	r3,1
 4002ce0:	100b883a 	mov	r5,r2
 4002ce4:	1986983a 	sll	r3,r3,r6
 4002ce8:	11800115 	stw	r6,4(r2)
 4002cec:	10c00215 	stw	r3,8(r2)
 4002cf0:	40063ec0 	call	40063ec <_Bfree>
 4002cf4:	e0001015 	stw	zero,64(fp)
 4002cf8:	88002e16 	blt	r17,zero,4002db4 <_dtoa_r+0x128>
 4002cfc:	80000015 	stw	zero,0(r16)
 4002d00:	889ffc2c 	andhi	r2,r17,32752
 4002d04:	00dffc34 	movhi	r3,32752
 4002d08:	10c01c26 	beq	r2,r3,4002d7c <_dtoa_r+0xf0>
 4002d0c:	000d883a 	mov	r6,zero
 4002d10:	000f883a 	mov	r7,zero
 4002d14:	9009883a 	mov	r4,r18
 4002d18:	980b883a 	mov	r5,r19
 4002d1c:	400bc9c0 	call	400bc9c <__eqdf2>
 4002d20:	10002b1e 	bne	r2,zero,4002dd0 <_dtoa_r+0x144>
 4002d24:	d9c02317 	ldw	r7,140(sp)
 4002d28:	00800044 	movi	r2,1
 4002d2c:	38800015 	stw	r2,0(r7)
 4002d30:	d8802517 	ldw	r2,148(sp)
 4002d34:	10019e26 	beq	r2,zero,40033b0 <_dtoa_r+0x724>
 4002d38:	d8c02517 	ldw	r3,148(sp)
 4002d3c:	00810074 	movhi	r2,1025
 4002d40:	10bec244 	addi	r2,r2,-1271
 4002d44:	18800015 	stw	r2,0(r3)
 4002d48:	10bfffc4 	addi	r2,r2,-1
 4002d4c:	dfc02117 	ldw	ra,132(sp)
 4002d50:	df002017 	ldw	fp,128(sp)
 4002d54:	ddc01f17 	ldw	r23,124(sp)
 4002d58:	dd801e17 	ldw	r22,120(sp)
 4002d5c:	dd401d17 	ldw	r21,116(sp)
 4002d60:	dd001c17 	ldw	r20,112(sp)
 4002d64:	dcc01b17 	ldw	r19,108(sp)
 4002d68:	dc801a17 	ldw	r18,104(sp)
 4002d6c:	dc401917 	ldw	r17,100(sp)
 4002d70:	dc001817 	ldw	r16,96(sp)
 4002d74:	dec02204 	addi	sp,sp,136
 4002d78:	f800283a 	ret
 4002d7c:	d8c02317 	ldw	r3,140(sp)
 4002d80:	0089c3c4 	movi	r2,9999
 4002d84:	18800015 	stw	r2,0(r3)
 4002d88:	90017726 	beq	r18,zero,4003368 <_dtoa_r+0x6dc>
 4002d8c:	00810074 	movhi	r2,1025
 4002d90:	10bece04 	addi	r2,r2,-1224
 4002d94:	d9002517 	ldw	r4,148(sp)
 4002d98:	203fec26 	beq	r4,zero,4002d4c <_dtoa_r+0xc0>
 4002d9c:	10c000c7 	ldb	r3,3(r2)
 4002da0:	1801781e 	bne	r3,zero,4003384 <_dtoa_r+0x6f8>
 4002da4:	10c000c4 	addi	r3,r2,3
 4002da8:	d9802517 	ldw	r6,148(sp)
 4002dac:	30c00015 	stw	r3,0(r6)
 4002db0:	003fe606 	br	4002d4c <_dtoa_r+0xc0>
 4002db4:	04e00034 	movhi	r19,32768
 4002db8:	9cffffc4 	addi	r19,r19,-1
 4002dbc:	00800044 	movi	r2,1
 4002dc0:	8ce6703a 	and	r19,r17,r19
 4002dc4:	80800015 	stw	r2,0(r16)
 4002dc8:	9823883a 	mov	r17,r19
 4002dcc:	003fcc06 	br	4002d00 <_dtoa_r+0x74>
 4002dd0:	d8800204 	addi	r2,sp,8
 4002dd4:	d8800015 	stw	r2,0(sp)
 4002dd8:	d9c00104 	addi	r7,sp,4
 4002ddc:	900b883a 	mov	r5,r18
 4002de0:	980d883a 	mov	r6,r19
 4002de4:	e009883a 	mov	r4,fp
 4002de8:	8820d53a 	srli	r16,r17,20
 4002dec:	40070940 	call	4007094 <__d2b>
 4002df0:	d8800915 	stw	r2,36(sp)
 4002df4:	8001651e 	bne	r16,zero,400338c <_dtoa_r+0x700>
 4002df8:	dd800217 	ldw	r22,8(sp)
 4002dfc:	dc000117 	ldw	r16,4(sp)
 4002e00:	00800804 	movi	r2,32
 4002e04:	b421883a 	add	r16,r22,r16
 4002e08:	80c10c84 	addi	r3,r16,1074
 4002e0c:	10c2d10e 	bge	r2,r3,4003954 <_dtoa_r+0xcc8>
 4002e10:	00801004 	movi	r2,64
 4002e14:	81010484 	addi	r4,r16,1042
 4002e18:	10c7c83a 	sub	r3,r2,r3
 4002e1c:	9108d83a 	srl	r4,r18,r4
 4002e20:	88e2983a 	sll	r17,r17,r3
 4002e24:	2448b03a 	or	r4,r4,r17
 4002e28:	400d1b80 	call	400d1b8 <__floatunsidf>
 4002e2c:	017f8434 	movhi	r5,65040
 4002e30:	01800044 	movi	r6,1
 4002e34:	1009883a 	mov	r4,r2
 4002e38:	194b883a 	add	r5,r3,r5
 4002e3c:	843fffc4 	addi	r16,r16,-1
 4002e40:	d9801115 	stw	r6,68(sp)
 4002e44:	000d883a 	mov	r6,zero
 4002e48:	01cffe34 	movhi	r7,16376
 4002e4c:	400c7600 	call	400c760 <__subdf3>
 4002e50:	0198dbf4 	movhi	r6,25455
 4002e54:	01cff4f4 	movhi	r7,16339
 4002e58:	3190d844 	addi	r6,r6,17249
 4002e5c:	39e1e9c4 	addi	r7,r7,-30809
 4002e60:	1009883a 	mov	r4,r2
 4002e64:	180b883a 	mov	r5,r3
 4002e68:	400bef40 	call	400bef4 <__muldf3>
 4002e6c:	01a2d874 	movhi	r6,35681
 4002e70:	01cff1f4 	movhi	r7,16327
 4002e74:	31b22cc4 	addi	r6,r6,-14157
 4002e78:	39e28a04 	addi	r7,r7,-30168
 4002e7c:	180b883a 	mov	r5,r3
 4002e80:	1009883a 	mov	r4,r2
 4002e84:	400aa200 	call	400aa20 <__adddf3>
 4002e88:	8009883a 	mov	r4,r16
 4002e8c:	1029883a 	mov	r20,r2
 4002e90:	1823883a 	mov	r17,r3
 4002e94:	400d0dc0 	call	400d0dc <__floatsidf>
 4002e98:	019427f4 	movhi	r6,20639
 4002e9c:	01cff4f4 	movhi	r7,16339
 4002ea0:	319e7ec4 	addi	r6,r6,31227
 4002ea4:	39d104c4 	addi	r7,r7,17427
 4002ea8:	1009883a 	mov	r4,r2
 4002eac:	180b883a 	mov	r5,r3
 4002eb0:	400bef40 	call	400bef4 <__muldf3>
 4002eb4:	100d883a 	mov	r6,r2
 4002eb8:	180f883a 	mov	r7,r3
 4002ebc:	a009883a 	mov	r4,r20
 4002ec0:	880b883a 	mov	r5,r17
 4002ec4:	400aa200 	call	400aa20 <__adddf3>
 4002ec8:	1009883a 	mov	r4,r2
 4002ecc:	180b883a 	mov	r5,r3
 4002ed0:	1029883a 	mov	r20,r2
 4002ed4:	1823883a 	mov	r17,r3
 4002ed8:	400d05c0 	call	400d05c <__fixdfsi>
 4002edc:	000d883a 	mov	r6,zero
 4002ee0:	000f883a 	mov	r7,zero
 4002ee4:	a009883a 	mov	r4,r20
 4002ee8:	880b883a 	mov	r5,r17
 4002eec:	d8800515 	stw	r2,20(sp)
 4002ef0:	400be000 	call	400be00 <__ledf2>
 4002ef4:	10028716 	blt	r2,zero,4003914 <_dtoa_r+0xc88>
 4002ef8:	d8c00517 	ldw	r3,20(sp)
 4002efc:	00800584 	movi	r2,22
 4002f00:	10c27536 	bltu	r2,r3,40038d8 <_dtoa_r+0xc4c>
 4002f04:	180490fa 	slli	r2,r3,3
 4002f08:	00c10074 	movhi	r3,1025
 4002f0c:	18feea04 	addi	r3,r3,-1112
 4002f10:	1885883a 	add	r2,r3,r2
 4002f14:	11000017 	ldw	r4,0(r2)
 4002f18:	11400117 	ldw	r5,4(r2)
 4002f1c:	900d883a 	mov	r6,r18
 4002f20:	980f883a 	mov	r7,r19
 4002f24:	400bd240 	call	400bd24 <__gedf2>
 4002f28:	00828d0e 	bge	zero,r2,4003960 <_dtoa_r+0xcd4>
 4002f2c:	d9000517 	ldw	r4,20(sp)
 4002f30:	d8000e15 	stw	zero,56(sp)
 4002f34:	213fffc4 	addi	r4,r4,-1
 4002f38:	d9000515 	stw	r4,20(sp)
 4002f3c:	b42dc83a 	sub	r22,r22,r16
 4002f40:	b5bfffc4 	addi	r22,r22,-1
 4002f44:	b0026f16 	blt	r22,zero,4003904 <_dtoa_r+0xc78>
 4002f48:	d8000815 	stw	zero,32(sp)
 4002f4c:	d9c00517 	ldw	r7,20(sp)
 4002f50:	38026416 	blt	r7,zero,40038e4 <_dtoa_r+0xc58>
 4002f54:	b1ed883a 	add	r22,r22,r7
 4002f58:	d9c00d15 	stw	r7,52(sp)
 4002f5c:	d8000a15 	stw	zero,40(sp)
 4002f60:	d9800317 	ldw	r6,12(sp)
 4002f64:	00800244 	movi	r2,9
 4002f68:	11811436 	bltu	r2,r6,40033bc <_dtoa_r+0x730>
 4002f6c:	00800144 	movi	r2,5
 4002f70:	1184e10e 	bge	r2,r6,40042f8 <_dtoa_r+0x166c>
 4002f74:	31bfff04 	addi	r6,r6,-4
 4002f78:	d9800315 	stw	r6,12(sp)
 4002f7c:	0023883a 	mov	r17,zero
 4002f80:	d9800317 	ldw	r6,12(sp)
 4002f84:	008000c4 	movi	r2,3
 4002f88:	30836726 	beq	r6,r2,4003d28 <_dtoa_r+0x109c>
 4002f8c:	1183410e 	bge	r2,r6,4003c94 <_dtoa_r+0x1008>
 4002f90:	d9c00317 	ldw	r7,12(sp)
 4002f94:	00800104 	movi	r2,4
 4002f98:	38827c26 	beq	r7,r2,400398c <_dtoa_r+0xd00>
 4002f9c:	00800144 	movi	r2,5
 4002fa0:	3884c41e 	bne	r7,r2,40042b4 <_dtoa_r+0x1628>
 4002fa4:	00800044 	movi	r2,1
 4002fa8:	d8800b15 	stw	r2,44(sp)
 4002fac:	d8c00517 	ldw	r3,20(sp)
 4002fb0:	d9002217 	ldw	r4,136(sp)
 4002fb4:	1907883a 	add	r3,r3,r4
 4002fb8:	19800044 	addi	r6,r3,1
 4002fbc:	d8c00c15 	stw	r3,48(sp)
 4002fc0:	d9800615 	stw	r6,24(sp)
 4002fc4:	0183a40e 	bge	zero,r6,4003e58 <_dtoa_r+0x11cc>
 4002fc8:	d9800617 	ldw	r6,24(sp)
 4002fcc:	3021883a 	mov	r16,r6
 4002fd0:	e0001115 	stw	zero,68(fp)
 4002fd4:	008005c4 	movi	r2,23
 4002fd8:	1184c92e 	bgeu	r2,r6,4004300 <_dtoa_r+0x1674>
 4002fdc:	00c00044 	movi	r3,1
 4002fe0:	00800104 	movi	r2,4
 4002fe4:	1085883a 	add	r2,r2,r2
 4002fe8:	11000504 	addi	r4,r2,20
 4002fec:	180b883a 	mov	r5,r3
 4002ff0:	18c00044 	addi	r3,r3,1
 4002ff4:	313ffb2e 	bgeu	r6,r4,4002fe4 <_dtoa_r+0x358>
 4002ff8:	e1401115 	stw	r5,68(fp)
 4002ffc:	e009883a 	mov	r4,fp
 4003000:	40063440 	call	4006344 <_Balloc>
 4003004:	d8800715 	stw	r2,28(sp)
 4003008:	e0801015 	stw	r2,64(fp)
 400300c:	00800384 	movi	r2,14
 4003010:	1400f736 	bltu	r2,r16,40033f0 <_dtoa_r+0x764>
 4003014:	8800f626 	beq	r17,zero,40033f0 <_dtoa_r+0x764>
 4003018:	d9c00517 	ldw	r7,20(sp)
 400301c:	01c39a0e 	bge	zero,r7,4003e88 <_dtoa_r+0x11fc>
 4003020:	388003cc 	andi	r2,r7,15
 4003024:	100490fa 	slli	r2,r2,3
 4003028:	382bd13a 	srai	r21,r7,4
 400302c:	00c10074 	movhi	r3,1025
 4003030:	18feea04 	addi	r3,r3,-1112
 4003034:	1885883a 	add	r2,r3,r2
 4003038:	a8c0040c 	andi	r3,r21,16
 400303c:	12400017 	ldw	r9,0(r2)
 4003040:	12000117 	ldw	r8,4(r2)
 4003044:	18037926 	beq	r3,zero,4003e2c <_dtoa_r+0x11a0>
 4003048:	00810074 	movhi	r2,1025
 400304c:	10bee004 	addi	r2,r2,-1152
 4003050:	11800817 	ldw	r6,32(r2)
 4003054:	11c00917 	ldw	r7,36(r2)
 4003058:	9009883a 	mov	r4,r18
 400305c:	980b883a 	mov	r5,r19
 4003060:	da001715 	stw	r8,92(sp)
 4003064:	da401615 	stw	r9,88(sp)
 4003068:	400b2cc0 	call	400b2cc <__divdf3>
 400306c:	da001717 	ldw	r8,92(sp)
 4003070:	da401617 	ldw	r9,88(sp)
 4003074:	ad4003cc 	andi	r21,r21,15
 4003078:	040000c4 	movi	r16,3
 400307c:	1023883a 	mov	r17,r2
 4003080:	1829883a 	mov	r20,r3
 4003084:	a8001126 	beq	r21,zero,40030cc <_dtoa_r+0x440>
 4003088:	05c10074 	movhi	r23,1025
 400308c:	bdfee004 	addi	r23,r23,-1152
 4003090:	4805883a 	mov	r2,r9
 4003094:	4007883a 	mov	r3,r8
 4003098:	a980004c 	andi	r6,r21,1
 400309c:	1009883a 	mov	r4,r2
 40030a0:	a82bd07a 	srai	r21,r21,1
 40030a4:	180b883a 	mov	r5,r3
 40030a8:	30000426 	beq	r6,zero,40030bc <_dtoa_r+0x430>
 40030ac:	b9800017 	ldw	r6,0(r23)
 40030b0:	b9c00117 	ldw	r7,4(r23)
 40030b4:	84000044 	addi	r16,r16,1
 40030b8:	400bef40 	call	400bef4 <__muldf3>
 40030bc:	bdc00204 	addi	r23,r23,8
 40030c0:	a83ff51e 	bne	r21,zero,4003098 <_dtoa_r+0x40c>
 40030c4:	1013883a 	mov	r9,r2
 40030c8:	1811883a 	mov	r8,r3
 40030cc:	480d883a 	mov	r6,r9
 40030d0:	400f883a 	mov	r7,r8
 40030d4:	8809883a 	mov	r4,r17
 40030d8:	a00b883a 	mov	r5,r20
 40030dc:	400b2cc0 	call	400b2cc <__divdf3>
 40030e0:	d8800f15 	stw	r2,60(sp)
 40030e4:	d8c01015 	stw	r3,64(sp)
 40030e8:	d8c00e17 	ldw	r3,56(sp)
 40030ec:	18000626 	beq	r3,zero,4003108 <_dtoa_r+0x47c>
 40030f0:	d9000f17 	ldw	r4,60(sp)
 40030f4:	d9401017 	ldw	r5,64(sp)
 40030f8:	000d883a 	mov	r6,zero
 40030fc:	01cffc34 	movhi	r7,16368
 4003100:	400be000 	call	400be00 <__ledf2>
 4003104:	10040b16 	blt	r2,zero,4004134 <_dtoa_r+0x14a8>
 4003108:	8009883a 	mov	r4,r16
 400310c:	400d0dc0 	call	400d0dc <__floatsidf>
 4003110:	d9800f17 	ldw	r6,60(sp)
 4003114:	d9c01017 	ldw	r7,64(sp)
 4003118:	1009883a 	mov	r4,r2
 400311c:	180b883a 	mov	r5,r3
 4003120:	400bef40 	call	400bef4 <__muldf3>
 4003124:	000d883a 	mov	r6,zero
 4003128:	01d00734 	movhi	r7,16412
 400312c:	1009883a 	mov	r4,r2
 4003130:	180b883a 	mov	r5,r3
 4003134:	400aa200 	call	400aa20 <__adddf3>
 4003138:	1021883a 	mov	r16,r2
 400313c:	d8800617 	ldw	r2,24(sp)
 4003140:	047f3034 	movhi	r17,64704
 4003144:	1c63883a 	add	r17,r3,r17
 4003148:	10031826 	beq	r2,zero,4003dac <_dtoa_r+0x1120>
 400314c:	d8c00517 	ldw	r3,20(sp)
 4003150:	db000617 	ldw	r12,24(sp)
 4003154:	d8c01315 	stw	r3,76(sp)
 4003158:	d9000b17 	ldw	r4,44(sp)
 400315c:	20038f26 	beq	r4,zero,4003f9c <_dtoa_r+0x1310>
 4003160:	60bfffc4 	addi	r2,r12,-1
 4003164:	100490fa 	slli	r2,r2,3
 4003168:	00c10074 	movhi	r3,1025
 400316c:	18feea04 	addi	r3,r3,-1112
 4003170:	1885883a 	add	r2,r3,r2
 4003174:	11800017 	ldw	r6,0(r2)
 4003178:	11c00117 	ldw	r7,4(r2)
 400317c:	d8800717 	ldw	r2,28(sp)
 4003180:	0009883a 	mov	r4,zero
 4003184:	014ff834 	movhi	r5,16352
 4003188:	db001615 	stw	r12,88(sp)
 400318c:	15c00044 	addi	r23,r2,1
 4003190:	400b2cc0 	call	400b2cc <__divdf3>
 4003194:	800d883a 	mov	r6,r16
 4003198:	880f883a 	mov	r7,r17
 400319c:	1009883a 	mov	r4,r2
 40031a0:	180b883a 	mov	r5,r3
 40031a4:	400c7600 	call	400c760 <__subdf3>
 40031a8:	d9401017 	ldw	r5,64(sp)
 40031ac:	d9000f17 	ldw	r4,60(sp)
 40031b0:	102b883a 	mov	r21,r2
 40031b4:	d8c01215 	stw	r3,72(sp)
 40031b8:	400d05c0 	call	400d05c <__fixdfsi>
 40031bc:	1009883a 	mov	r4,r2
 40031c0:	1029883a 	mov	r20,r2
 40031c4:	400d0dc0 	call	400d0dc <__floatsidf>
 40031c8:	d9000f17 	ldw	r4,60(sp)
 40031cc:	d9401017 	ldw	r5,64(sp)
 40031d0:	100d883a 	mov	r6,r2
 40031d4:	180f883a 	mov	r7,r3
 40031d8:	400c7600 	call	400c760 <__subdf3>
 40031dc:	1823883a 	mov	r17,r3
 40031e0:	d8c00717 	ldw	r3,28(sp)
 40031e4:	d9401217 	ldw	r5,72(sp)
 40031e8:	a2000c04 	addi	r8,r20,48
 40031ec:	1021883a 	mov	r16,r2
 40031f0:	1a000005 	stb	r8,0(r3)
 40031f4:	800d883a 	mov	r6,r16
 40031f8:	880f883a 	mov	r7,r17
 40031fc:	a809883a 	mov	r4,r21
 4003200:	4029883a 	mov	r20,r8
 4003204:	400bd240 	call	400bd24 <__gedf2>
 4003208:	00841d16 	blt	zero,r2,4004280 <_dtoa_r+0x15f4>
 400320c:	800d883a 	mov	r6,r16
 4003210:	880f883a 	mov	r7,r17
 4003214:	0009883a 	mov	r4,zero
 4003218:	014ffc34 	movhi	r5,16368
 400321c:	400c7600 	call	400c760 <__subdf3>
 4003220:	d9401217 	ldw	r5,72(sp)
 4003224:	100d883a 	mov	r6,r2
 4003228:	180f883a 	mov	r7,r3
 400322c:	a809883a 	mov	r4,r21
 4003230:	400bd240 	call	400bd24 <__gedf2>
 4003234:	db001617 	ldw	r12,88(sp)
 4003238:	00840e16 	blt	zero,r2,4004274 <_dtoa_r+0x15e8>
 400323c:	00800044 	movi	r2,1
 4003240:	13006b0e 	bge	r2,r12,40033f0 <_dtoa_r+0x764>
 4003244:	d9000717 	ldw	r4,28(sp)
 4003248:	dd800f15 	stw	r22,60(sp)
 400324c:	dcc01015 	stw	r19,64(sp)
 4003250:	2319883a 	add	r12,r4,r12
 4003254:	dcc01217 	ldw	r19,72(sp)
 4003258:	602d883a 	mov	r22,r12
 400325c:	dc801215 	stw	r18,72(sp)
 4003260:	b825883a 	mov	r18,r23
 4003264:	00000906 	br	400328c <_dtoa_r+0x600>
 4003268:	400c7600 	call	400c760 <__subdf3>
 400326c:	a80d883a 	mov	r6,r21
 4003270:	980f883a 	mov	r7,r19
 4003274:	1009883a 	mov	r4,r2
 4003278:	180b883a 	mov	r5,r3
 400327c:	400be000 	call	400be00 <__ledf2>
 4003280:	1003e816 	blt	r2,zero,4004224 <_dtoa_r+0x1598>
 4003284:	b825883a 	mov	r18,r23
 4003288:	bd83e926 	beq	r23,r22,4004230 <_dtoa_r+0x15a4>
 400328c:	a809883a 	mov	r4,r21
 4003290:	980b883a 	mov	r5,r19
 4003294:	000d883a 	mov	r6,zero
 4003298:	01d00934 	movhi	r7,16420
 400329c:	400bef40 	call	400bef4 <__muldf3>
 40032a0:	000d883a 	mov	r6,zero
 40032a4:	01d00934 	movhi	r7,16420
 40032a8:	8009883a 	mov	r4,r16
 40032ac:	880b883a 	mov	r5,r17
 40032b0:	102b883a 	mov	r21,r2
 40032b4:	1827883a 	mov	r19,r3
 40032b8:	400bef40 	call	400bef4 <__muldf3>
 40032bc:	180b883a 	mov	r5,r3
 40032c0:	1009883a 	mov	r4,r2
 40032c4:	1821883a 	mov	r16,r3
 40032c8:	1023883a 	mov	r17,r2
 40032cc:	400d05c0 	call	400d05c <__fixdfsi>
 40032d0:	1009883a 	mov	r4,r2
 40032d4:	1029883a 	mov	r20,r2
 40032d8:	400d0dc0 	call	400d0dc <__floatsidf>
 40032dc:	8809883a 	mov	r4,r17
 40032e0:	800b883a 	mov	r5,r16
 40032e4:	100d883a 	mov	r6,r2
 40032e8:	180f883a 	mov	r7,r3
 40032ec:	400c7600 	call	400c760 <__subdf3>
 40032f0:	a5000c04 	addi	r20,r20,48
 40032f4:	a80d883a 	mov	r6,r21
 40032f8:	980f883a 	mov	r7,r19
 40032fc:	1009883a 	mov	r4,r2
 4003300:	180b883a 	mov	r5,r3
 4003304:	95000005 	stb	r20,0(r18)
 4003308:	1021883a 	mov	r16,r2
 400330c:	1823883a 	mov	r17,r3
 4003310:	400be000 	call	400be00 <__ledf2>
 4003314:	bdc00044 	addi	r23,r23,1
 4003318:	800d883a 	mov	r6,r16
 400331c:	880f883a 	mov	r7,r17
 4003320:	0009883a 	mov	r4,zero
 4003324:	014ffc34 	movhi	r5,16368
 4003328:	103fcf0e 	bge	r2,zero,4003268 <_dtoa_r+0x5dc>
 400332c:	d8c01317 	ldw	r3,76(sp)
 4003330:	d8c00515 	stw	r3,20(sp)
 4003334:	d9400917 	ldw	r5,36(sp)
 4003338:	e009883a 	mov	r4,fp
 400333c:	40063ec0 	call	40063ec <_Bfree>
 4003340:	d9000517 	ldw	r4,20(sp)
 4003344:	d9802317 	ldw	r6,140(sp)
 4003348:	d9c02517 	ldw	r7,148(sp)
 400334c:	b8000005 	stb	zero,0(r23)
 4003350:	20800044 	addi	r2,r4,1
 4003354:	30800015 	stw	r2,0(r6)
 4003358:	3802aa26 	beq	r7,zero,4003e04 <_dtoa_r+0x1178>
 400335c:	3dc00015 	stw	r23,0(r7)
 4003360:	d8800717 	ldw	r2,28(sp)
 4003364:	003e7906 	br	4002d4c <_dtoa_r+0xc0>
 4003368:	00800434 	movhi	r2,16
 400336c:	10bfffc4 	addi	r2,r2,-1
 4003370:	88a2703a 	and	r17,r17,r2
 4003374:	883e851e 	bne	r17,zero,4002d8c <_dtoa_r+0x100>
 4003378:	00810074 	movhi	r2,1025
 400337c:	10becb04 	addi	r2,r2,-1236
 4003380:	003e8406 	br	4002d94 <_dtoa_r+0x108>
 4003384:	10c00204 	addi	r3,r2,8
 4003388:	003e8706 	br	4002da8 <_dtoa_r+0x11c>
 400338c:	01400434 	movhi	r5,16
 4003390:	297fffc4 	addi	r5,r5,-1
 4003394:	994a703a 	and	r5,r19,r5
 4003398:	9009883a 	mov	r4,r18
 400339c:	843f0044 	addi	r16,r16,-1023
 40033a0:	294ffc34 	orhi	r5,r5,16368
 40033a4:	dd800217 	ldw	r22,8(sp)
 40033a8:	d8001115 	stw	zero,68(sp)
 40033ac:	003ea506 	br	4002e44 <_dtoa_r+0x1b8>
 40033b0:	00810074 	movhi	r2,1025
 40033b4:	10bec204 	addi	r2,r2,-1272
 40033b8:	003e6406 	br	4002d4c <_dtoa_r+0xc0>
 40033bc:	e0001115 	stw	zero,68(fp)
 40033c0:	000b883a 	mov	r5,zero
 40033c4:	e009883a 	mov	r4,fp
 40033c8:	40063440 	call	4006344 <_Balloc>
 40033cc:	01bfffc4 	movi	r6,-1
 40033d0:	01c00044 	movi	r7,1
 40033d4:	d8800715 	stw	r2,28(sp)
 40033d8:	d9800c15 	stw	r6,48(sp)
 40033dc:	e0801015 	stw	r2,64(fp)
 40033e0:	d8000315 	stw	zero,12(sp)
 40033e4:	d9c00b15 	stw	r7,44(sp)
 40033e8:	d9800615 	stw	r6,24(sp)
 40033ec:	d8002215 	stw	zero,136(sp)
 40033f0:	d8800117 	ldw	r2,4(sp)
 40033f4:	10008916 	blt	r2,zero,400361c <_dtoa_r+0x990>
 40033f8:	d9000517 	ldw	r4,20(sp)
 40033fc:	00c00384 	movi	r3,14
 4003400:	19008616 	blt	r3,r4,400361c <_dtoa_r+0x990>
 4003404:	200490fa 	slli	r2,r4,3
 4003408:	00c10074 	movhi	r3,1025
 400340c:	d9802217 	ldw	r6,136(sp)
 4003410:	18feea04 	addi	r3,r3,-1112
 4003414:	1885883a 	add	r2,r3,r2
 4003418:	14000017 	ldw	r16,0(r2)
 400341c:	14400117 	ldw	r17,4(r2)
 4003420:	30016316 	blt	r6,zero,40039b0 <_dtoa_r+0xd24>
 4003424:	800d883a 	mov	r6,r16
 4003428:	880f883a 	mov	r7,r17
 400342c:	9009883a 	mov	r4,r18
 4003430:	980b883a 	mov	r5,r19
 4003434:	400b2cc0 	call	400b2cc <__divdf3>
 4003438:	180b883a 	mov	r5,r3
 400343c:	1009883a 	mov	r4,r2
 4003440:	400d05c0 	call	400d05c <__fixdfsi>
 4003444:	1009883a 	mov	r4,r2
 4003448:	102b883a 	mov	r21,r2
 400344c:	400d0dc0 	call	400d0dc <__floatsidf>
 4003450:	800d883a 	mov	r6,r16
 4003454:	880f883a 	mov	r7,r17
 4003458:	1009883a 	mov	r4,r2
 400345c:	180b883a 	mov	r5,r3
 4003460:	400bef40 	call	400bef4 <__muldf3>
 4003464:	100d883a 	mov	r6,r2
 4003468:	180f883a 	mov	r7,r3
 400346c:	9009883a 	mov	r4,r18
 4003470:	980b883a 	mov	r5,r19
 4003474:	400c7600 	call	400c760 <__subdf3>
 4003478:	d9c00717 	ldw	r7,28(sp)
 400347c:	1009883a 	mov	r4,r2
 4003480:	a8800c04 	addi	r2,r21,48
 4003484:	38800005 	stb	r2,0(r7)
 4003488:	3dc00044 	addi	r23,r7,1
 400348c:	d9c00617 	ldw	r7,24(sp)
 4003490:	01800044 	movi	r6,1
 4003494:	180b883a 	mov	r5,r3
 4003498:	2005883a 	mov	r2,r4
 400349c:	39803826 	beq	r7,r6,4003580 <_dtoa_r+0x8f4>
 40034a0:	000d883a 	mov	r6,zero
 40034a4:	01d00934 	movhi	r7,16420
 40034a8:	400bef40 	call	400bef4 <__muldf3>
 40034ac:	000d883a 	mov	r6,zero
 40034b0:	000f883a 	mov	r7,zero
 40034b4:	1009883a 	mov	r4,r2
 40034b8:	180b883a 	mov	r5,r3
 40034bc:	1025883a 	mov	r18,r2
 40034c0:	1827883a 	mov	r19,r3
 40034c4:	400bc9c0 	call	400bc9c <__eqdf2>
 40034c8:	103f9a26 	beq	r2,zero,4003334 <_dtoa_r+0x6a8>
 40034cc:	d9c00617 	ldw	r7,24(sp)
 40034d0:	d8c00717 	ldw	r3,28(sp)
 40034d4:	b829883a 	mov	r20,r23
 40034d8:	38bfffc4 	addi	r2,r7,-1
 40034dc:	18ad883a 	add	r22,r3,r2
 40034e0:	00000a06 	br	400350c <_dtoa_r+0x880>
 40034e4:	400bef40 	call	400bef4 <__muldf3>
 40034e8:	000d883a 	mov	r6,zero
 40034ec:	000f883a 	mov	r7,zero
 40034f0:	1009883a 	mov	r4,r2
 40034f4:	180b883a 	mov	r5,r3
 40034f8:	1025883a 	mov	r18,r2
 40034fc:	1827883a 	mov	r19,r3
 4003500:	b829883a 	mov	r20,r23
 4003504:	400bc9c0 	call	400bc9c <__eqdf2>
 4003508:	103f8a26 	beq	r2,zero,4003334 <_dtoa_r+0x6a8>
 400350c:	800d883a 	mov	r6,r16
 4003510:	880f883a 	mov	r7,r17
 4003514:	9009883a 	mov	r4,r18
 4003518:	980b883a 	mov	r5,r19
 400351c:	400b2cc0 	call	400b2cc <__divdf3>
 4003520:	180b883a 	mov	r5,r3
 4003524:	1009883a 	mov	r4,r2
 4003528:	400d05c0 	call	400d05c <__fixdfsi>
 400352c:	1009883a 	mov	r4,r2
 4003530:	102b883a 	mov	r21,r2
 4003534:	400d0dc0 	call	400d0dc <__floatsidf>
 4003538:	800d883a 	mov	r6,r16
 400353c:	880f883a 	mov	r7,r17
 4003540:	1009883a 	mov	r4,r2
 4003544:	180b883a 	mov	r5,r3
 4003548:	400bef40 	call	400bef4 <__muldf3>
 400354c:	100d883a 	mov	r6,r2
 4003550:	180f883a 	mov	r7,r3
 4003554:	9009883a 	mov	r4,r18
 4003558:	980b883a 	mov	r5,r19
 400355c:	400c7600 	call	400c760 <__subdf3>
 4003560:	aa000c04 	addi	r8,r21,48
 4003564:	a2000005 	stb	r8,0(r20)
 4003568:	000d883a 	mov	r6,zero
 400356c:	01d00934 	movhi	r7,16420
 4003570:	1009883a 	mov	r4,r2
 4003574:	180b883a 	mov	r5,r3
 4003578:	a5c00044 	addi	r23,r20,1
 400357c:	b53fd91e 	bne	r22,r20,40034e4 <_dtoa_r+0x858>
 4003580:	100d883a 	mov	r6,r2
 4003584:	180f883a 	mov	r7,r3
 4003588:	1009883a 	mov	r4,r2
 400358c:	180b883a 	mov	r5,r3
 4003590:	400aa200 	call	400aa20 <__adddf3>
 4003594:	100d883a 	mov	r6,r2
 4003598:	180f883a 	mov	r7,r3
 400359c:	8009883a 	mov	r4,r16
 40035a0:	880b883a 	mov	r5,r17
 40035a4:	1027883a 	mov	r19,r2
 40035a8:	1825883a 	mov	r18,r3
 40035ac:	400be000 	call	400be00 <__ledf2>
 40035b0:	10000816 	blt	r2,zero,40035d4 <_dtoa_r+0x948>
 40035b4:	980d883a 	mov	r6,r19
 40035b8:	900f883a 	mov	r7,r18
 40035bc:	8009883a 	mov	r4,r16
 40035c0:	880b883a 	mov	r5,r17
 40035c4:	400bc9c0 	call	400bc9c <__eqdf2>
 40035c8:	103f5a1e 	bne	r2,zero,4003334 <_dtoa_r+0x6a8>
 40035cc:	ad40004c 	andi	r21,r21,1
 40035d0:	a83f5826 	beq	r21,zero,4003334 <_dtoa_r+0x6a8>
 40035d4:	bd3fffc3 	ldbu	r20,-1(r23)
 40035d8:	b8bfffc4 	addi	r2,r23,-1
 40035dc:	1007883a 	mov	r3,r2
 40035e0:	01400e44 	movi	r5,57
 40035e4:	d9800717 	ldw	r6,28(sp)
 40035e8:	00000506 	br	4003600 <_dtoa_r+0x974>
 40035ec:	18ffffc4 	addi	r3,r3,-1
 40035f0:	11824726 	beq	r2,r6,4003f10 <_dtoa_r+0x1284>
 40035f4:	1d000003 	ldbu	r20,0(r3)
 40035f8:	102f883a 	mov	r23,r2
 40035fc:	10bfffc4 	addi	r2,r2,-1
 4003600:	a1003fcc 	andi	r4,r20,255
 4003604:	2100201c 	xori	r4,r4,128
 4003608:	213fe004 	addi	r4,r4,-128
 400360c:	217ff726 	beq	r4,r5,40035ec <_dtoa_r+0x960>
 4003610:	a2000044 	addi	r8,r20,1
 4003614:	12000005 	stb	r8,0(r2)
 4003618:	003f4606 	br	4003334 <_dtoa_r+0x6a8>
 400361c:	d9000b17 	ldw	r4,44(sp)
 4003620:	2000c826 	beq	r4,zero,4003944 <_dtoa_r+0xcb8>
 4003624:	d9800317 	ldw	r6,12(sp)
 4003628:	00c00044 	movi	r3,1
 400362c:	1980f90e 	bge	r3,r6,4003a14 <_dtoa_r+0xd88>
 4003630:	d8800617 	ldw	r2,24(sp)
 4003634:	d8c00a17 	ldw	r3,40(sp)
 4003638:	157fffc4 	addi	r21,r2,-1
 400363c:	1d41f316 	blt	r3,r21,4003e0c <_dtoa_r+0x1180>
 4003640:	1d6bc83a 	sub	r21,r3,r21
 4003644:	d9c00617 	ldw	r7,24(sp)
 4003648:	3802aa16 	blt	r7,zero,40040f4 <_dtoa_r+0x1468>
 400364c:	dd000817 	ldw	r20,32(sp)
 4003650:	d8800617 	ldw	r2,24(sp)
 4003654:	d8c00817 	ldw	r3,32(sp)
 4003658:	01400044 	movi	r5,1
 400365c:	e009883a 	mov	r4,fp
 4003660:	1887883a 	add	r3,r3,r2
 4003664:	d8c00815 	stw	r3,32(sp)
 4003668:	b0ad883a 	add	r22,r22,r2
 400366c:	40067780 	call	4006778 <__i2b>
 4003670:	1023883a 	mov	r17,r2
 4003674:	a0000826 	beq	r20,zero,4003698 <_dtoa_r+0xa0c>
 4003678:	0580070e 	bge	zero,r22,4003698 <_dtoa_r+0xa0c>
 400367c:	a005883a 	mov	r2,r20
 4003680:	b500b916 	blt	r22,r20,4003968 <_dtoa_r+0xcdc>
 4003684:	d9000817 	ldw	r4,32(sp)
 4003688:	a0a9c83a 	sub	r20,r20,r2
 400368c:	b0adc83a 	sub	r22,r22,r2
 4003690:	2089c83a 	sub	r4,r4,r2
 4003694:	d9000815 	stw	r4,32(sp)
 4003698:	d9800a17 	ldw	r6,40(sp)
 400369c:	0181810e 	bge	zero,r6,4003ca4 <_dtoa_r+0x1018>
 40036a0:	d9c00b17 	ldw	r7,44(sp)
 40036a4:	3800b326 	beq	r7,zero,4003974 <_dtoa_r+0xce8>
 40036a8:	a800b226 	beq	r21,zero,4003974 <_dtoa_r+0xce8>
 40036ac:	880b883a 	mov	r5,r17
 40036b0:	a80d883a 	mov	r6,r21
 40036b4:	e009883a 	mov	r4,fp
 40036b8:	4006a400 	call	4006a40 <__pow5mult>
 40036bc:	d9800917 	ldw	r6,36(sp)
 40036c0:	100b883a 	mov	r5,r2
 40036c4:	e009883a 	mov	r4,fp
 40036c8:	1023883a 	mov	r17,r2
 40036cc:	40067b40 	call	40067b4 <__multiply>
 40036d0:	1021883a 	mov	r16,r2
 40036d4:	d8800a17 	ldw	r2,40(sp)
 40036d8:	d9400917 	ldw	r5,36(sp)
 40036dc:	e009883a 	mov	r4,fp
 40036e0:	1545c83a 	sub	r2,r2,r21
 40036e4:	d8800a15 	stw	r2,40(sp)
 40036e8:	40063ec0 	call	40063ec <_Bfree>
 40036ec:	d8c00a17 	ldw	r3,40(sp)
 40036f0:	18009f1e 	bne	r3,zero,4003970 <_dtoa_r+0xce4>
 40036f4:	05c00044 	movi	r23,1
 40036f8:	e009883a 	mov	r4,fp
 40036fc:	b80b883a 	mov	r5,r23
 4003700:	40067780 	call	4006778 <__i2b>
 4003704:	d9000d17 	ldw	r4,52(sp)
 4003708:	102b883a 	mov	r21,r2
 400370c:	2000ce26 	beq	r4,zero,4003a48 <_dtoa_r+0xdbc>
 4003710:	200d883a 	mov	r6,r4
 4003714:	100b883a 	mov	r5,r2
 4003718:	e009883a 	mov	r4,fp
 400371c:	4006a400 	call	4006a40 <__pow5mult>
 4003720:	d9800317 	ldw	r6,12(sp)
 4003724:	102b883a 	mov	r21,r2
 4003728:	b981810e 	bge	r23,r6,4003d30 <_dtoa_r+0x10a4>
 400372c:	0027883a 	mov	r19,zero
 4003730:	a8800417 	ldw	r2,16(r21)
 4003734:	05c00804 	movi	r23,32
 4003738:	10800104 	addi	r2,r2,4
 400373c:	1085883a 	add	r2,r2,r2
 4003740:	1085883a 	add	r2,r2,r2
 4003744:	a885883a 	add	r2,r21,r2
 4003748:	11000017 	ldw	r4,0(r2)
 400374c:	40066600 	call	4006660 <__hi0bits>
 4003750:	b885c83a 	sub	r2,r23,r2
 4003754:	1585883a 	add	r2,r2,r22
 4003758:	108007cc 	andi	r2,r2,31
 400375c:	1000b326 	beq	r2,zero,4003a2c <_dtoa_r+0xda0>
 4003760:	00c00804 	movi	r3,32
 4003764:	1887c83a 	sub	r3,r3,r2
 4003768:	01000104 	movi	r4,4
 400376c:	20c2cd0e 	bge	r4,r3,40042a4 <_dtoa_r+0x1618>
 4003770:	00c00704 	movi	r3,28
 4003774:	1885c83a 	sub	r2,r3,r2
 4003778:	d8c00817 	ldw	r3,32(sp)
 400377c:	a0a9883a 	add	r20,r20,r2
 4003780:	b0ad883a 	add	r22,r22,r2
 4003784:	1887883a 	add	r3,r3,r2
 4003788:	d8c00815 	stw	r3,32(sp)
 400378c:	d9800817 	ldw	r6,32(sp)
 4003790:	0180040e 	bge	zero,r6,40037a4 <_dtoa_r+0xb18>
 4003794:	800b883a 	mov	r5,r16
 4003798:	e009883a 	mov	r4,fp
 400379c:	4006b800 	call	4006b80 <__lshift>
 40037a0:	1021883a 	mov	r16,r2
 40037a4:	0580050e 	bge	zero,r22,40037bc <_dtoa_r+0xb30>
 40037a8:	a80b883a 	mov	r5,r21
 40037ac:	b00d883a 	mov	r6,r22
 40037b0:	e009883a 	mov	r4,fp
 40037b4:	4006b800 	call	4006b80 <__lshift>
 40037b8:	102b883a 	mov	r21,r2
 40037bc:	d9c00e17 	ldw	r7,56(sp)
 40037c0:	3801211e 	bne	r7,zero,4003c48 <_dtoa_r+0xfbc>
 40037c4:	d9800617 	ldw	r6,24(sp)
 40037c8:	0181380e 	bge	zero,r6,4003cac <_dtoa_r+0x1020>
 40037cc:	d8c00b17 	ldw	r3,44(sp)
 40037d0:	1800ab1e 	bne	r3,zero,4003a80 <_dtoa_r+0xdf4>
 40037d4:	dc800717 	ldw	r18,28(sp)
 40037d8:	dcc00617 	ldw	r19,24(sp)
 40037dc:	9029883a 	mov	r20,r18
 40037e0:	00000206 	br	40037ec <_dtoa_r+0xb60>
 40037e4:	40064140 	call	4006414 <__multadd>
 40037e8:	1021883a 	mov	r16,r2
 40037ec:	a80b883a 	mov	r5,r21
 40037f0:	8009883a 	mov	r4,r16
 40037f4:	4002a640 	call	4002a64 <quorem>
 40037f8:	10800c04 	addi	r2,r2,48
 40037fc:	90800005 	stb	r2,0(r18)
 4003800:	94800044 	addi	r18,r18,1
 4003804:	9507c83a 	sub	r3,r18,r20
 4003808:	000f883a 	mov	r7,zero
 400380c:	01800284 	movi	r6,10
 4003810:	800b883a 	mov	r5,r16
 4003814:	e009883a 	mov	r4,fp
 4003818:	1cfff216 	blt	r3,r19,40037e4 <_dtoa_r+0xb58>
 400381c:	1011883a 	mov	r8,r2
 4003820:	d8800617 	ldw	r2,24(sp)
 4003824:	0082370e 	bge	zero,r2,4004104 <_dtoa_r+0x1478>
 4003828:	d9000717 	ldw	r4,28(sp)
 400382c:	0025883a 	mov	r18,zero
 4003830:	20af883a 	add	r23,r4,r2
 4003834:	01800044 	movi	r6,1
 4003838:	800b883a 	mov	r5,r16
 400383c:	e009883a 	mov	r4,fp
 4003840:	da001715 	stw	r8,92(sp)
 4003844:	4006b800 	call	4006b80 <__lshift>
 4003848:	a80b883a 	mov	r5,r21
 400384c:	1009883a 	mov	r4,r2
 4003850:	d8800915 	stw	r2,36(sp)
 4003854:	4006cc80 	call	4006cc8 <__mcmp>
 4003858:	da001717 	ldw	r8,92(sp)
 400385c:	0081800e 	bge	zero,r2,4003e60 <_dtoa_r+0x11d4>
 4003860:	b93fffc3 	ldbu	r4,-1(r23)
 4003864:	b8bfffc4 	addi	r2,r23,-1
 4003868:	1007883a 	mov	r3,r2
 400386c:	01800e44 	movi	r6,57
 4003870:	d9c00717 	ldw	r7,28(sp)
 4003874:	00000506 	br	400388c <_dtoa_r+0xc00>
 4003878:	18ffffc4 	addi	r3,r3,-1
 400387c:	11c12326 	beq	r2,r7,4003d0c <_dtoa_r+0x1080>
 4003880:	19000003 	ldbu	r4,0(r3)
 4003884:	102f883a 	mov	r23,r2
 4003888:	10bfffc4 	addi	r2,r2,-1
 400388c:	21403fcc 	andi	r5,r4,255
 4003890:	2940201c 	xori	r5,r5,128
 4003894:	297fe004 	addi	r5,r5,-128
 4003898:	29bff726 	beq	r5,r6,4003878 <_dtoa_r+0xbec>
 400389c:	21000044 	addi	r4,r4,1
 40038a0:	11000005 	stb	r4,0(r2)
 40038a4:	a80b883a 	mov	r5,r21
 40038a8:	e009883a 	mov	r4,fp
 40038ac:	40063ec0 	call	40063ec <_Bfree>
 40038b0:	883ea026 	beq	r17,zero,4003334 <_dtoa_r+0x6a8>
 40038b4:	90000426 	beq	r18,zero,40038c8 <_dtoa_r+0xc3c>
 40038b8:	94400326 	beq	r18,r17,40038c8 <_dtoa_r+0xc3c>
 40038bc:	900b883a 	mov	r5,r18
 40038c0:	e009883a 	mov	r4,fp
 40038c4:	40063ec0 	call	40063ec <_Bfree>
 40038c8:	880b883a 	mov	r5,r17
 40038cc:	e009883a 	mov	r4,fp
 40038d0:	40063ec0 	call	40063ec <_Bfree>
 40038d4:	003e9706 	br	4003334 <_dtoa_r+0x6a8>
 40038d8:	01800044 	movi	r6,1
 40038dc:	d9800e15 	stw	r6,56(sp)
 40038e0:	003d9606 	br	4002f3c <_dtoa_r+0x2b0>
 40038e4:	d8800817 	ldw	r2,32(sp)
 40038e8:	d8c00517 	ldw	r3,20(sp)
 40038ec:	d8000d15 	stw	zero,52(sp)
 40038f0:	10c5c83a 	sub	r2,r2,r3
 40038f4:	00c9c83a 	sub	r4,zero,r3
 40038f8:	d8800815 	stw	r2,32(sp)
 40038fc:	d9000a15 	stw	r4,40(sp)
 4003900:	003d9706 	br	4002f60 <_dtoa_r+0x2d4>
 4003904:	05adc83a 	sub	r22,zero,r22
 4003908:	dd800815 	stw	r22,32(sp)
 400390c:	002d883a 	mov	r22,zero
 4003910:	003d8e06 	br	4002f4c <_dtoa_r+0x2c0>
 4003914:	d9000517 	ldw	r4,20(sp)
 4003918:	400d0dc0 	call	400d0dc <__floatsidf>
 400391c:	100d883a 	mov	r6,r2
 4003920:	180f883a 	mov	r7,r3
 4003924:	a009883a 	mov	r4,r20
 4003928:	880b883a 	mov	r5,r17
 400392c:	400bc9c0 	call	400bc9c <__eqdf2>
 4003930:	103d7126 	beq	r2,zero,4002ef8 <_dtoa_r+0x26c>
 4003934:	d9c00517 	ldw	r7,20(sp)
 4003938:	39ffffc4 	addi	r7,r7,-1
 400393c:	d9c00515 	stw	r7,20(sp)
 4003940:	003d6d06 	br	4002ef8 <_dtoa_r+0x26c>
 4003944:	dd400a17 	ldw	r21,40(sp)
 4003948:	dd000817 	ldw	r20,32(sp)
 400394c:	0023883a 	mov	r17,zero
 4003950:	003f4806 	br	4003674 <_dtoa_r+0x9e8>
 4003954:	10e3c83a 	sub	r17,r2,r3
 4003958:	9448983a 	sll	r4,r18,r17
 400395c:	003d3206 	br	4002e28 <_dtoa_r+0x19c>
 4003960:	d8000e15 	stw	zero,56(sp)
 4003964:	003d7506 	br	4002f3c <_dtoa_r+0x2b0>
 4003968:	b005883a 	mov	r2,r22
 400396c:	003f4506 	br	4003684 <_dtoa_r+0x9f8>
 4003970:	dc000915 	stw	r16,36(sp)
 4003974:	d9800a17 	ldw	r6,40(sp)
 4003978:	d9400917 	ldw	r5,36(sp)
 400397c:	e009883a 	mov	r4,fp
 4003980:	4006a400 	call	4006a40 <__pow5mult>
 4003984:	1021883a 	mov	r16,r2
 4003988:	003f5a06 	br	40036f4 <_dtoa_r+0xa68>
 400398c:	01c00044 	movi	r7,1
 4003990:	d9c00b15 	stw	r7,44(sp)
 4003994:	d8802217 	ldw	r2,136(sp)
 4003998:	0081280e 	bge	zero,r2,4003e3c <_dtoa_r+0x11b0>
 400399c:	100d883a 	mov	r6,r2
 40039a0:	1021883a 	mov	r16,r2
 40039a4:	d8800c15 	stw	r2,48(sp)
 40039a8:	d8800615 	stw	r2,24(sp)
 40039ac:	003d8806 	br	4002fd0 <_dtoa_r+0x344>
 40039b0:	d8800617 	ldw	r2,24(sp)
 40039b4:	00be9b16 	blt	zero,r2,4003424 <_dtoa_r+0x798>
 40039b8:	10010f1e 	bne	r2,zero,4003df8 <_dtoa_r+0x116c>
 40039bc:	880b883a 	mov	r5,r17
 40039c0:	000d883a 	mov	r6,zero
 40039c4:	01d00534 	movhi	r7,16404
 40039c8:	8009883a 	mov	r4,r16
 40039cc:	400bef40 	call	400bef4 <__muldf3>
 40039d0:	900d883a 	mov	r6,r18
 40039d4:	980f883a 	mov	r7,r19
 40039d8:	1009883a 	mov	r4,r2
 40039dc:	180b883a 	mov	r5,r3
 40039e0:	400bd240 	call	400bd24 <__gedf2>
 40039e4:	002b883a 	mov	r21,zero
 40039e8:	0023883a 	mov	r17,zero
 40039ec:	1000bf16 	blt	r2,zero,4003cec <_dtoa_r+0x1060>
 40039f0:	d9802217 	ldw	r6,136(sp)
 40039f4:	ddc00717 	ldw	r23,28(sp)
 40039f8:	018c303a 	nor	r6,zero,r6
 40039fc:	d9800515 	stw	r6,20(sp)
 4003a00:	a80b883a 	mov	r5,r21
 4003a04:	e009883a 	mov	r4,fp
 4003a08:	40063ec0 	call	40063ec <_Bfree>
 4003a0c:	883e4926 	beq	r17,zero,4003334 <_dtoa_r+0x6a8>
 4003a10:	003fad06 	br	40038c8 <_dtoa_r+0xc3c>
 4003a14:	d9c01117 	ldw	r7,68(sp)
 4003a18:	3801bc26 	beq	r7,zero,400410c <_dtoa_r+0x1480>
 4003a1c:	10810cc4 	addi	r2,r2,1075
 4003a20:	dd400a17 	ldw	r21,40(sp)
 4003a24:	dd000817 	ldw	r20,32(sp)
 4003a28:	003f0a06 	br	4003654 <_dtoa_r+0x9c8>
 4003a2c:	00800704 	movi	r2,28
 4003a30:	d9000817 	ldw	r4,32(sp)
 4003a34:	a0a9883a 	add	r20,r20,r2
 4003a38:	b0ad883a 	add	r22,r22,r2
 4003a3c:	2089883a 	add	r4,r4,r2
 4003a40:	d9000815 	stw	r4,32(sp)
 4003a44:	003f5106 	br	400378c <_dtoa_r+0xb00>
 4003a48:	d8c00317 	ldw	r3,12(sp)
 4003a4c:	b8c1fc0e 	bge	r23,r3,4004240 <_dtoa_r+0x15b4>
 4003a50:	0027883a 	mov	r19,zero
 4003a54:	b805883a 	mov	r2,r23
 4003a58:	003f3e06 	br	4003754 <_dtoa_r+0xac8>
 4003a5c:	880b883a 	mov	r5,r17
 4003a60:	e009883a 	mov	r4,fp
 4003a64:	000f883a 	mov	r7,zero
 4003a68:	01800284 	movi	r6,10
 4003a6c:	40064140 	call	4006414 <__multadd>
 4003a70:	d9000c17 	ldw	r4,48(sp)
 4003a74:	1023883a 	mov	r17,r2
 4003a78:	0102040e 	bge	zero,r4,400428c <_dtoa_r+0x1600>
 4003a7c:	d9000615 	stw	r4,24(sp)
 4003a80:	0500050e 	bge	zero,r20,4003a98 <_dtoa_r+0xe0c>
 4003a84:	880b883a 	mov	r5,r17
 4003a88:	a00d883a 	mov	r6,r20
 4003a8c:	e009883a 	mov	r4,fp
 4003a90:	4006b800 	call	4006b80 <__lshift>
 4003a94:	1023883a 	mov	r17,r2
 4003a98:	9801241e 	bne	r19,zero,4003f2c <_dtoa_r+0x12a0>
 4003a9c:	8829883a 	mov	r20,r17
 4003aa0:	d9000617 	ldw	r4,24(sp)
 4003aa4:	dcc00717 	ldw	r19,28(sp)
 4003aa8:	9480004c 	andi	r18,r18,1
 4003aac:	20bfffc4 	addi	r2,r4,-1
 4003ab0:	9885883a 	add	r2,r19,r2
 4003ab4:	d8800415 	stw	r2,16(sp)
 4003ab8:	dc800615 	stw	r18,24(sp)
 4003abc:	a80b883a 	mov	r5,r21
 4003ac0:	8009883a 	mov	r4,r16
 4003ac4:	4002a640 	call	4002a64 <quorem>
 4003ac8:	880b883a 	mov	r5,r17
 4003acc:	8009883a 	mov	r4,r16
 4003ad0:	102f883a 	mov	r23,r2
 4003ad4:	4006cc80 	call	4006cc8 <__mcmp>
 4003ad8:	a80b883a 	mov	r5,r21
 4003adc:	a00d883a 	mov	r6,r20
 4003ae0:	e009883a 	mov	r4,fp
 4003ae4:	102d883a 	mov	r22,r2
 4003ae8:	4006d280 	call	4006d28 <__mdiff>
 4003aec:	1007883a 	mov	r3,r2
 4003af0:	10800317 	ldw	r2,12(r2)
 4003af4:	bc800c04 	addi	r18,r23,48
 4003af8:	180b883a 	mov	r5,r3
 4003afc:	10004e1e 	bne	r2,zero,4003c38 <_dtoa_r+0xfac>
 4003b00:	8009883a 	mov	r4,r16
 4003b04:	d8c01615 	stw	r3,88(sp)
 4003b08:	4006cc80 	call	4006cc8 <__mcmp>
 4003b0c:	d8c01617 	ldw	r3,88(sp)
 4003b10:	e009883a 	mov	r4,fp
 4003b14:	d8801615 	stw	r2,88(sp)
 4003b18:	180b883a 	mov	r5,r3
 4003b1c:	40063ec0 	call	40063ec <_Bfree>
 4003b20:	d8801617 	ldw	r2,88(sp)
 4003b24:	1000041e 	bne	r2,zero,4003b38 <_dtoa_r+0xeac>
 4003b28:	d9800317 	ldw	r6,12(sp)
 4003b2c:	3000021e 	bne	r6,zero,4003b38 <_dtoa_r+0xeac>
 4003b30:	d8c00617 	ldw	r3,24(sp)
 4003b34:	18003726 	beq	r3,zero,4003c14 <_dtoa_r+0xf88>
 4003b38:	b0002016 	blt	r22,zero,4003bbc <_dtoa_r+0xf30>
 4003b3c:	b000041e 	bne	r22,zero,4003b50 <_dtoa_r+0xec4>
 4003b40:	d9000317 	ldw	r4,12(sp)
 4003b44:	2000021e 	bne	r4,zero,4003b50 <_dtoa_r+0xec4>
 4003b48:	d8c00617 	ldw	r3,24(sp)
 4003b4c:	18001b26 	beq	r3,zero,4003bbc <_dtoa_r+0xf30>
 4003b50:	00810716 	blt	zero,r2,4003f70 <_dtoa_r+0x12e4>
 4003b54:	d8c00417 	ldw	r3,16(sp)
 4003b58:	9d800044 	addi	r22,r19,1
 4003b5c:	9c800005 	stb	r18,0(r19)
 4003b60:	b02f883a 	mov	r23,r22
 4003b64:	98c10626 	beq	r19,r3,4003f80 <_dtoa_r+0x12f4>
 4003b68:	800b883a 	mov	r5,r16
 4003b6c:	000f883a 	mov	r7,zero
 4003b70:	01800284 	movi	r6,10
 4003b74:	e009883a 	mov	r4,fp
 4003b78:	40064140 	call	4006414 <__multadd>
 4003b7c:	1021883a 	mov	r16,r2
 4003b80:	000f883a 	mov	r7,zero
 4003b84:	01800284 	movi	r6,10
 4003b88:	880b883a 	mov	r5,r17
 4003b8c:	e009883a 	mov	r4,fp
 4003b90:	8d002526 	beq	r17,r20,4003c28 <_dtoa_r+0xf9c>
 4003b94:	40064140 	call	4006414 <__multadd>
 4003b98:	a00b883a 	mov	r5,r20
 4003b9c:	000f883a 	mov	r7,zero
 4003ba0:	01800284 	movi	r6,10
 4003ba4:	e009883a 	mov	r4,fp
 4003ba8:	1023883a 	mov	r17,r2
 4003bac:	40064140 	call	4006414 <__multadd>
 4003bb0:	1029883a 	mov	r20,r2
 4003bb4:	b027883a 	mov	r19,r22
 4003bb8:	003fc006 	br	4003abc <_dtoa_r+0xe30>
 4003bbc:	9011883a 	mov	r8,r18
 4003bc0:	00800e0e 	bge	zero,r2,4003bfc <_dtoa_r+0xf70>
 4003bc4:	800b883a 	mov	r5,r16
 4003bc8:	01800044 	movi	r6,1
 4003bcc:	e009883a 	mov	r4,fp
 4003bd0:	da001715 	stw	r8,92(sp)
 4003bd4:	4006b800 	call	4006b80 <__lshift>
 4003bd8:	a80b883a 	mov	r5,r21
 4003bdc:	1009883a 	mov	r4,r2
 4003be0:	1021883a 	mov	r16,r2
 4003be4:	4006cc80 	call	4006cc8 <__mcmp>
 4003be8:	da001717 	ldw	r8,92(sp)
 4003bec:	0081960e 	bge	zero,r2,4004248 <_dtoa_r+0x15bc>
 4003bf0:	00800e44 	movi	r2,57
 4003bf4:	40817026 	beq	r8,r2,40041b8 <_dtoa_r+0x152c>
 4003bf8:	ba000c44 	addi	r8,r23,49
 4003bfc:	8825883a 	mov	r18,r17
 4003c00:	9dc00044 	addi	r23,r19,1
 4003c04:	9a000005 	stb	r8,0(r19)
 4003c08:	a023883a 	mov	r17,r20
 4003c0c:	dc000915 	stw	r16,36(sp)
 4003c10:	003f2406 	br	40038a4 <_dtoa_r+0xc18>
 4003c14:	00800e44 	movi	r2,57
 4003c18:	9011883a 	mov	r8,r18
 4003c1c:	90816626 	beq	r18,r2,40041b8 <_dtoa_r+0x152c>
 4003c20:	05bff516 	blt	zero,r22,4003bf8 <_dtoa_r+0xf6c>
 4003c24:	003ff506 	br	4003bfc <_dtoa_r+0xf70>
 4003c28:	40064140 	call	4006414 <__multadd>
 4003c2c:	1023883a 	mov	r17,r2
 4003c30:	1029883a 	mov	r20,r2
 4003c34:	003fdf06 	br	4003bb4 <_dtoa_r+0xf28>
 4003c38:	e009883a 	mov	r4,fp
 4003c3c:	40063ec0 	call	40063ec <_Bfree>
 4003c40:	00800044 	movi	r2,1
 4003c44:	003fbc06 	br	4003b38 <_dtoa_r+0xeac>
 4003c48:	a80b883a 	mov	r5,r21
 4003c4c:	8009883a 	mov	r4,r16
 4003c50:	4006cc80 	call	4006cc8 <__mcmp>
 4003c54:	103edb0e 	bge	r2,zero,40037c4 <_dtoa_r+0xb38>
 4003c58:	800b883a 	mov	r5,r16
 4003c5c:	000f883a 	mov	r7,zero
 4003c60:	01800284 	movi	r6,10
 4003c64:	e009883a 	mov	r4,fp
 4003c68:	40064140 	call	4006414 <__multadd>
 4003c6c:	1021883a 	mov	r16,r2
 4003c70:	d8800517 	ldw	r2,20(sp)
 4003c74:	d8c00b17 	ldw	r3,44(sp)
 4003c78:	10bfffc4 	addi	r2,r2,-1
 4003c7c:	d8800515 	stw	r2,20(sp)
 4003c80:	183f761e 	bne	r3,zero,4003a5c <_dtoa_r+0xdd0>
 4003c84:	d9000c17 	ldw	r4,48(sp)
 4003c88:	0101730e 	bge	zero,r4,4004258 <_dtoa_r+0x15cc>
 4003c8c:	d9000615 	stw	r4,24(sp)
 4003c90:	003ed006 	br	40037d4 <_dtoa_r+0xb48>
 4003c94:	00800084 	movi	r2,2
 4003c98:	3081861e 	bne	r6,r2,40042b4 <_dtoa_r+0x1628>
 4003c9c:	d8000b15 	stw	zero,44(sp)
 4003ca0:	003f3c06 	br	4003994 <_dtoa_r+0xd08>
 4003ca4:	dc000917 	ldw	r16,36(sp)
 4003ca8:	003e9206 	br	40036f4 <_dtoa_r+0xa68>
 4003cac:	d9c00317 	ldw	r7,12(sp)
 4003cb0:	00800084 	movi	r2,2
 4003cb4:	11fec50e 	bge	r2,r7,40037cc <_dtoa_r+0xb40>
 4003cb8:	d9000617 	ldw	r4,24(sp)
 4003cbc:	20013c1e 	bne	r4,zero,40041b0 <_dtoa_r+0x1524>
 4003cc0:	a80b883a 	mov	r5,r21
 4003cc4:	000f883a 	mov	r7,zero
 4003cc8:	01800144 	movi	r6,5
 4003ccc:	e009883a 	mov	r4,fp
 4003cd0:	40064140 	call	4006414 <__multadd>
 4003cd4:	100b883a 	mov	r5,r2
 4003cd8:	8009883a 	mov	r4,r16
 4003cdc:	102b883a 	mov	r21,r2
 4003ce0:	4006cc80 	call	4006cc8 <__mcmp>
 4003ce4:	dc000915 	stw	r16,36(sp)
 4003ce8:	00bf410e 	bge	zero,r2,40039f0 <_dtoa_r+0xd64>
 4003cec:	d9c00717 	ldw	r7,28(sp)
 4003cf0:	00800c44 	movi	r2,49
 4003cf4:	38800005 	stb	r2,0(r7)
 4003cf8:	d8800517 	ldw	r2,20(sp)
 4003cfc:	3dc00044 	addi	r23,r7,1
 4003d00:	10800044 	addi	r2,r2,1
 4003d04:	d8800515 	stw	r2,20(sp)
 4003d08:	003f3d06 	br	4003a00 <_dtoa_r+0xd74>
 4003d0c:	d9800517 	ldw	r6,20(sp)
 4003d10:	d9c00717 	ldw	r7,28(sp)
 4003d14:	00800c44 	movi	r2,49
 4003d18:	31800044 	addi	r6,r6,1
 4003d1c:	d9800515 	stw	r6,20(sp)
 4003d20:	38800005 	stb	r2,0(r7)
 4003d24:	003edf06 	br	40038a4 <_dtoa_r+0xc18>
 4003d28:	d8000b15 	stw	zero,44(sp)
 4003d2c:	003c9f06 	br	4002fac <_dtoa_r+0x320>
 4003d30:	903e7e1e 	bne	r18,zero,400372c <_dtoa_r+0xaa0>
 4003d34:	00800434 	movhi	r2,16
 4003d38:	10bfffc4 	addi	r2,r2,-1
 4003d3c:	9884703a 	and	r2,r19,r2
 4003d40:	1000ea1e 	bne	r2,zero,40040ec <_dtoa_r+0x1460>
 4003d44:	9cdffc2c 	andhi	r19,r19,32752
 4003d48:	9800e826 	beq	r19,zero,40040ec <_dtoa_r+0x1460>
 4003d4c:	d9c00817 	ldw	r7,32(sp)
 4003d50:	b5800044 	addi	r22,r22,1
 4003d54:	04c00044 	movi	r19,1
 4003d58:	39c00044 	addi	r7,r7,1
 4003d5c:	d9c00815 	stw	r7,32(sp)
 4003d60:	d8800d17 	ldw	r2,52(sp)
 4003d64:	103e721e 	bne	r2,zero,4003730 <_dtoa_r+0xaa4>
 4003d68:	00800044 	movi	r2,1
 4003d6c:	003e7906 	br	4003754 <_dtoa_r+0xac8>
 4003d70:	8009883a 	mov	r4,r16
 4003d74:	400d0dc0 	call	400d0dc <__floatsidf>
 4003d78:	d9800f17 	ldw	r6,60(sp)
 4003d7c:	d9c01017 	ldw	r7,64(sp)
 4003d80:	1009883a 	mov	r4,r2
 4003d84:	180b883a 	mov	r5,r3
 4003d88:	400bef40 	call	400bef4 <__muldf3>
 4003d8c:	000d883a 	mov	r6,zero
 4003d90:	01d00734 	movhi	r7,16412
 4003d94:	1009883a 	mov	r4,r2
 4003d98:	180b883a 	mov	r5,r3
 4003d9c:	400aa200 	call	400aa20 <__adddf3>
 4003da0:	047f3034 	movhi	r17,64704
 4003da4:	1021883a 	mov	r16,r2
 4003da8:	1c63883a 	add	r17,r3,r17
 4003dac:	d9000f17 	ldw	r4,60(sp)
 4003db0:	d9401017 	ldw	r5,64(sp)
 4003db4:	000d883a 	mov	r6,zero
 4003db8:	01d00534 	movhi	r7,16404
 4003dbc:	400c7600 	call	400c760 <__subdf3>
 4003dc0:	800d883a 	mov	r6,r16
 4003dc4:	880f883a 	mov	r7,r17
 4003dc8:	1009883a 	mov	r4,r2
 4003dcc:	180b883a 	mov	r5,r3
 4003dd0:	102b883a 	mov	r21,r2
 4003dd4:	1829883a 	mov	r20,r3
 4003dd8:	400bd240 	call	400bd24 <__gedf2>
 4003ddc:	00806c16 	blt	zero,r2,4003f90 <_dtoa_r+0x1304>
 4003de0:	89e0003c 	xorhi	r7,r17,32768
 4003de4:	800d883a 	mov	r6,r16
 4003de8:	a809883a 	mov	r4,r21
 4003dec:	a00b883a 	mov	r5,r20
 4003df0:	400be000 	call	400be00 <__ledf2>
 4003df4:	103d7e0e 	bge	r2,zero,40033f0 <_dtoa_r+0x764>
 4003df8:	002b883a 	mov	r21,zero
 4003dfc:	0023883a 	mov	r17,zero
 4003e00:	003efb06 	br	40039f0 <_dtoa_r+0xd64>
 4003e04:	d8800717 	ldw	r2,28(sp)
 4003e08:	003bd006 	br	4002d4c <_dtoa_r+0xc0>
 4003e0c:	d9000a17 	ldw	r4,40(sp)
 4003e10:	d9800d17 	ldw	r6,52(sp)
 4003e14:	dd400a15 	stw	r21,40(sp)
 4003e18:	a905c83a 	sub	r2,r21,r4
 4003e1c:	308d883a 	add	r6,r6,r2
 4003e20:	d9800d15 	stw	r6,52(sp)
 4003e24:	002b883a 	mov	r21,zero
 4003e28:	003e0606 	br	4003644 <_dtoa_r+0x9b8>
 4003e2c:	9023883a 	mov	r17,r18
 4003e30:	9829883a 	mov	r20,r19
 4003e34:	04000084 	movi	r16,2
 4003e38:	003c9206 	br	4003084 <_dtoa_r+0x3f8>
 4003e3c:	04000044 	movi	r16,1
 4003e40:	dc000c15 	stw	r16,48(sp)
 4003e44:	dc000615 	stw	r16,24(sp)
 4003e48:	dc002215 	stw	r16,136(sp)
 4003e4c:	e0001115 	stw	zero,68(fp)
 4003e50:	000b883a 	mov	r5,zero
 4003e54:	003c6906 	br	4002ffc <_dtoa_r+0x370>
 4003e58:	3021883a 	mov	r16,r6
 4003e5c:	003ffb06 	br	4003e4c <_dtoa_r+0x11c0>
 4003e60:	1000021e 	bne	r2,zero,4003e6c <_dtoa_r+0x11e0>
 4003e64:	4200004c 	andi	r8,r8,1
 4003e68:	403e7d1e 	bne	r8,zero,4003860 <_dtoa_r+0xbd4>
 4003e6c:	01000c04 	movi	r4,48
 4003e70:	00000106 	br	4003e78 <_dtoa_r+0x11ec>
 4003e74:	102f883a 	mov	r23,r2
 4003e78:	b8bfffc4 	addi	r2,r23,-1
 4003e7c:	10c00007 	ldb	r3,0(r2)
 4003e80:	193ffc26 	beq	r3,r4,4003e74 <_dtoa_r+0x11e8>
 4003e84:	003e8706 	br	40038a4 <_dtoa_r+0xc18>
 4003e88:	d8800517 	ldw	r2,20(sp)
 4003e8c:	00a3c83a 	sub	r17,zero,r2
 4003e90:	8800a426 	beq	r17,zero,4004124 <_dtoa_r+0x1498>
 4003e94:	888003cc 	andi	r2,r17,15
 4003e98:	100490fa 	slli	r2,r2,3
 4003e9c:	00c10074 	movhi	r3,1025
 4003ea0:	18feea04 	addi	r3,r3,-1112
 4003ea4:	1885883a 	add	r2,r3,r2
 4003ea8:	11800017 	ldw	r6,0(r2)
 4003eac:	11c00117 	ldw	r7,4(r2)
 4003eb0:	9009883a 	mov	r4,r18
 4003eb4:	980b883a 	mov	r5,r19
 4003eb8:	8823d13a 	srai	r17,r17,4
 4003ebc:	400bef40 	call	400bef4 <__muldf3>
 4003ec0:	d8800f15 	stw	r2,60(sp)
 4003ec4:	d8c01015 	stw	r3,64(sp)
 4003ec8:	8800e826 	beq	r17,zero,400426c <_dtoa_r+0x15e0>
 4003ecc:	05010074 	movhi	r20,1025
 4003ed0:	a53ee004 	addi	r20,r20,-1152
 4003ed4:	04000084 	movi	r16,2
 4003ed8:	8980004c 	andi	r6,r17,1
 4003edc:	1009883a 	mov	r4,r2
 4003ee0:	8823d07a 	srai	r17,r17,1
 4003ee4:	180b883a 	mov	r5,r3
 4003ee8:	30000426 	beq	r6,zero,4003efc <_dtoa_r+0x1270>
 4003eec:	a1800017 	ldw	r6,0(r20)
 4003ef0:	a1c00117 	ldw	r7,4(r20)
 4003ef4:	84000044 	addi	r16,r16,1
 4003ef8:	400bef40 	call	400bef4 <__muldf3>
 4003efc:	a5000204 	addi	r20,r20,8
 4003f00:	883ff51e 	bne	r17,zero,4003ed8 <_dtoa_r+0x124c>
 4003f04:	d8800f15 	stw	r2,60(sp)
 4003f08:	d8c01015 	stw	r3,64(sp)
 4003f0c:	003c7606 	br	40030e8 <_dtoa_r+0x45c>
 4003f10:	00c00c04 	movi	r3,48
 4003f14:	10c00005 	stb	r3,0(r2)
 4003f18:	d8c00517 	ldw	r3,20(sp)
 4003f1c:	bd3fffc3 	ldbu	r20,-1(r23)
 4003f20:	18c00044 	addi	r3,r3,1
 4003f24:	d8c00515 	stw	r3,20(sp)
 4003f28:	003db906 	br	4003610 <_dtoa_r+0x984>
 4003f2c:	89400117 	ldw	r5,4(r17)
 4003f30:	e009883a 	mov	r4,fp
 4003f34:	40063440 	call	4006344 <_Balloc>
 4003f38:	89800417 	ldw	r6,16(r17)
 4003f3c:	89400304 	addi	r5,r17,12
 4003f40:	11000304 	addi	r4,r2,12
 4003f44:	31800084 	addi	r6,r6,2
 4003f48:	318d883a 	add	r6,r6,r6
 4003f4c:	318d883a 	add	r6,r6,r6
 4003f50:	1027883a 	mov	r19,r2
 4003f54:	4005f780 	call	4005f78 <memcpy>
 4003f58:	01800044 	movi	r6,1
 4003f5c:	980b883a 	mov	r5,r19
 4003f60:	e009883a 	mov	r4,fp
 4003f64:	4006b800 	call	4006b80 <__lshift>
 4003f68:	1029883a 	mov	r20,r2
 4003f6c:	003ecc06 	br	4003aa0 <_dtoa_r+0xe14>
 4003f70:	00800e44 	movi	r2,57
 4003f74:	90809026 	beq	r18,r2,40041b8 <_dtoa_r+0x152c>
 4003f78:	92000044 	addi	r8,r18,1
 4003f7c:	003f1f06 	br	4003bfc <_dtoa_r+0xf70>
 4003f80:	9011883a 	mov	r8,r18
 4003f84:	8825883a 	mov	r18,r17
 4003f88:	a023883a 	mov	r17,r20
 4003f8c:	003e2906 	br	4003834 <_dtoa_r+0xba8>
 4003f90:	002b883a 	mov	r21,zero
 4003f94:	0023883a 	mov	r17,zero
 4003f98:	003f5406 	br	4003cec <_dtoa_r+0x1060>
 4003f9c:	61bfffc4 	addi	r6,r12,-1
 4003fa0:	300490fa 	slli	r2,r6,3
 4003fa4:	00c10074 	movhi	r3,1025
 4003fa8:	18feea04 	addi	r3,r3,-1112
 4003fac:	1885883a 	add	r2,r3,r2
 4003fb0:	11000017 	ldw	r4,0(r2)
 4003fb4:	11400117 	ldw	r5,4(r2)
 4003fb8:	d8800717 	ldw	r2,28(sp)
 4003fbc:	880f883a 	mov	r7,r17
 4003fc0:	d9801215 	stw	r6,72(sp)
 4003fc4:	800d883a 	mov	r6,r16
 4003fc8:	db001615 	stw	r12,88(sp)
 4003fcc:	15c00044 	addi	r23,r2,1
 4003fd0:	400bef40 	call	400bef4 <__muldf3>
 4003fd4:	d9401017 	ldw	r5,64(sp)
 4003fd8:	d9000f17 	ldw	r4,60(sp)
 4003fdc:	d8c01515 	stw	r3,84(sp)
 4003fe0:	d8801415 	stw	r2,80(sp)
 4003fe4:	400d05c0 	call	400d05c <__fixdfsi>
 4003fe8:	1009883a 	mov	r4,r2
 4003fec:	1021883a 	mov	r16,r2
 4003ff0:	400d0dc0 	call	400d0dc <__floatsidf>
 4003ff4:	d9000f17 	ldw	r4,60(sp)
 4003ff8:	d9401017 	ldw	r5,64(sp)
 4003ffc:	100d883a 	mov	r6,r2
 4004000:	180f883a 	mov	r7,r3
 4004004:	400c7600 	call	400c760 <__subdf3>
 4004008:	1829883a 	mov	r20,r3
 400400c:	d8c00717 	ldw	r3,28(sp)
 4004010:	84000c04 	addi	r16,r16,48
 4004014:	1023883a 	mov	r17,r2
 4004018:	1c000005 	stb	r16,0(r3)
 400401c:	db001617 	ldw	r12,88(sp)
 4004020:	00800044 	movi	r2,1
 4004024:	60802226 	beq	r12,r2,40040b0 <_dtoa_r+0x1424>
 4004028:	d9c00717 	ldw	r7,28(sp)
 400402c:	8805883a 	mov	r2,r17
 4004030:	b82b883a 	mov	r21,r23
 4004034:	3b19883a 	add	r12,r7,r12
 4004038:	6023883a 	mov	r17,r12
 400403c:	a007883a 	mov	r3,r20
 4004040:	dc800f15 	stw	r18,60(sp)
 4004044:	000d883a 	mov	r6,zero
 4004048:	01d00934 	movhi	r7,16420
 400404c:	1009883a 	mov	r4,r2
 4004050:	180b883a 	mov	r5,r3
 4004054:	400bef40 	call	400bef4 <__muldf3>
 4004058:	180b883a 	mov	r5,r3
 400405c:	1009883a 	mov	r4,r2
 4004060:	1829883a 	mov	r20,r3
 4004064:	1025883a 	mov	r18,r2
 4004068:	400d05c0 	call	400d05c <__fixdfsi>
 400406c:	1009883a 	mov	r4,r2
 4004070:	1021883a 	mov	r16,r2
 4004074:	400d0dc0 	call	400d0dc <__floatsidf>
 4004078:	100d883a 	mov	r6,r2
 400407c:	180f883a 	mov	r7,r3
 4004080:	9009883a 	mov	r4,r18
 4004084:	a00b883a 	mov	r5,r20
 4004088:	84000c04 	addi	r16,r16,48
 400408c:	400c7600 	call	400c760 <__subdf3>
 4004090:	ad400044 	addi	r21,r21,1
 4004094:	ac3fffc5 	stb	r16,-1(r21)
 4004098:	ac7fea1e 	bne	r21,r17,4004044 <_dtoa_r+0x13b8>
 400409c:	1023883a 	mov	r17,r2
 40040a0:	d8801217 	ldw	r2,72(sp)
 40040a4:	dc800f17 	ldw	r18,60(sp)
 40040a8:	1829883a 	mov	r20,r3
 40040ac:	b8af883a 	add	r23,r23,r2
 40040b0:	d9001417 	ldw	r4,80(sp)
 40040b4:	d9401517 	ldw	r5,84(sp)
 40040b8:	000d883a 	mov	r6,zero
 40040bc:	01cff834 	movhi	r7,16352
 40040c0:	400aa200 	call	400aa20 <__adddf3>
 40040c4:	880d883a 	mov	r6,r17
 40040c8:	a00f883a 	mov	r7,r20
 40040cc:	1009883a 	mov	r4,r2
 40040d0:	180b883a 	mov	r5,r3
 40040d4:	400be000 	call	400be00 <__ledf2>
 40040d8:	10003e0e 	bge	r2,zero,40041d4 <_dtoa_r+0x1548>
 40040dc:	d9001317 	ldw	r4,76(sp)
 40040e0:	bd3fffc3 	ldbu	r20,-1(r23)
 40040e4:	d9000515 	stw	r4,20(sp)
 40040e8:	003d3b06 	br	40035d8 <_dtoa_r+0x94c>
 40040ec:	0027883a 	mov	r19,zero
 40040f0:	003f1b06 	br	4003d60 <_dtoa_r+0x10d4>
 40040f4:	d8800817 	ldw	r2,32(sp)
 40040f8:	11e9c83a 	sub	r20,r2,r7
 40040fc:	0005883a 	mov	r2,zero
 4004100:	003d5406 	br	4003654 <_dtoa_r+0x9c8>
 4004104:	00800044 	movi	r2,1
 4004108:	003dc706 	br	4003828 <_dtoa_r+0xb9c>
 400410c:	d8c00217 	ldw	r3,8(sp)
 4004110:	00800d84 	movi	r2,54
 4004114:	dd400a17 	ldw	r21,40(sp)
 4004118:	10c5c83a 	sub	r2,r2,r3
 400411c:	dd000817 	ldw	r20,32(sp)
 4004120:	003d4c06 	br	4003654 <_dtoa_r+0x9c8>
 4004124:	dc800f15 	stw	r18,60(sp)
 4004128:	dcc01015 	stw	r19,64(sp)
 400412c:	04000084 	movi	r16,2
 4004130:	003bed06 	br	40030e8 <_dtoa_r+0x45c>
 4004134:	d9000617 	ldw	r4,24(sp)
 4004138:	203f0d26 	beq	r4,zero,4003d70 <_dtoa_r+0x10e4>
 400413c:	d9800c17 	ldw	r6,48(sp)
 4004140:	01bcab0e 	bge	zero,r6,40033f0 <_dtoa_r+0x764>
 4004144:	d9401017 	ldw	r5,64(sp)
 4004148:	d9000f17 	ldw	r4,60(sp)
 400414c:	000d883a 	mov	r6,zero
 4004150:	01d00934 	movhi	r7,16420
 4004154:	400bef40 	call	400bef4 <__muldf3>
 4004158:	81000044 	addi	r4,r16,1
 400415c:	d8800f15 	stw	r2,60(sp)
 4004160:	d8c01015 	stw	r3,64(sp)
 4004164:	400d0dc0 	call	400d0dc <__floatsidf>
 4004168:	d9800f17 	ldw	r6,60(sp)
 400416c:	d9c01017 	ldw	r7,64(sp)
 4004170:	1009883a 	mov	r4,r2
 4004174:	180b883a 	mov	r5,r3
 4004178:	400bef40 	call	400bef4 <__muldf3>
 400417c:	01d00734 	movhi	r7,16412
 4004180:	000d883a 	mov	r6,zero
 4004184:	1009883a 	mov	r4,r2
 4004188:	180b883a 	mov	r5,r3
 400418c:	400aa200 	call	400aa20 <__adddf3>
 4004190:	d9c00517 	ldw	r7,20(sp)
 4004194:	047f3034 	movhi	r17,64704
 4004198:	1021883a 	mov	r16,r2
 400419c:	39ffffc4 	addi	r7,r7,-1
 40041a0:	d9c01315 	stw	r7,76(sp)
 40041a4:	1c63883a 	add	r17,r3,r17
 40041a8:	db000c17 	ldw	r12,48(sp)
 40041ac:	003bea06 	br	4003158 <_dtoa_r+0x4cc>
 40041b0:	dc000915 	stw	r16,36(sp)
 40041b4:	003e0e06 	br	40039f0 <_dtoa_r+0xd64>
 40041b8:	01000e44 	movi	r4,57
 40041bc:	8825883a 	mov	r18,r17
 40041c0:	9dc00044 	addi	r23,r19,1
 40041c4:	99000005 	stb	r4,0(r19)
 40041c8:	a023883a 	mov	r17,r20
 40041cc:	dc000915 	stw	r16,36(sp)
 40041d0:	003da406 	br	4003864 <_dtoa_r+0xbd8>
 40041d4:	d9801417 	ldw	r6,80(sp)
 40041d8:	d9c01517 	ldw	r7,84(sp)
 40041dc:	0009883a 	mov	r4,zero
 40041e0:	014ff834 	movhi	r5,16352
 40041e4:	400c7600 	call	400c760 <__subdf3>
 40041e8:	880d883a 	mov	r6,r17
 40041ec:	a00f883a 	mov	r7,r20
 40041f0:	1009883a 	mov	r4,r2
 40041f4:	180b883a 	mov	r5,r3
 40041f8:	400bd240 	call	400bd24 <__gedf2>
 40041fc:	00bc7c0e 	bge	zero,r2,40033f0 <_dtoa_r+0x764>
 4004200:	01000c04 	movi	r4,48
 4004204:	00000106 	br	400420c <_dtoa_r+0x1580>
 4004208:	102f883a 	mov	r23,r2
 400420c:	b8bfffc4 	addi	r2,r23,-1
 4004210:	10c00007 	ldb	r3,0(r2)
 4004214:	193ffc26 	beq	r3,r4,4004208 <_dtoa_r+0x157c>
 4004218:	d9801317 	ldw	r6,76(sp)
 400421c:	d9800515 	stw	r6,20(sp)
 4004220:	003c4406 	br	4003334 <_dtoa_r+0x6a8>
 4004224:	d9801317 	ldw	r6,76(sp)
 4004228:	d9800515 	stw	r6,20(sp)
 400422c:	003cea06 	br	40035d8 <_dtoa_r+0x94c>
 4004230:	dd800f17 	ldw	r22,60(sp)
 4004234:	dcc01017 	ldw	r19,64(sp)
 4004238:	dc801217 	ldw	r18,72(sp)
 400423c:	003c6c06 	br	40033f0 <_dtoa_r+0x764>
 4004240:	903e031e 	bne	r18,zero,4003a50 <_dtoa_r+0xdc4>
 4004244:	003ebb06 	br	4003d34 <_dtoa_r+0x10a8>
 4004248:	103e6c1e 	bne	r2,zero,4003bfc <_dtoa_r+0xf70>
 400424c:	4080004c 	andi	r2,r8,1
 4004250:	103e6a26 	beq	r2,zero,4003bfc <_dtoa_r+0xf70>
 4004254:	003e6606 	br	4003bf0 <_dtoa_r+0xf64>
 4004258:	d8c00317 	ldw	r3,12(sp)
 400425c:	00800084 	movi	r2,2
 4004260:	10c02916 	blt	r2,r3,4004308 <_dtoa_r+0x167c>
 4004264:	d9000c17 	ldw	r4,48(sp)
 4004268:	003e8806 	br	4003c8c <_dtoa_r+0x1000>
 400426c:	04000084 	movi	r16,2
 4004270:	003b9d06 	br	40030e8 <_dtoa_r+0x45c>
 4004274:	d9001317 	ldw	r4,76(sp)
 4004278:	d9000515 	stw	r4,20(sp)
 400427c:	003cd606 	br	40035d8 <_dtoa_r+0x94c>
 4004280:	d8801317 	ldw	r2,76(sp)
 4004284:	d8800515 	stw	r2,20(sp)
 4004288:	003c2a06 	br	4003334 <_dtoa_r+0x6a8>
 400428c:	d9800317 	ldw	r6,12(sp)
 4004290:	00800084 	movi	r2,2
 4004294:	11801516 	blt	r2,r6,40042ec <_dtoa_r+0x1660>
 4004298:	d9c00c17 	ldw	r7,48(sp)
 400429c:	d9c00615 	stw	r7,24(sp)
 40042a0:	003df706 	br	4003a80 <_dtoa_r+0xdf4>
 40042a4:	193d3926 	beq	r3,r4,400378c <_dtoa_r+0xb00>
 40042a8:	00c00f04 	movi	r3,60
 40042ac:	1885c83a 	sub	r2,r3,r2
 40042b0:	003ddf06 	br	4003a30 <_dtoa_r+0xda4>
 40042b4:	e009883a 	mov	r4,fp
 40042b8:	e0001115 	stw	zero,68(fp)
 40042bc:	000b883a 	mov	r5,zero
 40042c0:	40063440 	call	4006344 <_Balloc>
 40042c4:	d8800715 	stw	r2,28(sp)
 40042c8:	d8c00717 	ldw	r3,28(sp)
 40042cc:	00bfffc4 	movi	r2,-1
 40042d0:	01000044 	movi	r4,1
 40042d4:	d8800c15 	stw	r2,48(sp)
 40042d8:	e0c01015 	stw	r3,64(fp)
 40042dc:	d9000b15 	stw	r4,44(sp)
 40042e0:	d8800615 	stw	r2,24(sp)
 40042e4:	d8002215 	stw	zero,136(sp)
 40042e8:	003c4106 	br	40033f0 <_dtoa_r+0x764>
 40042ec:	d8c00c17 	ldw	r3,48(sp)
 40042f0:	d8c00615 	stw	r3,24(sp)
 40042f4:	003e7006 	br	4003cb8 <_dtoa_r+0x102c>
 40042f8:	04400044 	movi	r17,1
 40042fc:	003b2006 	br	4002f80 <_dtoa_r+0x2f4>
 4004300:	000b883a 	mov	r5,zero
 4004304:	003b3d06 	br	4002ffc <_dtoa_r+0x370>
 4004308:	d8800c17 	ldw	r2,48(sp)
 400430c:	d8800615 	stw	r2,24(sp)
 4004310:	003e6906 	br	4003cb8 <_dtoa_r+0x102c>

04004314 <__sflush_r>:
 4004314:	2880030b 	ldhu	r2,12(r5)
 4004318:	defffb04 	addi	sp,sp,-20
 400431c:	dcc00315 	stw	r19,12(sp)
 4004320:	dc400115 	stw	r17,4(sp)
 4004324:	dfc00415 	stw	ra,16(sp)
 4004328:	dc800215 	stw	r18,8(sp)
 400432c:	dc000015 	stw	r16,0(sp)
 4004330:	10c0020c 	andi	r3,r2,8
 4004334:	2823883a 	mov	r17,r5
 4004338:	2027883a 	mov	r19,r4
 400433c:	1800311e 	bne	r3,zero,4004404 <__sflush_r+0xf0>
 4004340:	28c00117 	ldw	r3,4(r5)
 4004344:	10820014 	ori	r2,r2,2048
 4004348:	2880030d 	sth	r2,12(r5)
 400434c:	00c04b0e 	bge	zero,r3,400447c <__sflush_r+0x168>
 4004350:	8a000a17 	ldw	r8,40(r17)
 4004354:	40002326 	beq	r8,zero,40043e4 <__sflush_r+0xd0>
 4004358:	9c000017 	ldw	r16,0(r19)
 400435c:	10c4000c 	andi	r3,r2,4096
 4004360:	98000015 	stw	zero,0(r19)
 4004364:	18004826 	beq	r3,zero,4004488 <__sflush_r+0x174>
 4004368:	89801417 	ldw	r6,80(r17)
 400436c:	10c0010c 	andi	r3,r2,4
 4004370:	18000626 	beq	r3,zero,400438c <__sflush_r+0x78>
 4004374:	88c00117 	ldw	r3,4(r17)
 4004378:	88800c17 	ldw	r2,48(r17)
 400437c:	30cdc83a 	sub	r6,r6,r3
 4004380:	10000226 	beq	r2,zero,400438c <__sflush_r+0x78>
 4004384:	88800f17 	ldw	r2,60(r17)
 4004388:	308dc83a 	sub	r6,r6,r2
 400438c:	89400717 	ldw	r5,28(r17)
 4004390:	000f883a 	mov	r7,zero
 4004394:	9809883a 	mov	r4,r19
 4004398:	403ee83a 	callr	r8
 400439c:	00ffffc4 	movi	r3,-1
 40043a0:	10c04426 	beq	r2,r3,40044b4 <__sflush_r+0x1a0>
 40043a4:	88c0030b 	ldhu	r3,12(r17)
 40043a8:	89000417 	ldw	r4,16(r17)
 40043ac:	88000115 	stw	zero,4(r17)
 40043b0:	197dffcc 	andi	r5,r3,63487
 40043b4:	8940030d 	sth	r5,12(r17)
 40043b8:	89000015 	stw	r4,0(r17)
 40043bc:	18c4000c 	andi	r3,r3,4096
 40043c0:	18002c1e 	bne	r3,zero,4004474 <__sflush_r+0x160>
 40043c4:	89400c17 	ldw	r5,48(r17)
 40043c8:	9c000015 	stw	r16,0(r19)
 40043cc:	28000526 	beq	r5,zero,40043e4 <__sflush_r+0xd0>
 40043d0:	88801004 	addi	r2,r17,64
 40043d4:	28800226 	beq	r5,r2,40043e0 <__sflush_r+0xcc>
 40043d8:	9809883a 	mov	r4,r19
 40043dc:	4004a900 	call	4004a90 <_free_r>
 40043e0:	88000c15 	stw	zero,48(r17)
 40043e4:	0005883a 	mov	r2,zero
 40043e8:	dfc00417 	ldw	ra,16(sp)
 40043ec:	dcc00317 	ldw	r19,12(sp)
 40043f0:	dc800217 	ldw	r18,8(sp)
 40043f4:	dc400117 	ldw	r17,4(sp)
 40043f8:	dc000017 	ldw	r16,0(sp)
 40043fc:	dec00504 	addi	sp,sp,20
 4004400:	f800283a 	ret
 4004404:	2c800417 	ldw	r18,16(r5)
 4004408:	903ff626 	beq	r18,zero,40043e4 <__sflush_r+0xd0>
 400440c:	2c000017 	ldw	r16,0(r5)
 4004410:	108000cc 	andi	r2,r2,3
 4004414:	2c800015 	stw	r18,0(r5)
 4004418:	84a1c83a 	sub	r16,r16,r18
 400441c:	1000131e 	bne	r2,zero,400446c <__sflush_r+0x158>
 4004420:	28800517 	ldw	r2,20(r5)
 4004424:	88800215 	stw	r2,8(r17)
 4004428:	04000316 	blt	zero,r16,4004438 <__sflush_r+0x124>
 400442c:	003fed06 	br	40043e4 <__sflush_r+0xd0>
 4004430:	90a5883a 	add	r18,r18,r2
 4004434:	043feb0e 	bge	zero,r16,40043e4 <__sflush_r+0xd0>
 4004438:	88800917 	ldw	r2,36(r17)
 400443c:	89400717 	ldw	r5,28(r17)
 4004440:	800f883a 	mov	r7,r16
 4004444:	900d883a 	mov	r6,r18
 4004448:	9809883a 	mov	r4,r19
 400444c:	103ee83a 	callr	r2
 4004450:	80a1c83a 	sub	r16,r16,r2
 4004454:	00bff616 	blt	zero,r2,4004430 <__sflush_r+0x11c>
 4004458:	88c0030b 	ldhu	r3,12(r17)
 400445c:	00bfffc4 	movi	r2,-1
 4004460:	18c01014 	ori	r3,r3,64
 4004464:	88c0030d 	sth	r3,12(r17)
 4004468:	003fdf06 	br	40043e8 <__sflush_r+0xd4>
 400446c:	0005883a 	mov	r2,zero
 4004470:	003fec06 	br	4004424 <__sflush_r+0x110>
 4004474:	88801415 	stw	r2,80(r17)
 4004478:	003fd206 	br	40043c4 <__sflush_r+0xb0>
 400447c:	28c00f17 	ldw	r3,60(r5)
 4004480:	00ffb316 	blt	zero,r3,4004350 <__sflush_r+0x3c>
 4004484:	003fd706 	br	40043e4 <__sflush_r+0xd0>
 4004488:	89400717 	ldw	r5,28(r17)
 400448c:	000d883a 	mov	r6,zero
 4004490:	01c00044 	movi	r7,1
 4004494:	9809883a 	mov	r4,r19
 4004498:	403ee83a 	callr	r8
 400449c:	100d883a 	mov	r6,r2
 40044a0:	00bfffc4 	movi	r2,-1
 40044a4:	30801426 	beq	r6,r2,40044f8 <__sflush_r+0x1e4>
 40044a8:	8880030b 	ldhu	r2,12(r17)
 40044ac:	8a000a17 	ldw	r8,40(r17)
 40044b0:	003fae06 	br	400436c <__sflush_r+0x58>
 40044b4:	98c00017 	ldw	r3,0(r19)
 40044b8:	183fba26 	beq	r3,zero,40043a4 <__sflush_r+0x90>
 40044bc:	01000744 	movi	r4,29
 40044c0:	19000626 	beq	r3,r4,40044dc <__sflush_r+0x1c8>
 40044c4:	01000584 	movi	r4,22
 40044c8:	19000426 	beq	r3,r4,40044dc <__sflush_r+0x1c8>
 40044cc:	88c0030b 	ldhu	r3,12(r17)
 40044d0:	18c01014 	ori	r3,r3,64
 40044d4:	88c0030d 	sth	r3,12(r17)
 40044d8:	003fc306 	br	40043e8 <__sflush_r+0xd4>
 40044dc:	8880030b 	ldhu	r2,12(r17)
 40044e0:	88c00417 	ldw	r3,16(r17)
 40044e4:	88000115 	stw	zero,4(r17)
 40044e8:	10bdffcc 	andi	r2,r2,63487
 40044ec:	8880030d 	sth	r2,12(r17)
 40044f0:	88c00015 	stw	r3,0(r17)
 40044f4:	003fb306 	br	40043c4 <__sflush_r+0xb0>
 40044f8:	98800017 	ldw	r2,0(r19)
 40044fc:	103fea26 	beq	r2,zero,40044a8 <__sflush_r+0x194>
 4004500:	00c00744 	movi	r3,29
 4004504:	10c00226 	beq	r2,r3,4004510 <__sflush_r+0x1fc>
 4004508:	00c00584 	movi	r3,22
 400450c:	10c0031e 	bne	r2,r3,400451c <__sflush_r+0x208>
 4004510:	9c000015 	stw	r16,0(r19)
 4004514:	0005883a 	mov	r2,zero
 4004518:	003fb306 	br	40043e8 <__sflush_r+0xd4>
 400451c:	88c0030b 	ldhu	r3,12(r17)
 4004520:	3005883a 	mov	r2,r6
 4004524:	18c01014 	ori	r3,r3,64
 4004528:	88c0030d 	sth	r3,12(r17)
 400452c:	003fae06 	br	40043e8 <__sflush_r+0xd4>

04004530 <_fflush_r>:
 4004530:	defffd04 	addi	sp,sp,-12
 4004534:	dc000115 	stw	r16,4(sp)
 4004538:	dfc00215 	stw	ra,8(sp)
 400453c:	2021883a 	mov	r16,r4
 4004540:	20000226 	beq	r4,zero,400454c <_fflush_r+0x1c>
 4004544:	20800e17 	ldw	r2,56(r4)
 4004548:	10000c26 	beq	r2,zero,400457c <_fflush_r+0x4c>
 400454c:	2880030f 	ldh	r2,12(r5)
 4004550:	1000051e 	bne	r2,zero,4004568 <_fflush_r+0x38>
 4004554:	0005883a 	mov	r2,zero
 4004558:	dfc00217 	ldw	ra,8(sp)
 400455c:	dc000117 	ldw	r16,4(sp)
 4004560:	dec00304 	addi	sp,sp,12
 4004564:	f800283a 	ret
 4004568:	8009883a 	mov	r4,r16
 400456c:	dfc00217 	ldw	ra,8(sp)
 4004570:	dc000117 	ldw	r16,4(sp)
 4004574:	dec00304 	addi	sp,sp,12
 4004578:	40043141 	jmpi	4004314 <__sflush_r>
 400457c:	d9400015 	stw	r5,0(sp)
 4004580:	400491c0 	call	400491c <__sinit>
 4004584:	d9400017 	ldw	r5,0(sp)
 4004588:	003ff006 	br	400454c <_fflush_r+0x1c>

0400458c <fflush>:
 400458c:	20000526 	beq	r4,zero,40045a4 <fflush+0x18>
 4004590:	00810074 	movhi	r2,1025
 4004594:	10861c04 	addi	r2,r2,6256
 4004598:	200b883a 	mov	r5,r4
 400459c:	11000017 	ldw	r4,0(r2)
 40045a0:	40045301 	jmpi	4004530 <_fflush_r>
 40045a4:	00810074 	movhi	r2,1025
 40045a8:	10861b04 	addi	r2,r2,6252
 40045ac:	11000017 	ldw	r4,0(r2)
 40045b0:	01410034 	movhi	r5,1024
 40045b4:	29514c04 	addi	r5,r5,17712
 40045b8:	400532c1 	jmpi	400532c <_fwalk_reent>

040045bc <__fp_unlock>:
 40045bc:	0005883a 	mov	r2,zero
 40045c0:	f800283a 	ret

040045c4 <_cleanup_r>:
 40045c4:	01410074 	movhi	r5,1025
 40045c8:	29653204 	addi	r5,r5,-27448
 40045cc:	400532c1 	jmpi	400532c <_fwalk_reent>

040045d0 <__sinit.part.1>:
 40045d0:	defff704 	addi	sp,sp,-36
 40045d4:	00c10034 	movhi	r3,1024
 40045d8:	dfc00815 	stw	ra,32(sp)
 40045dc:	ddc00715 	stw	r23,28(sp)
 40045e0:	dd800615 	stw	r22,24(sp)
 40045e4:	dd400515 	stw	r21,20(sp)
 40045e8:	dd000415 	stw	r20,16(sp)
 40045ec:	dcc00315 	stw	r19,12(sp)
 40045f0:	dc800215 	stw	r18,8(sp)
 40045f4:	dc400115 	stw	r17,4(sp)
 40045f8:	dc000015 	stw	r16,0(sp)
 40045fc:	18d17104 	addi	r3,r3,17860
 4004600:	24000117 	ldw	r16,4(r4)
 4004604:	20c00f15 	stw	r3,60(r4)
 4004608:	2080bb04 	addi	r2,r4,748
 400460c:	00c000c4 	movi	r3,3
 4004610:	20c0b915 	stw	r3,740(r4)
 4004614:	2080ba15 	stw	r2,744(r4)
 4004618:	2000b815 	stw	zero,736(r4)
 400461c:	05c00204 	movi	r23,8
 4004620:	00800104 	movi	r2,4
 4004624:	2025883a 	mov	r18,r4
 4004628:	b80d883a 	mov	r6,r23
 400462c:	81001704 	addi	r4,r16,92
 4004630:	000b883a 	mov	r5,zero
 4004634:	80000015 	stw	zero,0(r16)
 4004638:	80000115 	stw	zero,4(r16)
 400463c:	80000215 	stw	zero,8(r16)
 4004640:	8080030d 	sth	r2,12(r16)
 4004644:	80001915 	stw	zero,100(r16)
 4004648:	8000038d 	sth	zero,14(r16)
 400464c:	80000415 	stw	zero,16(r16)
 4004650:	80000515 	stw	zero,20(r16)
 4004654:	80000615 	stw	zero,24(r16)
 4004658:	400621c0 	call	400621c <memset>
 400465c:	05810034 	movhi	r22,1024
 4004660:	94400217 	ldw	r17,8(r18)
 4004664:	05410034 	movhi	r21,1024
 4004668:	05010034 	movhi	r20,1024
 400466c:	04c10034 	movhi	r19,1024
 4004670:	b59e8a04 	addi	r22,r22,31272
 4004674:	ad5ea104 	addi	r21,r21,31364
 4004678:	a51ec004 	addi	r20,r20,31488
 400467c:	9cded704 	addi	r19,r19,31580
 4004680:	85800815 	stw	r22,32(r16)
 4004684:	85400915 	stw	r21,36(r16)
 4004688:	85000a15 	stw	r20,40(r16)
 400468c:	84c00b15 	stw	r19,44(r16)
 4004690:	84000715 	stw	r16,28(r16)
 4004694:	00800284 	movi	r2,10
 4004698:	8880030d 	sth	r2,12(r17)
 400469c:	00800044 	movi	r2,1
 40046a0:	b80d883a 	mov	r6,r23
 40046a4:	89001704 	addi	r4,r17,92
 40046a8:	000b883a 	mov	r5,zero
 40046ac:	88000015 	stw	zero,0(r17)
 40046b0:	88000115 	stw	zero,4(r17)
 40046b4:	88000215 	stw	zero,8(r17)
 40046b8:	88001915 	stw	zero,100(r17)
 40046bc:	8880038d 	sth	r2,14(r17)
 40046c0:	88000415 	stw	zero,16(r17)
 40046c4:	88000515 	stw	zero,20(r17)
 40046c8:	88000615 	stw	zero,24(r17)
 40046cc:	400621c0 	call	400621c <memset>
 40046d0:	94000317 	ldw	r16,12(r18)
 40046d4:	00800484 	movi	r2,18
 40046d8:	8c400715 	stw	r17,28(r17)
 40046dc:	8d800815 	stw	r22,32(r17)
 40046e0:	8d400915 	stw	r21,36(r17)
 40046e4:	8d000a15 	stw	r20,40(r17)
 40046e8:	8cc00b15 	stw	r19,44(r17)
 40046ec:	8080030d 	sth	r2,12(r16)
 40046f0:	00800084 	movi	r2,2
 40046f4:	80000015 	stw	zero,0(r16)
 40046f8:	80000115 	stw	zero,4(r16)
 40046fc:	80000215 	stw	zero,8(r16)
 4004700:	80001915 	stw	zero,100(r16)
 4004704:	8080038d 	sth	r2,14(r16)
 4004708:	80000415 	stw	zero,16(r16)
 400470c:	80000515 	stw	zero,20(r16)
 4004710:	80000615 	stw	zero,24(r16)
 4004714:	b80d883a 	mov	r6,r23
 4004718:	000b883a 	mov	r5,zero
 400471c:	81001704 	addi	r4,r16,92
 4004720:	400621c0 	call	400621c <memset>
 4004724:	00800044 	movi	r2,1
 4004728:	84000715 	stw	r16,28(r16)
 400472c:	85800815 	stw	r22,32(r16)
 4004730:	85400915 	stw	r21,36(r16)
 4004734:	85000a15 	stw	r20,40(r16)
 4004738:	84c00b15 	stw	r19,44(r16)
 400473c:	90800e15 	stw	r2,56(r18)
 4004740:	dfc00817 	ldw	ra,32(sp)
 4004744:	ddc00717 	ldw	r23,28(sp)
 4004748:	dd800617 	ldw	r22,24(sp)
 400474c:	dd400517 	ldw	r21,20(sp)
 4004750:	dd000417 	ldw	r20,16(sp)
 4004754:	dcc00317 	ldw	r19,12(sp)
 4004758:	dc800217 	ldw	r18,8(sp)
 400475c:	dc400117 	ldw	r17,4(sp)
 4004760:	dc000017 	ldw	r16,0(sp)
 4004764:	dec00904 	addi	sp,sp,36
 4004768:	f800283a 	ret

0400476c <__fp_lock>:
 400476c:	0005883a 	mov	r2,zero
 4004770:	f800283a 	ret

04004774 <__sfmoreglue>:
 4004774:	defffc04 	addi	sp,sp,-16
 4004778:	dc800215 	stw	r18,8(sp)
 400477c:	2825883a 	mov	r18,r5
 4004780:	dc000015 	stw	r16,0(sp)
 4004784:	01401a04 	movi	r5,104
 4004788:	2021883a 	mov	r16,r4
 400478c:	913fffc4 	addi	r4,r18,-1
 4004790:	dfc00315 	stw	ra,12(sp)
 4004794:	dc400115 	stw	r17,4(sp)
 4004798:	400a9f80 	call	400a9f8 <__mulsi3>
 400479c:	8009883a 	mov	r4,r16
 40047a0:	11401d04 	addi	r5,r2,116
 40047a4:	1023883a 	mov	r17,r2
 40047a8:	40056880 	call	4005688 <_malloc_r>
 40047ac:	1021883a 	mov	r16,r2
 40047b0:	10000726 	beq	r2,zero,40047d0 <__sfmoreglue+0x5c>
 40047b4:	11000304 	addi	r4,r2,12
 40047b8:	10000015 	stw	zero,0(r2)
 40047bc:	14800115 	stw	r18,4(r2)
 40047c0:	11000215 	stw	r4,8(r2)
 40047c4:	89801a04 	addi	r6,r17,104
 40047c8:	000b883a 	mov	r5,zero
 40047cc:	400621c0 	call	400621c <memset>
 40047d0:	8005883a 	mov	r2,r16
 40047d4:	dfc00317 	ldw	ra,12(sp)
 40047d8:	dc800217 	ldw	r18,8(sp)
 40047dc:	dc400117 	ldw	r17,4(sp)
 40047e0:	dc000017 	ldw	r16,0(sp)
 40047e4:	dec00404 	addi	sp,sp,16
 40047e8:	f800283a 	ret

040047ec <__sfp>:
 40047ec:	defffb04 	addi	sp,sp,-20
 40047f0:	dc000015 	stw	r16,0(sp)
 40047f4:	04010074 	movhi	r16,1025
 40047f8:	84061b04 	addi	r16,r16,6252
 40047fc:	dcc00315 	stw	r19,12(sp)
 4004800:	2027883a 	mov	r19,r4
 4004804:	81000017 	ldw	r4,0(r16)
 4004808:	dfc00415 	stw	ra,16(sp)
 400480c:	dc800215 	stw	r18,8(sp)
 4004810:	20800e17 	ldw	r2,56(r4)
 4004814:	dc400115 	stw	r17,4(sp)
 4004818:	1000021e 	bne	r2,zero,4004824 <__sfp+0x38>
 400481c:	40045d00 	call	40045d0 <__sinit.part.1>
 4004820:	81000017 	ldw	r4,0(r16)
 4004824:	2480b804 	addi	r18,r4,736
 4004828:	047fffc4 	movi	r17,-1
 400482c:	91000117 	ldw	r4,4(r18)
 4004830:	94000217 	ldw	r16,8(r18)
 4004834:	213fffc4 	addi	r4,r4,-1
 4004838:	20000a16 	blt	r4,zero,4004864 <__sfp+0x78>
 400483c:	8080030f 	ldh	r2,12(r16)
 4004840:	10000c26 	beq	r2,zero,4004874 <__sfp+0x88>
 4004844:	80c01d04 	addi	r3,r16,116
 4004848:	00000206 	br	4004854 <__sfp+0x68>
 400484c:	18bfe60f 	ldh	r2,-104(r3)
 4004850:	10000826 	beq	r2,zero,4004874 <__sfp+0x88>
 4004854:	213fffc4 	addi	r4,r4,-1
 4004858:	1c3ffd04 	addi	r16,r3,-12
 400485c:	18c01a04 	addi	r3,r3,104
 4004860:	247ffa1e 	bne	r4,r17,400484c <__sfp+0x60>
 4004864:	90800017 	ldw	r2,0(r18)
 4004868:	10001d26 	beq	r2,zero,40048e0 <__sfp+0xf4>
 400486c:	1025883a 	mov	r18,r2
 4004870:	003fee06 	br	400482c <__sfp+0x40>
 4004874:	00bfffc4 	movi	r2,-1
 4004878:	8080038d 	sth	r2,14(r16)
 400487c:	00800044 	movi	r2,1
 4004880:	8080030d 	sth	r2,12(r16)
 4004884:	80001915 	stw	zero,100(r16)
 4004888:	80000015 	stw	zero,0(r16)
 400488c:	80000215 	stw	zero,8(r16)
 4004890:	80000115 	stw	zero,4(r16)
 4004894:	80000415 	stw	zero,16(r16)
 4004898:	80000515 	stw	zero,20(r16)
 400489c:	80000615 	stw	zero,24(r16)
 40048a0:	01800204 	movi	r6,8
 40048a4:	000b883a 	mov	r5,zero
 40048a8:	81001704 	addi	r4,r16,92
 40048ac:	400621c0 	call	400621c <memset>
 40048b0:	8005883a 	mov	r2,r16
 40048b4:	80000c15 	stw	zero,48(r16)
 40048b8:	80000d15 	stw	zero,52(r16)
 40048bc:	80001115 	stw	zero,68(r16)
 40048c0:	80001215 	stw	zero,72(r16)
 40048c4:	dfc00417 	ldw	ra,16(sp)
 40048c8:	dcc00317 	ldw	r19,12(sp)
 40048cc:	dc800217 	ldw	r18,8(sp)
 40048d0:	dc400117 	ldw	r17,4(sp)
 40048d4:	dc000017 	ldw	r16,0(sp)
 40048d8:	dec00504 	addi	sp,sp,20
 40048dc:	f800283a 	ret
 40048e0:	01400104 	movi	r5,4
 40048e4:	9809883a 	mov	r4,r19
 40048e8:	40047740 	call	4004774 <__sfmoreglue>
 40048ec:	90800015 	stw	r2,0(r18)
 40048f0:	103fde1e 	bne	r2,zero,400486c <__sfp+0x80>
 40048f4:	00800304 	movi	r2,12
 40048f8:	98800015 	stw	r2,0(r19)
 40048fc:	0005883a 	mov	r2,zero
 4004900:	003ff006 	br	40048c4 <__sfp+0xd8>

04004904 <_cleanup>:
 4004904:	00810074 	movhi	r2,1025
 4004908:	10861b04 	addi	r2,r2,6252
 400490c:	11000017 	ldw	r4,0(r2)
 4004910:	01410074 	movhi	r5,1025
 4004914:	29653204 	addi	r5,r5,-27448
 4004918:	400532c1 	jmpi	400532c <_fwalk_reent>

0400491c <__sinit>:
 400491c:	20800e17 	ldw	r2,56(r4)
 4004920:	10000126 	beq	r2,zero,4004928 <__sinit+0xc>
 4004924:	f800283a 	ret
 4004928:	40045d01 	jmpi	40045d0 <__sinit.part.1>

0400492c <__sfp_lock_acquire>:
 400492c:	f800283a 	ret

04004930 <__sfp_lock_release>:
 4004930:	f800283a 	ret

04004934 <__sinit_lock_acquire>:
 4004934:	f800283a 	ret

04004938 <__sinit_lock_release>:
 4004938:	f800283a 	ret

0400493c <__fp_lock_all>:
 400493c:	00810074 	movhi	r2,1025
 4004940:	10861c04 	addi	r2,r2,6256
 4004944:	11000017 	ldw	r4,0(r2)
 4004948:	01410034 	movhi	r5,1024
 400494c:	2951db04 	addi	r5,r5,18284
 4004950:	40052681 	jmpi	4005268 <_fwalk>

04004954 <__fp_unlock_all>:
 4004954:	00810074 	movhi	r2,1025
 4004958:	10861c04 	addi	r2,r2,6256
 400495c:	11000017 	ldw	r4,0(r2)
 4004960:	01410034 	movhi	r5,1024
 4004964:	29516f04 	addi	r5,r5,17852
 4004968:	40052681 	jmpi	4005268 <_fwalk>

0400496c <_malloc_trim_r>:
 400496c:	defffb04 	addi	sp,sp,-20
 4004970:	dcc00315 	stw	r19,12(sp)
 4004974:	04c10074 	movhi	r19,1025
 4004978:	dc800215 	stw	r18,8(sp)
 400497c:	dc400115 	stw	r17,4(sp)
 4004980:	dc000015 	stw	r16,0(sp)
 4004984:	dfc00415 	stw	ra,16(sp)
 4004988:	2821883a 	mov	r16,r5
 400498c:	9cc09604 	addi	r19,r19,600
 4004990:	2025883a 	mov	r18,r4
 4004994:	400d8600 	call	400d860 <__malloc_lock>
 4004998:	98800217 	ldw	r2,8(r19)
 400499c:	14400117 	ldw	r17,4(r2)
 40049a0:	00bfff04 	movi	r2,-4
 40049a4:	88a2703a 	and	r17,r17,r2
 40049a8:	8c21c83a 	sub	r16,r17,r16
 40049ac:	8403fbc4 	addi	r16,r16,4079
 40049b0:	8020d33a 	srli	r16,r16,12
 40049b4:	0083ffc4 	movi	r2,4095
 40049b8:	843fffc4 	addi	r16,r16,-1
 40049bc:	8020933a 	slli	r16,r16,12
 40049c0:	1400060e 	bge	r2,r16,40049dc <_malloc_trim_r+0x70>
 40049c4:	000b883a 	mov	r5,zero
 40049c8:	9009883a 	mov	r4,r18
 40049cc:	40079d40 	call	40079d4 <_sbrk_r>
 40049d0:	98c00217 	ldw	r3,8(r19)
 40049d4:	1c47883a 	add	r3,r3,r17
 40049d8:	10c00a26 	beq	r2,r3,4004a04 <_malloc_trim_r+0x98>
 40049dc:	9009883a 	mov	r4,r18
 40049e0:	400d8840 	call	400d884 <__malloc_unlock>
 40049e4:	0005883a 	mov	r2,zero
 40049e8:	dfc00417 	ldw	ra,16(sp)
 40049ec:	dcc00317 	ldw	r19,12(sp)
 40049f0:	dc800217 	ldw	r18,8(sp)
 40049f4:	dc400117 	ldw	r17,4(sp)
 40049f8:	dc000017 	ldw	r16,0(sp)
 40049fc:	dec00504 	addi	sp,sp,20
 4004a00:	f800283a 	ret
 4004a04:	040bc83a 	sub	r5,zero,r16
 4004a08:	9009883a 	mov	r4,r18
 4004a0c:	40079d40 	call	40079d4 <_sbrk_r>
 4004a10:	00ffffc4 	movi	r3,-1
 4004a14:	10c00d26 	beq	r2,r3,4004a4c <_malloc_trim_r+0xe0>
 4004a18:	00c10074 	movhi	r3,1025
 4004a1c:	18ccf504 	addi	r3,r3,13268
 4004a20:	18800017 	ldw	r2,0(r3)
 4004a24:	99000217 	ldw	r4,8(r19)
 4004a28:	8c23c83a 	sub	r17,r17,r16
 4004a2c:	8c400054 	ori	r17,r17,1
 4004a30:	1421c83a 	sub	r16,r2,r16
 4004a34:	24400115 	stw	r17,4(r4)
 4004a38:	9009883a 	mov	r4,r18
 4004a3c:	1c000015 	stw	r16,0(r3)
 4004a40:	400d8840 	call	400d884 <__malloc_unlock>
 4004a44:	00800044 	movi	r2,1
 4004a48:	003fe706 	br	40049e8 <_malloc_trim_r+0x7c>
 4004a4c:	000b883a 	mov	r5,zero
 4004a50:	9009883a 	mov	r4,r18
 4004a54:	40079d40 	call	40079d4 <_sbrk_r>
 4004a58:	99000217 	ldw	r4,8(r19)
 4004a5c:	014003c4 	movi	r5,15
 4004a60:	1107c83a 	sub	r3,r2,r4
 4004a64:	28ffdd0e 	bge	r5,r3,40049dc <_malloc_trim_r+0x70>
 4004a68:	01410074 	movhi	r5,1025
 4004a6c:	29461e04 	addi	r5,r5,6264
 4004a70:	29400017 	ldw	r5,0(r5)
 4004a74:	18c00054 	ori	r3,r3,1
 4004a78:	20c00115 	stw	r3,4(r4)
 4004a7c:	00c10074 	movhi	r3,1025
 4004a80:	1145c83a 	sub	r2,r2,r5
 4004a84:	18ccf504 	addi	r3,r3,13268
 4004a88:	18800015 	stw	r2,0(r3)
 4004a8c:	003fd306 	br	40049dc <_malloc_trim_r+0x70>

04004a90 <_free_r>:
 4004a90:	28004126 	beq	r5,zero,4004b98 <_free_r+0x108>
 4004a94:	defffd04 	addi	sp,sp,-12
 4004a98:	dc400115 	stw	r17,4(sp)
 4004a9c:	dc000015 	stw	r16,0(sp)
 4004aa0:	2023883a 	mov	r17,r4
 4004aa4:	2821883a 	mov	r16,r5
 4004aa8:	dfc00215 	stw	ra,8(sp)
 4004aac:	400d8600 	call	400d860 <__malloc_lock>
 4004ab0:	81ffff17 	ldw	r7,-4(r16)
 4004ab4:	00bfff84 	movi	r2,-2
 4004ab8:	01010074 	movhi	r4,1025
 4004abc:	81bffe04 	addi	r6,r16,-8
 4004ac0:	3884703a 	and	r2,r7,r2
 4004ac4:	21009604 	addi	r4,r4,600
 4004ac8:	308b883a 	add	r5,r6,r2
 4004acc:	2a400117 	ldw	r9,4(r5)
 4004ad0:	22000217 	ldw	r8,8(r4)
 4004ad4:	00ffff04 	movi	r3,-4
 4004ad8:	48c6703a 	and	r3,r9,r3
 4004adc:	2a005726 	beq	r5,r8,4004c3c <_free_r+0x1ac>
 4004ae0:	28c00115 	stw	r3,4(r5)
 4004ae4:	39c0004c 	andi	r7,r7,1
 4004ae8:	3800091e 	bne	r7,zero,4004b10 <_free_r+0x80>
 4004aec:	823ffe17 	ldw	r8,-8(r16)
 4004af0:	22400204 	addi	r9,r4,8
 4004af4:	320dc83a 	sub	r6,r6,r8
 4004af8:	31c00217 	ldw	r7,8(r6)
 4004afc:	1205883a 	add	r2,r2,r8
 4004b00:	3a406526 	beq	r7,r9,4004c98 <_free_r+0x208>
 4004b04:	32000317 	ldw	r8,12(r6)
 4004b08:	3a000315 	stw	r8,12(r7)
 4004b0c:	41c00215 	stw	r7,8(r8)
 4004b10:	28cf883a 	add	r7,r5,r3
 4004b14:	39c00117 	ldw	r7,4(r7)
 4004b18:	39c0004c 	andi	r7,r7,1
 4004b1c:	38003a26 	beq	r7,zero,4004c08 <_free_r+0x178>
 4004b20:	10c00054 	ori	r3,r2,1
 4004b24:	30c00115 	stw	r3,4(r6)
 4004b28:	3087883a 	add	r3,r6,r2
 4004b2c:	18800015 	stw	r2,0(r3)
 4004b30:	00c07fc4 	movi	r3,511
 4004b34:	18801936 	bltu	r3,r2,4004b9c <_free_r+0x10c>
 4004b38:	1004d0fa 	srli	r2,r2,3
 4004b3c:	01c00044 	movi	r7,1
 4004b40:	21400117 	ldw	r5,4(r4)
 4004b44:	10c00044 	addi	r3,r2,1
 4004b48:	18c7883a 	add	r3,r3,r3
 4004b4c:	1005d0ba 	srai	r2,r2,2
 4004b50:	18c7883a 	add	r3,r3,r3
 4004b54:	18c7883a 	add	r3,r3,r3
 4004b58:	1907883a 	add	r3,r3,r4
 4004b5c:	3884983a 	sll	r2,r7,r2
 4004b60:	19c00017 	ldw	r7,0(r3)
 4004b64:	1a3ffe04 	addi	r8,r3,-8
 4004b68:	1144b03a 	or	r2,r2,r5
 4004b6c:	32000315 	stw	r8,12(r6)
 4004b70:	31c00215 	stw	r7,8(r6)
 4004b74:	20800115 	stw	r2,4(r4)
 4004b78:	19800015 	stw	r6,0(r3)
 4004b7c:	39800315 	stw	r6,12(r7)
 4004b80:	8809883a 	mov	r4,r17
 4004b84:	dfc00217 	ldw	ra,8(sp)
 4004b88:	dc400117 	ldw	r17,4(sp)
 4004b8c:	dc000017 	ldw	r16,0(sp)
 4004b90:	dec00304 	addi	sp,sp,12
 4004b94:	400d8841 	jmpi	400d884 <__malloc_unlock>
 4004b98:	f800283a 	ret
 4004b9c:	100ad27a 	srli	r5,r2,9
 4004ba0:	00c00104 	movi	r3,4
 4004ba4:	19404a36 	bltu	r3,r5,4004cd0 <_free_r+0x240>
 4004ba8:	100ad1ba 	srli	r5,r2,6
 4004bac:	28c00e44 	addi	r3,r5,57
 4004bb0:	18c7883a 	add	r3,r3,r3
 4004bb4:	29400e04 	addi	r5,r5,56
 4004bb8:	18c7883a 	add	r3,r3,r3
 4004bbc:	18c7883a 	add	r3,r3,r3
 4004bc0:	1909883a 	add	r4,r3,r4
 4004bc4:	20c00017 	ldw	r3,0(r4)
 4004bc8:	01c10074 	movhi	r7,1025
 4004bcc:	213ffe04 	addi	r4,r4,-8
 4004bd0:	39c09604 	addi	r7,r7,600
 4004bd4:	20c04426 	beq	r4,r3,4004ce8 <_free_r+0x258>
 4004bd8:	01ffff04 	movi	r7,-4
 4004bdc:	19400117 	ldw	r5,4(r3)
 4004be0:	29ca703a 	and	r5,r5,r7
 4004be4:	1140022e 	bgeu	r2,r5,4004bf0 <_free_r+0x160>
 4004be8:	18c00217 	ldw	r3,8(r3)
 4004bec:	20fffb1e 	bne	r4,r3,4004bdc <_free_r+0x14c>
 4004bf0:	19000317 	ldw	r4,12(r3)
 4004bf4:	31000315 	stw	r4,12(r6)
 4004bf8:	30c00215 	stw	r3,8(r6)
 4004bfc:	21800215 	stw	r6,8(r4)
 4004c00:	19800315 	stw	r6,12(r3)
 4004c04:	003fde06 	br	4004b80 <_free_r+0xf0>
 4004c08:	29c00217 	ldw	r7,8(r5)
 4004c0c:	10c5883a 	add	r2,r2,r3
 4004c10:	00c10074 	movhi	r3,1025
 4004c14:	18c09804 	addi	r3,r3,608
 4004c18:	38c03b26 	beq	r7,r3,4004d08 <_free_r+0x278>
 4004c1c:	2a000317 	ldw	r8,12(r5)
 4004c20:	11400054 	ori	r5,r2,1
 4004c24:	3087883a 	add	r3,r6,r2
 4004c28:	3a000315 	stw	r8,12(r7)
 4004c2c:	41c00215 	stw	r7,8(r8)
 4004c30:	31400115 	stw	r5,4(r6)
 4004c34:	18800015 	stw	r2,0(r3)
 4004c38:	003fbd06 	br	4004b30 <_free_r+0xa0>
 4004c3c:	39c0004c 	andi	r7,r7,1
 4004c40:	10c5883a 	add	r2,r2,r3
 4004c44:	3800071e 	bne	r7,zero,4004c64 <_free_r+0x1d4>
 4004c48:	81fffe17 	ldw	r7,-8(r16)
 4004c4c:	31cdc83a 	sub	r6,r6,r7
 4004c50:	30c00317 	ldw	r3,12(r6)
 4004c54:	31400217 	ldw	r5,8(r6)
 4004c58:	11c5883a 	add	r2,r2,r7
 4004c5c:	28c00315 	stw	r3,12(r5)
 4004c60:	19400215 	stw	r5,8(r3)
 4004c64:	10c00054 	ori	r3,r2,1
 4004c68:	30c00115 	stw	r3,4(r6)
 4004c6c:	00c10074 	movhi	r3,1025
 4004c70:	18c61f04 	addi	r3,r3,6268
 4004c74:	18c00017 	ldw	r3,0(r3)
 4004c78:	21800215 	stw	r6,8(r4)
 4004c7c:	10ffc036 	bltu	r2,r3,4004b80 <_free_r+0xf0>
 4004c80:	00810074 	movhi	r2,1025
 4004c84:	108cec04 	addi	r2,r2,13232
 4004c88:	11400017 	ldw	r5,0(r2)
 4004c8c:	8809883a 	mov	r4,r17
 4004c90:	400496c0 	call	400496c <_malloc_trim_r>
 4004c94:	003fba06 	br	4004b80 <_free_r+0xf0>
 4004c98:	28c9883a 	add	r4,r5,r3
 4004c9c:	21000117 	ldw	r4,4(r4)
 4004ca0:	2100004c 	andi	r4,r4,1
 4004ca4:	2000391e 	bne	r4,zero,4004d8c <_free_r+0x2fc>
 4004ca8:	29c00217 	ldw	r7,8(r5)
 4004cac:	29000317 	ldw	r4,12(r5)
 4004cb0:	1885883a 	add	r2,r3,r2
 4004cb4:	10c00054 	ori	r3,r2,1
 4004cb8:	39000315 	stw	r4,12(r7)
 4004cbc:	21c00215 	stw	r7,8(r4)
 4004cc0:	30c00115 	stw	r3,4(r6)
 4004cc4:	308d883a 	add	r6,r6,r2
 4004cc8:	30800015 	stw	r2,0(r6)
 4004ccc:	003fac06 	br	4004b80 <_free_r+0xf0>
 4004cd0:	00c00504 	movi	r3,20
 4004cd4:	19401536 	bltu	r3,r5,4004d2c <_free_r+0x29c>
 4004cd8:	28c01704 	addi	r3,r5,92
 4004cdc:	18c7883a 	add	r3,r3,r3
 4004ce0:	294016c4 	addi	r5,r5,91
 4004ce4:	003fb406 	br	4004bb8 <_free_r+0x128>
 4004ce8:	280bd0ba 	srai	r5,r5,2
 4004cec:	00c00044 	movi	r3,1
 4004cf0:	38800117 	ldw	r2,4(r7)
 4004cf4:	194a983a 	sll	r5,r3,r5
 4004cf8:	2007883a 	mov	r3,r4
 4004cfc:	2884b03a 	or	r2,r5,r2
 4004d00:	38800115 	stw	r2,4(r7)
 4004d04:	003fbb06 	br	4004bf4 <_free_r+0x164>
 4004d08:	21800515 	stw	r6,20(r4)
 4004d0c:	21800415 	stw	r6,16(r4)
 4004d10:	10c00054 	ori	r3,r2,1
 4004d14:	31c00315 	stw	r7,12(r6)
 4004d18:	31c00215 	stw	r7,8(r6)
 4004d1c:	30c00115 	stw	r3,4(r6)
 4004d20:	308d883a 	add	r6,r6,r2
 4004d24:	30800015 	stw	r2,0(r6)
 4004d28:	003f9506 	br	4004b80 <_free_r+0xf0>
 4004d2c:	00c01504 	movi	r3,84
 4004d30:	19400536 	bltu	r3,r5,4004d48 <_free_r+0x2b8>
 4004d34:	100ad33a 	srli	r5,r2,12
 4004d38:	28c01bc4 	addi	r3,r5,111
 4004d3c:	18c7883a 	add	r3,r3,r3
 4004d40:	29401b84 	addi	r5,r5,110
 4004d44:	003f9c06 	br	4004bb8 <_free_r+0x128>
 4004d48:	00c05504 	movi	r3,340
 4004d4c:	19400536 	bltu	r3,r5,4004d64 <_free_r+0x2d4>
 4004d50:	100ad3fa 	srli	r5,r2,15
 4004d54:	28c01e04 	addi	r3,r5,120
 4004d58:	18c7883a 	add	r3,r3,r3
 4004d5c:	29401dc4 	addi	r5,r5,119
 4004d60:	003f9506 	br	4004bb8 <_free_r+0x128>
 4004d64:	00c15504 	movi	r3,1364
 4004d68:	19400536 	bltu	r3,r5,4004d80 <_free_r+0x2f0>
 4004d6c:	100ad4ba 	srli	r5,r2,18
 4004d70:	28c01f44 	addi	r3,r5,125
 4004d74:	18c7883a 	add	r3,r3,r3
 4004d78:	29401f04 	addi	r5,r5,124
 4004d7c:	003f8e06 	br	4004bb8 <_free_r+0x128>
 4004d80:	00c03f84 	movi	r3,254
 4004d84:	01401f84 	movi	r5,126
 4004d88:	003f8b06 	br	4004bb8 <_free_r+0x128>
 4004d8c:	10c00054 	ori	r3,r2,1
 4004d90:	30c00115 	stw	r3,4(r6)
 4004d94:	308d883a 	add	r6,r6,r2
 4004d98:	30800015 	stw	r2,0(r6)
 4004d9c:	003f7806 	br	4004b80 <_free_r+0xf0>

04004da0 <__sfvwrite_r>:
 4004da0:	30800217 	ldw	r2,8(r6)
 4004da4:	10006726 	beq	r2,zero,4004f44 <__sfvwrite_r+0x1a4>
 4004da8:	28c0030b 	ldhu	r3,12(r5)
 4004dac:	defff404 	addi	sp,sp,-48
 4004db0:	dd400715 	stw	r21,28(sp)
 4004db4:	dd000615 	stw	r20,24(sp)
 4004db8:	dc000215 	stw	r16,8(sp)
 4004dbc:	dfc00b15 	stw	ra,44(sp)
 4004dc0:	df000a15 	stw	fp,40(sp)
 4004dc4:	ddc00915 	stw	r23,36(sp)
 4004dc8:	dd800815 	stw	r22,32(sp)
 4004dcc:	dcc00515 	stw	r19,20(sp)
 4004dd0:	dc800415 	stw	r18,16(sp)
 4004dd4:	dc400315 	stw	r17,12(sp)
 4004dd8:	1880020c 	andi	r2,r3,8
 4004ddc:	2821883a 	mov	r16,r5
 4004de0:	202b883a 	mov	r21,r4
 4004de4:	3029883a 	mov	r20,r6
 4004de8:	10002726 	beq	r2,zero,4004e88 <__sfvwrite_r+0xe8>
 4004dec:	28800417 	ldw	r2,16(r5)
 4004df0:	10002526 	beq	r2,zero,4004e88 <__sfvwrite_r+0xe8>
 4004df4:	1880008c 	andi	r2,r3,2
 4004df8:	a4400017 	ldw	r17,0(r20)
 4004dfc:	10002a26 	beq	r2,zero,4004ea8 <__sfvwrite_r+0x108>
 4004e00:	05a00034 	movhi	r22,32768
 4004e04:	0027883a 	mov	r19,zero
 4004e08:	0025883a 	mov	r18,zero
 4004e0c:	b5bf0004 	addi	r22,r22,-1024
 4004e10:	980d883a 	mov	r6,r19
 4004e14:	a809883a 	mov	r4,r21
 4004e18:	90004626 	beq	r18,zero,4004f34 <__sfvwrite_r+0x194>
 4004e1c:	900f883a 	mov	r7,r18
 4004e20:	b480022e 	bgeu	r22,r18,4004e2c <__sfvwrite_r+0x8c>
 4004e24:	01e00034 	movhi	r7,32768
 4004e28:	39ff0004 	addi	r7,r7,-1024
 4004e2c:	80800917 	ldw	r2,36(r16)
 4004e30:	81400717 	ldw	r5,28(r16)
 4004e34:	103ee83a 	callr	r2
 4004e38:	00805a0e 	bge	zero,r2,4004fa4 <__sfvwrite_r+0x204>
 4004e3c:	a0c00217 	ldw	r3,8(r20)
 4004e40:	98a7883a 	add	r19,r19,r2
 4004e44:	90a5c83a 	sub	r18,r18,r2
 4004e48:	1885c83a 	sub	r2,r3,r2
 4004e4c:	a0800215 	stw	r2,8(r20)
 4004e50:	103fef1e 	bne	r2,zero,4004e10 <__sfvwrite_r+0x70>
 4004e54:	0005883a 	mov	r2,zero
 4004e58:	dfc00b17 	ldw	ra,44(sp)
 4004e5c:	df000a17 	ldw	fp,40(sp)
 4004e60:	ddc00917 	ldw	r23,36(sp)
 4004e64:	dd800817 	ldw	r22,32(sp)
 4004e68:	dd400717 	ldw	r21,28(sp)
 4004e6c:	dd000617 	ldw	r20,24(sp)
 4004e70:	dcc00517 	ldw	r19,20(sp)
 4004e74:	dc800417 	ldw	r18,16(sp)
 4004e78:	dc400317 	ldw	r17,12(sp)
 4004e7c:	dc000217 	ldw	r16,8(sp)
 4004e80:	dec00c04 	addi	sp,sp,48
 4004e84:	f800283a 	ret
 4004e88:	800b883a 	mov	r5,r16
 4004e8c:	a809883a 	mov	r4,r21
 4004e90:	40029100 	call	4002910 <__swsetup_r>
 4004e94:	1000ee1e 	bne	r2,zero,4005250 <__sfvwrite_r+0x4b0>
 4004e98:	80c0030b 	ldhu	r3,12(r16)
 4004e9c:	a4400017 	ldw	r17,0(r20)
 4004ea0:	1880008c 	andi	r2,r3,2
 4004ea4:	103fd61e 	bne	r2,zero,4004e00 <__sfvwrite_r+0x60>
 4004ea8:	1880004c 	andi	r2,r3,1
 4004eac:	1000421e 	bne	r2,zero,4004fb8 <__sfvwrite_r+0x218>
 4004eb0:	0039883a 	mov	fp,zero
 4004eb4:	0025883a 	mov	r18,zero
 4004eb8:	90001a26 	beq	r18,zero,4004f24 <__sfvwrite_r+0x184>
 4004ebc:	1880800c 	andi	r2,r3,512
 4004ec0:	84c00217 	ldw	r19,8(r16)
 4004ec4:	10002126 	beq	r2,zero,4004f4c <__sfvwrite_r+0x1ac>
 4004ec8:	982f883a 	mov	r23,r19
 4004ecc:	94c09636 	bltu	r18,r19,4005128 <__sfvwrite_r+0x388>
 4004ed0:	1881200c 	andi	r2,r3,1152
 4004ed4:	1000a11e 	bne	r2,zero,400515c <__sfvwrite_r+0x3bc>
 4004ed8:	81000017 	ldw	r4,0(r16)
 4004edc:	b80d883a 	mov	r6,r23
 4004ee0:	e00b883a 	mov	r5,fp
 4004ee4:	40060c00 	call	40060c0 <memmove>
 4004ee8:	80c00217 	ldw	r3,8(r16)
 4004eec:	81000017 	ldw	r4,0(r16)
 4004ef0:	9005883a 	mov	r2,r18
 4004ef4:	1ce7c83a 	sub	r19,r3,r19
 4004ef8:	25cf883a 	add	r7,r4,r23
 4004efc:	84c00215 	stw	r19,8(r16)
 4004f00:	81c00015 	stw	r7,0(r16)
 4004f04:	a0c00217 	ldw	r3,8(r20)
 4004f08:	e0b9883a 	add	fp,fp,r2
 4004f0c:	90a5c83a 	sub	r18,r18,r2
 4004f10:	18a7c83a 	sub	r19,r3,r2
 4004f14:	a4c00215 	stw	r19,8(r20)
 4004f18:	983fce26 	beq	r19,zero,4004e54 <__sfvwrite_r+0xb4>
 4004f1c:	80c0030b 	ldhu	r3,12(r16)
 4004f20:	903fe61e 	bne	r18,zero,4004ebc <__sfvwrite_r+0x11c>
 4004f24:	8f000017 	ldw	fp,0(r17)
 4004f28:	8c800117 	ldw	r18,4(r17)
 4004f2c:	8c400204 	addi	r17,r17,8
 4004f30:	003fe106 	br	4004eb8 <__sfvwrite_r+0x118>
 4004f34:	8cc00017 	ldw	r19,0(r17)
 4004f38:	8c800117 	ldw	r18,4(r17)
 4004f3c:	8c400204 	addi	r17,r17,8
 4004f40:	003fb306 	br	4004e10 <__sfvwrite_r+0x70>
 4004f44:	0005883a 	mov	r2,zero
 4004f48:	f800283a 	ret
 4004f4c:	81000017 	ldw	r4,0(r16)
 4004f50:	80800417 	ldw	r2,16(r16)
 4004f54:	11005a36 	bltu	r2,r4,40050c0 <__sfvwrite_r+0x320>
 4004f58:	85c00517 	ldw	r23,20(r16)
 4004f5c:	95c05836 	bltu	r18,r23,40050c0 <__sfvwrite_r+0x320>
 4004f60:	00a00034 	movhi	r2,32768
 4004f64:	10bfffc4 	addi	r2,r2,-1
 4004f68:	9009883a 	mov	r4,r18
 4004f6c:	1480012e 	bgeu	r2,r18,4004f74 <__sfvwrite_r+0x1d4>
 4004f70:	1009883a 	mov	r4,r2
 4004f74:	b80b883a 	mov	r5,r23
 4004f78:	400a8440 	call	400a844 <__divsi3>
 4004f7c:	b80b883a 	mov	r5,r23
 4004f80:	1009883a 	mov	r4,r2
 4004f84:	400a9f80 	call	400a9f8 <__mulsi3>
 4004f88:	81400717 	ldw	r5,28(r16)
 4004f8c:	80c00917 	ldw	r3,36(r16)
 4004f90:	100f883a 	mov	r7,r2
 4004f94:	e00d883a 	mov	r6,fp
 4004f98:	a809883a 	mov	r4,r21
 4004f9c:	183ee83a 	callr	r3
 4004fa0:	00bfd816 	blt	zero,r2,4004f04 <__sfvwrite_r+0x164>
 4004fa4:	8080030b 	ldhu	r2,12(r16)
 4004fa8:	10801014 	ori	r2,r2,64
 4004fac:	8080030d 	sth	r2,12(r16)
 4004fb0:	00bfffc4 	movi	r2,-1
 4004fb4:	003fa806 	br	4004e58 <__sfvwrite_r+0xb8>
 4004fb8:	0027883a 	mov	r19,zero
 4004fbc:	0011883a 	mov	r8,zero
 4004fc0:	0039883a 	mov	fp,zero
 4004fc4:	0025883a 	mov	r18,zero
 4004fc8:	90001f26 	beq	r18,zero,4005048 <__sfvwrite_r+0x2a8>
 4004fcc:	40005a26 	beq	r8,zero,4005138 <__sfvwrite_r+0x398>
 4004fd0:	982d883a 	mov	r22,r19
 4004fd4:	94c0012e 	bgeu	r18,r19,4004fdc <__sfvwrite_r+0x23c>
 4004fd8:	902d883a 	mov	r22,r18
 4004fdc:	81000017 	ldw	r4,0(r16)
 4004fe0:	80800417 	ldw	r2,16(r16)
 4004fe4:	b02f883a 	mov	r23,r22
 4004fe8:	81c00517 	ldw	r7,20(r16)
 4004fec:	1100032e 	bgeu	r2,r4,4004ffc <__sfvwrite_r+0x25c>
 4004ff0:	80c00217 	ldw	r3,8(r16)
 4004ff4:	38c7883a 	add	r3,r7,r3
 4004ff8:	1d801816 	blt	r3,r22,400505c <__sfvwrite_r+0x2bc>
 4004ffc:	b1c03e16 	blt	r22,r7,40050f8 <__sfvwrite_r+0x358>
 4005000:	80800917 	ldw	r2,36(r16)
 4005004:	81400717 	ldw	r5,28(r16)
 4005008:	e00d883a 	mov	r6,fp
 400500c:	da000115 	stw	r8,4(sp)
 4005010:	a809883a 	mov	r4,r21
 4005014:	103ee83a 	callr	r2
 4005018:	102f883a 	mov	r23,r2
 400501c:	da000117 	ldw	r8,4(sp)
 4005020:	00bfe00e 	bge	zero,r2,4004fa4 <__sfvwrite_r+0x204>
 4005024:	9de7c83a 	sub	r19,r19,r23
 4005028:	98001f26 	beq	r19,zero,40050a8 <__sfvwrite_r+0x308>
 400502c:	a0800217 	ldw	r2,8(r20)
 4005030:	e5f9883a 	add	fp,fp,r23
 4005034:	95e5c83a 	sub	r18,r18,r23
 4005038:	15efc83a 	sub	r23,r2,r23
 400503c:	a5c00215 	stw	r23,8(r20)
 4005040:	b83f8426 	beq	r23,zero,4004e54 <__sfvwrite_r+0xb4>
 4005044:	903fe11e 	bne	r18,zero,4004fcc <__sfvwrite_r+0x22c>
 4005048:	8f000017 	ldw	fp,0(r17)
 400504c:	8c800117 	ldw	r18,4(r17)
 4005050:	0011883a 	mov	r8,zero
 4005054:	8c400204 	addi	r17,r17,8
 4005058:	003fdb06 	br	4004fc8 <__sfvwrite_r+0x228>
 400505c:	180d883a 	mov	r6,r3
 4005060:	e00b883a 	mov	r5,fp
 4005064:	da000115 	stw	r8,4(sp)
 4005068:	d8c00015 	stw	r3,0(sp)
 400506c:	40060c00 	call	40060c0 <memmove>
 4005070:	d8c00017 	ldw	r3,0(sp)
 4005074:	80800017 	ldw	r2,0(r16)
 4005078:	800b883a 	mov	r5,r16
 400507c:	a809883a 	mov	r4,r21
 4005080:	10c5883a 	add	r2,r2,r3
 4005084:	80800015 	stw	r2,0(r16)
 4005088:	d8c00015 	stw	r3,0(sp)
 400508c:	40045300 	call	4004530 <_fflush_r>
 4005090:	d8c00017 	ldw	r3,0(sp)
 4005094:	da000117 	ldw	r8,4(sp)
 4005098:	103fc21e 	bne	r2,zero,4004fa4 <__sfvwrite_r+0x204>
 400509c:	182f883a 	mov	r23,r3
 40050a0:	9de7c83a 	sub	r19,r19,r23
 40050a4:	983fe11e 	bne	r19,zero,400502c <__sfvwrite_r+0x28c>
 40050a8:	800b883a 	mov	r5,r16
 40050ac:	a809883a 	mov	r4,r21
 40050b0:	40045300 	call	4004530 <_fflush_r>
 40050b4:	103fbb1e 	bne	r2,zero,4004fa4 <__sfvwrite_r+0x204>
 40050b8:	0011883a 	mov	r8,zero
 40050bc:	003fdb06 	br	400502c <__sfvwrite_r+0x28c>
 40050c0:	94c0012e 	bgeu	r18,r19,40050c8 <__sfvwrite_r+0x328>
 40050c4:	9027883a 	mov	r19,r18
 40050c8:	980d883a 	mov	r6,r19
 40050cc:	e00b883a 	mov	r5,fp
 40050d0:	40060c00 	call	40060c0 <memmove>
 40050d4:	80800217 	ldw	r2,8(r16)
 40050d8:	80c00017 	ldw	r3,0(r16)
 40050dc:	14c5c83a 	sub	r2,r2,r19
 40050e0:	1cc7883a 	add	r3,r3,r19
 40050e4:	80800215 	stw	r2,8(r16)
 40050e8:	80c00015 	stw	r3,0(r16)
 40050ec:	10004326 	beq	r2,zero,40051fc <__sfvwrite_r+0x45c>
 40050f0:	9805883a 	mov	r2,r19
 40050f4:	003f8306 	br	4004f04 <__sfvwrite_r+0x164>
 40050f8:	b00d883a 	mov	r6,r22
 40050fc:	e00b883a 	mov	r5,fp
 4005100:	da000115 	stw	r8,4(sp)
 4005104:	40060c00 	call	40060c0 <memmove>
 4005108:	80800217 	ldw	r2,8(r16)
 400510c:	80c00017 	ldw	r3,0(r16)
 4005110:	da000117 	ldw	r8,4(sp)
 4005114:	1585c83a 	sub	r2,r2,r22
 4005118:	1dad883a 	add	r22,r3,r22
 400511c:	80800215 	stw	r2,8(r16)
 4005120:	85800015 	stw	r22,0(r16)
 4005124:	003fbf06 	br	4005024 <__sfvwrite_r+0x284>
 4005128:	81000017 	ldw	r4,0(r16)
 400512c:	9027883a 	mov	r19,r18
 4005130:	902f883a 	mov	r23,r18
 4005134:	003f6906 	br	4004edc <__sfvwrite_r+0x13c>
 4005138:	900d883a 	mov	r6,r18
 400513c:	01400284 	movi	r5,10
 4005140:	e009883a 	mov	r4,fp
 4005144:	4005e940 	call	4005e94 <memchr>
 4005148:	10003e26 	beq	r2,zero,4005244 <__sfvwrite_r+0x4a4>
 400514c:	10800044 	addi	r2,r2,1
 4005150:	1727c83a 	sub	r19,r2,fp
 4005154:	02000044 	movi	r8,1
 4005158:	003f9d06 	br	4004fd0 <__sfvwrite_r+0x230>
 400515c:	80800517 	ldw	r2,20(r16)
 4005160:	81400417 	ldw	r5,16(r16)
 4005164:	81c00017 	ldw	r7,0(r16)
 4005168:	10a7883a 	add	r19,r2,r2
 400516c:	9885883a 	add	r2,r19,r2
 4005170:	1026d7fa 	srli	r19,r2,31
 4005174:	396dc83a 	sub	r22,r7,r5
 4005178:	b1000044 	addi	r4,r22,1
 400517c:	9885883a 	add	r2,r19,r2
 4005180:	1027d07a 	srai	r19,r2,1
 4005184:	2485883a 	add	r2,r4,r18
 4005188:	980d883a 	mov	r6,r19
 400518c:	9880022e 	bgeu	r19,r2,4005198 <__sfvwrite_r+0x3f8>
 4005190:	1027883a 	mov	r19,r2
 4005194:	100d883a 	mov	r6,r2
 4005198:	18c1000c 	andi	r3,r3,1024
 400519c:	18001c26 	beq	r3,zero,4005210 <__sfvwrite_r+0x470>
 40051a0:	300b883a 	mov	r5,r6
 40051a4:	a809883a 	mov	r4,r21
 40051a8:	40056880 	call	4005688 <_malloc_r>
 40051ac:	102f883a 	mov	r23,r2
 40051b0:	10002926 	beq	r2,zero,4005258 <__sfvwrite_r+0x4b8>
 40051b4:	81400417 	ldw	r5,16(r16)
 40051b8:	b00d883a 	mov	r6,r22
 40051bc:	1009883a 	mov	r4,r2
 40051c0:	4005f780 	call	4005f78 <memcpy>
 40051c4:	8080030b 	ldhu	r2,12(r16)
 40051c8:	00fedfc4 	movi	r3,-1153
 40051cc:	10c4703a 	and	r2,r2,r3
 40051d0:	10802014 	ori	r2,r2,128
 40051d4:	8080030d 	sth	r2,12(r16)
 40051d8:	bd89883a 	add	r4,r23,r22
 40051dc:	9d8fc83a 	sub	r7,r19,r22
 40051e0:	85c00415 	stw	r23,16(r16)
 40051e4:	84c00515 	stw	r19,20(r16)
 40051e8:	81000015 	stw	r4,0(r16)
 40051ec:	9027883a 	mov	r19,r18
 40051f0:	81c00215 	stw	r7,8(r16)
 40051f4:	902f883a 	mov	r23,r18
 40051f8:	003f3806 	br	4004edc <__sfvwrite_r+0x13c>
 40051fc:	800b883a 	mov	r5,r16
 4005200:	a809883a 	mov	r4,r21
 4005204:	40045300 	call	4004530 <_fflush_r>
 4005208:	103fb926 	beq	r2,zero,40050f0 <__sfvwrite_r+0x350>
 400520c:	003f6506 	br	4004fa4 <__sfvwrite_r+0x204>
 4005210:	a809883a 	mov	r4,r21
 4005214:	40073fc0 	call	40073fc <_realloc_r>
 4005218:	102f883a 	mov	r23,r2
 400521c:	103fee1e 	bne	r2,zero,40051d8 <__sfvwrite_r+0x438>
 4005220:	81400417 	ldw	r5,16(r16)
 4005224:	a809883a 	mov	r4,r21
 4005228:	4004a900 	call	4004a90 <_free_r>
 400522c:	8080030b 	ldhu	r2,12(r16)
 4005230:	00ffdfc4 	movi	r3,-129
 4005234:	1884703a 	and	r2,r3,r2
 4005238:	00c00304 	movi	r3,12
 400523c:	a8c00015 	stw	r3,0(r21)
 4005240:	003f5906 	br	4004fa8 <__sfvwrite_r+0x208>
 4005244:	94c00044 	addi	r19,r18,1
 4005248:	02000044 	movi	r8,1
 400524c:	003f6006 	br	4004fd0 <__sfvwrite_r+0x230>
 4005250:	00bfffc4 	movi	r2,-1
 4005254:	003f0006 	br	4004e58 <__sfvwrite_r+0xb8>
 4005258:	00800304 	movi	r2,12
 400525c:	a8800015 	stw	r2,0(r21)
 4005260:	8080030b 	ldhu	r2,12(r16)
 4005264:	003f5006 	br	4004fa8 <__sfvwrite_r+0x208>

04005268 <_fwalk>:
 4005268:	defff704 	addi	sp,sp,-36
 400526c:	dd000415 	stw	r20,16(sp)
 4005270:	dfc00815 	stw	ra,32(sp)
 4005274:	ddc00715 	stw	r23,28(sp)
 4005278:	dd800615 	stw	r22,24(sp)
 400527c:	dd400515 	stw	r21,20(sp)
 4005280:	dcc00315 	stw	r19,12(sp)
 4005284:	dc800215 	stw	r18,8(sp)
 4005288:	dc400115 	stw	r17,4(sp)
 400528c:	dc000015 	stw	r16,0(sp)
 4005290:	2500b804 	addi	r20,r4,736
 4005294:	a0002326 	beq	r20,zero,4005324 <_fwalk+0xbc>
 4005298:	282b883a 	mov	r21,r5
 400529c:	002f883a 	mov	r23,zero
 40052a0:	05800044 	movi	r22,1
 40052a4:	04ffffc4 	movi	r19,-1
 40052a8:	a4400117 	ldw	r17,4(r20)
 40052ac:	a4800217 	ldw	r18,8(r20)
 40052b0:	8c7fffc4 	addi	r17,r17,-1
 40052b4:	88000d16 	blt	r17,zero,40052ec <_fwalk+0x84>
 40052b8:	94000304 	addi	r16,r18,12
 40052bc:	94800384 	addi	r18,r18,14
 40052c0:	8080000b 	ldhu	r2,0(r16)
 40052c4:	8c7fffc4 	addi	r17,r17,-1
 40052c8:	813ffd04 	addi	r4,r16,-12
 40052cc:	b080042e 	bgeu	r22,r2,40052e0 <_fwalk+0x78>
 40052d0:	9080000f 	ldh	r2,0(r18)
 40052d4:	14c00226 	beq	r2,r19,40052e0 <_fwalk+0x78>
 40052d8:	a83ee83a 	callr	r21
 40052dc:	b8aeb03a 	or	r23,r23,r2
 40052e0:	84001a04 	addi	r16,r16,104
 40052e4:	94801a04 	addi	r18,r18,104
 40052e8:	8cfff51e 	bne	r17,r19,40052c0 <_fwalk+0x58>
 40052ec:	a5000017 	ldw	r20,0(r20)
 40052f0:	a03fed1e 	bne	r20,zero,40052a8 <_fwalk+0x40>
 40052f4:	b805883a 	mov	r2,r23
 40052f8:	dfc00817 	ldw	ra,32(sp)
 40052fc:	ddc00717 	ldw	r23,28(sp)
 4005300:	dd800617 	ldw	r22,24(sp)
 4005304:	dd400517 	ldw	r21,20(sp)
 4005308:	dd000417 	ldw	r20,16(sp)
 400530c:	dcc00317 	ldw	r19,12(sp)
 4005310:	dc800217 	ldw	r18,8(sp)
 4005314:	dc400117 	ldw	r17,4(sp)
 4005318:	dc000017 	ldw	r16,0(sp)
 400531c:	dec00904 	addi	sp,sp,36
 4005320:	f800283a 	ret
 4005324:	002f883a 	mov	r23,zero
 4005328:	003ff206 	br	40052f4 <_fwalk+0x8c>

0400532c <_fwalk_reent>:
 400532c:	defff704 	addi	sp,sp,-36
 4005330:	dd000415 	stw	r20,16(sp)
 4005334:	dfc00815 	stw	ra,32(sp)
 4005338:	ddc00715 	stw	r23,28(sp)
 400533c:	dd800615 	stw	r22,24(sp)
 4005340:	dd400515 	stw	r21,20(sp)
 4005344:	dcc00315 	stw	r19,12(sp)
 4005348:	dc800215 	stw	r18,8(sp)
 400534c:	dc400115 	stw	r17,4(sp)
 4005350:	dc000015 	stw	r16,0(sp)
 4005354:	2500b804 	addi	r20,r4,736
 4005358:	a0002326 	beq	r20,zero,40053e8 <_fwalk_reent+0xbc>
 400535c:	282b883a 	mov	r21,r5
 4005360:	2027883a 	mov	r19,r4
 4005364:	002f883a 	mov	r23,zero
 4005368:	05800044 	movi	r22,1
 400536c:	04bfffc4 	movi	r18,-1
 4005370:	a4400117 	ldw	r17,4(r20)
 4005374:	a4000217 	ldw	r16,8(r20)
 4005378:	8c7fffc4 	addi	r17,r17,-1
 400537c:	88000c16 	blt	r17,zero,40053b0 <_fwalk_reent+0x84>
 4005380:	84000304 	addi	r16,r16,12
 4005384:	8080000b 	ldhu	r2,0(r16)
 4005388:	8c7fffc4 	addi	r17,r17,-1
 400538c:	817ffd04 	addi	r5,r16,-12
 4005390:	b080052e 	bgeu	r22,r2,40053a8 <_fwalk_reent+0x7c>
 4005394:	8080008f 	ldh	r2,2(r16)
 4005398:	9809883a 	mov	r4,r19
 400539c:	14800226 	beq	r2,r18,40053a8 <_fwalk_reent+0x7c>
 40053a0:	a83ee83a 	callr	r21
 40053a4:	b8aeb03a 	or	r23,r23,r2
 40053a8:	84001a04 	addi	r16,r16,104
 40053ac:	8cbff51e 	bne	r17,r18,4005384 <_fwalk_reent+0x58>
 40053b0:	a5000017 	ldw	r20,0(r20)
 40053b4:	a03fee1e 	bne	r20,zero,4005370 <_fwalk_reent+0x44>
 40053b8:	b805883a 	mov	r2,r23
 40053bc:	dfc00817 	ldw	ra,32(sp)
 40053c0:	ddc00717 	ldw	r23,28(sp)
 40053c4:	dd800617 	ldw	r22,24(sp)
 40053c8:	dd400517 	ldw	r21,20(sp)
 40053cc:	dd000417 	ldw	r20,16(sp)
 40053d0:	dcc00317 	ldw	r19,12(sp)
 40053d4:	dc800217 	ldw	r18,8(sp)
 40053d8:	dc400117 	ldw	r17,4(sp)
 40053dc:	dc000017 	ldw	r16,0(sp)
 40053e0:	dec00904 	addi	sp,sp,36
 40053e4:	f800283a 	ret
 40053e8:	002f883a 	mov	r23,zero
 40053ec:	003ff206 	br	40053b8 <_fwalk_reent+0x8c>

040053f0 <_setlocale_r>:
 40053f0:	30001b26 	beq	r6,zero,4005460 <_setlocale_r+0x70>
 40053f4:	01410074 	movhi	r5,1025
 40053f8:	defffe04 	addi	sp,sp,-8
 40053fc:	297ed004 	addi	r5,r5,-1216
 4005400:	3009883a 	mov	r4,r6
 4005404:	dc000015 	stw	r16,0(sp)
 4005408:	dfc00115 	stw	ra,4(sp)
 400540c:	3021883a 	mov	r16,r6
 4005410:	4007b640 	call	4007b64 <strcmp>
 4005414:	1000061e 	bne	r2,zero,4005430 <_setlocale_r+0x40>
 4005418:	00810074 	movhi	r2,1025
 400541c:	10becf04 	addi	r2,r2,-1220
 4005420:	dfc00117 	ldw	ra,4(sp)
 4005424:	dc000017 	ldw	r16,0(sp)
 4005428:	dec00204 	addi	sp,sp,8
 400542c:	f800283a 	ret
 4005430:	01410074 	movhi	r5,1025
 4005434:	297ecf04 	addi	r5,r5,-1220
 4005438:	8009883a 	mov	r4,r16
 400543c:	4007b640 	call	4007b64 <strcmp>
 4005440:	103ff526 	beq	r2,zero,4005418 <_setlocale_r+0x28>
 4005444:	01410074 	movhi	r5,1025
 4005448:	297e9904 	addi	r5,r5,-1436
 400544c:	8009883a 	mov	r4,r16
 4005450:	4007b640 	call	4007b64 <strcmp>
 4005454:	103ff026 	beq	r2,zero,4005418 <_setlocale_r+0x28>
 4005458:	0005883a 	mov	r2,zero
 400545c:	003ff006 	br	4005420 <_setlocale_r+0x30>
 4005460:	00810074 	movhi	r2,1025
 4005464:	10becf04 	addi	r2,r2,-1220
 4005468:	f800283a 	ret

0400546c <__locale_charset>:
 400546c:	00810074 	movhi	r2,1025
 4005470:	10808004 	addi	r2,r2,512
 4005474:	f800283a 	ret

04005478 <__locale_mb_cur_max>:
 4005478:	00810074 	movhi	r2,1025
 400547c:	10861d04 	addi	r2,r2,6260
 4005480:	10800017 	ldw	r2,0(r2)
 4005484:	f800283a 	ret

04005488 <__locale_msgcharset>:
 4005488:	00810074 	movhi	r2,1025
 400548c:	10807804 	addi	r2,r2,480
 4005490:	f800283a 	ret

04005494 <__locale_cjk_lang>:
 4005494:	0005883a 	mov	r2,zero
 4005498:	f800283a 	ret

0400549c <_localeconv_r>:
 400549c:	00810074 	movhi	r2,1025
 40054a0:	10808804 	addi	r2,r2,544
 40054a4:	f800283a 	ret

040054a8 <setlocale>:
 40054a8:	00810074 	movhi	r2,1025
 40054ac:	10861c04 	addi	r2,r2,6256
 40054b0:	280d883a 	mov	r6,r5
 40054b4:	200b883a 	mov	r5,r4
 40054b8:	11000017 	ldw	r4,0(r2)
 40054bc:	40053f01 	jmpi	40053f0 <_setlocale_r>

040054c0 <localeconv>:
 40054c0:	00810074 	movhi	r2,1025
 40054c4:	10808804 	addi	r2,r2,544
 40054c8:	f800283a 	ret

040054cc <__smakebuf_r>:
 40054cc:	2880030b 	ldhu	r2,12(r5)
 40054d0:	10c0008c 	andi	r3,r2,2
 40054d4:	1800411e 	bne	r3,zero,40055dc <__smakebuf_r+0x110>
 40054d8:	deffec04 	addi	sp,sp,-80
 40054dc:	dc000f15 	stw	r16,60(sp)
 40054e0:	2821883a 	mov	r16,r5
 40054e4:	2940038f 	ldh	r5,14(r5)
 40054e8:	dc401015 	stw	r17,64(sp)
 40054ec:	dfc01315 	stw	ra,76(sp)
 40054f0:	dcc01215 	stw	r19,72(sp)
 40054f4:	dc801115 	stw	r18,68(sp)
 40054f8:	2023883a 	mov	r17,r4
 40054fc:	28001c16 	blt	r5,zero,4005570 <__smakebuf_r+0xa4>
 4005500:	d80d883a 	mov	r6,sp
 4005504:	40097d40 	call	40097d4 <_fstat_r>
 4005508:	10001816 	blt	r2,zero,400556c <__smakebuf_r+0xa0>
 400550c:	d8800117 	ldw	r2,4(sp)
 4005510:	00e00014 	movui	r3,32768
 4005514:	10bc000c 	andi	r2,r2,61440
 4005518:	14c80020 	cmpeqi	r19,r2,8192
 400551c:	10c03726 	beq	r2,r3,40055fc <__smakebuf_r+0x130>
 4005520:	80c0030b 	ldhu	r3,12(r16)
 4005524:	18c20014 	ori	r3,r3,2048
 4005528:	80c0030d 	sth	r3,12(r16)
 400552c:	00c80004 	movi	r3,8192
 4005530:	10c0521e 	bne	r2,r3,400567c <__smakebuf_r+0x1b0>
 4005534:	8140038f 	ldh	r5,14(r16)
 4005538:	8809883a 	mov	r4,r17
 400553c:	40098300 	call	4009830 <_isatty_r>
 4005540:	10004c26 	beq	r2,zero,4005674 <__smakebuf_r+0x1a8>
 4005544:	8080030b 	ldhu	r2,12(r16)
 4005548:	80c010c4 	addi	r3,r16,67
 400554c:	80c00015 	stw	r3,0(r16)
 4005550:	10800054 	ori	r2,r2,1
 4005554:	8080030d 	sth	r2,12(r16)
 4005558:	00800044 	movi	r2,1
 400555c:	80c00415 	stw	r3,16(r16)
 4005560:	80800515 	stw	r2,20(r16)
 4005564:	04810004 	movi	r18,1024
 4005568:	00000706 	br	4005588 <__smakebuf_r+0xbc>
 400556c:	8080030b 	ldhu	r2,12(r16)
 4005570:	10c0200c 	andi	r3,r2,128
 4005574:	18001f1e 	bne	r3,zero,40055f4 <__smakebuf_r+0x128>
 4005578:	04810004 	movi	r18,1024
 400557c:	10820014 	ori	r2,r2,2048
 4005580:	8080030d 	sth	r2,12(r16)
 4005584:	0027883a 	mov	r19,zero
 4005588:	900b883a 	mov	r5,r18
 400558c:	8809883a 	mov	r4,r17
 4005590:	40056880 	call	4005688 <_malloc_r>
 4005594:	10002c26 	beq	r2,zero,4005648 <__smakebuf_r+0x17c>
 4005598:	80c0030b 	ldhu	r3,12(r16)
 400559c:	01010034 	movhi	r4,1024
 40055a0:	21117104 	addi	r4,r4,17860
 40055a4:	89000f15 	stw	r4,60(r17)
 40055a8:	18c02014 	ori	r3,r3,128
 40055ac:	80c0030d 	sth	r3,12(r16)
 40055b0:	80800015 	stw	r2,0(r16)
 40055b4:	80800415 	stw	r2,16(r16)
 40055b8:	84800515 	stw	r18,20(r16)
 40055bc:	98001a1e 	bne	r19,zero,4005628 <__smakebuf_r+0x15c>
 40055c0:	dfc01317 	ldw	ra,76(sp)
 40055c4:	dcc01217 	ldw	r19,72(sp)
 40055c8:	dc801117 	ldw	r18,68(sp)
 40055cc:	dc401017 	ldw	r17,64(sp)
 40055d0:	dc000f17 	ldw	r16,60(sp)
 40055d4:	dec01404 	addi	sp,sp,80
 40055d8:	f800283a 	ret
 40055dc:	288010c4 	addi	r2,r5,67
 40055e0:	28800015 	stw	r2,0(r5)
 40055e4:	28800415 	stw	r2,16(r5)
 40055e8:	00800044 	movi	r2,1
 40055ec:	28800515 	stw	r2,20(r5)
 40055f0:	f800283a 	ret
 40055f4:	04801004 	movi	r18,64
 40055f8:	003fe006 	br	400557c <__smakebuf_r+0xb0>
 40055fc:	81000a17 	ldw	r4,40(r16)
 4005600:	00c10034 	movhi	r3,1024
 4005604:	18dec004 	addi	r3,r3,31488
 4005608:	20ffc51e 	bne	r4,r3,4005520 <__smakebuf_r+0x54>
 400560c:	8080030b 	ldhu	r2,12(r16)
 4005610:	04810004 	movi	r18,1024
 4005614:	84801315 	stw	r18,76(r16)
 4005618:	1484b03a 	or	r2,r2,r18
 400561c:	8080030d 	sth	r2,12(r16)
 4005620:	0027883a 	mov	r19,zero
 4005624:	003fd806 	br	4005588 <__smakebuf_r+0xbc>
 4005628:	8140038f 	ldh	r5,14(r16)
 400562c:	8809883a 	mov	r4,r17
 4005630:	40098300 	call	4009830 <_isatty_r>
 4005634:	103fe226 	beq	r2,zero,40055c0 <__smakebuf_r+0xf4>
 4005638:	8080030b 	ldhu	r2,12(r16)
 400563c:	10800054 	ori	r2,r2,1
 4005640:	8080030d 	sth	r2,12(r16)
 4005644:	003fde06 	br	40055c0 <__smakebuf_r+0xf4>
 4005648:	8080030b 	ldhu	r2,12(r16)
 400564c:	10c0800c 	andi	r3,r2,512
 4005650:	183fdb1e 	bne	r3,zero,40055c0 <__smakebuf_r+0xf4>
 4005654:	10800094 	ori	r2,r2,2
 4005658:	80c010c4 	addi	r3,r16,67
 400565c:	8080030d 	sth	r2,12(r16)
 4005660:	00800044 	movi	r2,1
 4005664:	80c00015 	stw	r3,0(r16)
 4005668:	80c00415 	stw	r3,16(r16)
 400566c:	80800515 	stw	r2,20(r16)
 4005670:	003fd306 	br	40055c0 <__smakebuf_r+0xf4>
 4005674:	04810004 	movi	r18,1024
 4005678:	003fc306 	br	4005588 <__smakebuf_r+0xbc>
 400567c:	0027883a 	mov	r19,zero
 4005680:	04810004 	movi	r18,1024
 4005684:	003fc006 	br	4005588 <__smakebuf_r+0xbc>

04005688 <_malloc_r>:
 4005688:	defff504 	addi	sp,sp,-44
 400568c:	dc800315 	stw	r18,12(sp)
 4005690:	dfc00a15 	stw	ra,40(sp)
 4005694:	df000915 	stw	fp,36(sp)
 4005698:	ddc00815 	stw	r23,32(sp)
 400569c:	dd800715 	stw	r22,28(sp)
 40056a0:	dd400615 	stw	r21,24(sp)
 40056a4:	dd000515 	stw	r20,20(sp)
 40056a8:	dcc00415 	stw	r19,16(sp)
 40056ac:	dc400215 	stw	r17,8(sp)
 40056b0:	dc000115 	stw	r16,4(sp)
 40056b4:	288002c4 	addi	r2,r5,11
 40056b8:	00c00584 	movi	r3,22
 40056bc:	2025883a 	mov	r18,r4
 40056c0:	18807f2e 	bgeu	r3,r2,40058c0 <_malloc_r+0x238>
 40056c4:	047ffe04 	movi	r17,-8
 40056c8:	1462703a 	and	r17,r2,r17
 40056cc:	8800a316 	blt	r17,zero,400595c <_malloc_r+0x2d4>
 40056d0:	8940a236 	bltu	r17,r5,400595c <_malloc_r+0x2d4>
 40056d4:	400d8600 	call	400d860 <__malloc_lock>
 40056d8:	00807dc4 	movi	r2,503
 40056dc:	1441e92e 	bgeu	r2,r17,4005e84 <_malloc_r+0x7fc>
 40056e0:	8804d27a 	srli	r2,r17,9
 40056e4:	1000a126 	beq	r2,zero,400596c <_malloc_r+0x2e4>
 40056e8:	00c00104 	movi	r3,4
 40056ec:	18811e36 	bltu	r3,r2,4005b68 <_malloc_r+0x4e0>
 40056f0:	8804d1ba 	srli	r2,r17,6
 40056f4:	12000e44 	addi	r8,r2,57
 40056f8:	11c00e04 	addi	r7,r2,56
 40056fc:	4209883a 	add	r4,r8,r8
 4005700:	04c10074 	movhi	r19,1025
 4005704:	2109883a 	add	r4,r4,r4
 4005708:	9cc09604 	addi	r19,r19,600
 400570c:	2109883a 	add	r4,r4,r4
 4005710:	9909883a 	add	r4,r19,r4
 4005714:	24000117 	ldw	r16,4(r4)
 4005718:	213ffe04 	addi	r4,r4,-8
 400571c:	24009726 	beq	r4,r16,400597c <_malloc_r+0x2f4>
 4005720:	80800117 	ldw	r2,4(r16)
 4005724:	01bfff04 	movi	r6,-4
 4005728:	014003c4 	movi	r5,15
 400572c:	1184703a 	and	r2,r2,r6
 4005730:	1447c83a 	sub	r3,r2,r17
 4005734:	28c00716 	blt	r5,r3,4005754 <_malloc_r+0xcc>
 4005738:	1800920e 	bge	r3,zero,4005984 <_malloc_r+0x2fc>
 400573c:	84000317 	ldw	r16,12(r16)
 4005740:	24008e26 	beq	r4,r16,400597c <_malloc_r+0x2f4>
 4005744:	80800117 	ldw	r2,4(r16)
 4005748:	1184703a 	and	r2,r2,r6
 400574c:	1447c83a 	sub	r3,r2,r17
 4005750:	28fff90e 	bge	r5,r3,4005738 <_malloc_r+0xb0>
 4005754:	3809883a 	mov	r4,r7
 4005758:	01810074 	movhi	r6,1025
 400575c:	9c000417 	ldw	r16,16(r19)
 4005760:	31809604 	addi	r6,r6,600
 4005764:	32000204 	addi	r8,r6,8
 4005768:	82013426 	beq	r16,r8,4005c3c <_malloc_r+0x5b4>
 400576c:	80c00117 	ldw	r3,4(r16)
 4005770:	00bfff04 	movi	r2,-4
 4005774:	188e703a 	and	r7,r3,r2
 4005778:	3c45c83a 	sub	r2,r7,r17
 400577c:	00c003c4 	movi	r3,15
 4005780:	18811f16 	blt	r3,r2,4005c00 <_malloc_r+0x578>
 4005784:	32000515 	stw	r8,20(r6)
 4005788:	32000415 	stw	r8,16(r6)
 400578c:	10007f0e 	bge	r2,zero,400598c <_malloc_r+0x304>
 4005790:	00807fc4 	movi	r2,511
 4005794:	11c0fd36 	bltu	r2,r7,4005b8c <_malloc_r+0x504>
 4005798:	3806d0fa 	srli	r3,r7,3
 400579c:	01c00044 	movi	r7,1
 40057a0:	30800117 	ldw	r2,4(r6)
 40057a4:	19400044 	addi	r5,r3,1
 40057a8:	294b883a 	add	r5,r5,r5
 40057ac:	1807d0ba 	srai	r3,r3,2
 40057b0:	294b883a 	add	r5,r5,r5
 40057b4:	294b883a 	add	r5,r5,r5
 40057b8:	298b883a 	add	r5,r5,r6
 40057bc:	38c6983a 	sll	r3,r7,r3
 40057c0:	29c00017 	ldw	r7,0(r5)
 40057c4:	2a7ffe04 	addi	r9,r5,-8
 40057c8:	1886b03a 	or	r3,r3,r2
 40057cc:	82400315 	stw	r9,12(r16)
 40057d0:	81c00215 	stw	r7,8(r16)
 40057d4:	30c00115 	stw	r3,4(r6)
 40057d8:	2c000015 	stw	r16,0(r5)
 40057dc:	3c000315 	stw	r16,12(r7)
 40057e0:	2005d0ba 	srai	r2,r4,2
 40057e4:	01400044 	movi	r5,1
 40057e8:	288a983a 	sll	r5,r5,r2
 40057ec:	19406f36 	bltu	r3,r5,40059ac <_malloc_r+0x324>
 40057f0:	28c4703a 	and	r2,r5,r3
 40057f4:	10000a1e 	bne	r2,zero,4005820 <_malloc_r+0x198>
 40057f8:	00bfff04 	movi	r2,-4
 40057fc:	294b883a 	add	r5,r5,r5
 4005800:	2088703a 	and	r4,r4,r2
 4005804:	28c4703a 	and	r2,r5,r3
 4005808:	21000104 	addi	r4,r4,4
 400580c:	1000041e 	bne	r2,zero,4005820 <_malloc_r+0x198>
 4005810:	294b883a 	add	r5,r5,r5
 4005814:	28c4703a 	and	r2,r5,r3
 4005818:	21000104 	addi	r4,r4,4
 400581c:	103ffc26 	beq	r2,zero,4005810 <_malloc_r+0x188>
 4005820:	02bfff04 	movi	r10,-4
 4005824:	024003c4 	movi	r9,15
 4005828:	21800044 	addi	r6,r4,1
 400582c:	318d883a 	add	r6,r6,r6
 4005830:	318d883a 	add	r6,r6,r6
 4005834:	318d883a 	add	r6,r6,r6
 4005838:	998d883a 	add	r6,r19,r6
 400583c:	333ffe04 	addi	r12,r6,-8
 4005840:	2017883a 	mov	r11,r4
 4005844:	31800104 	addi	r6,r6,4
 4005848:	34000017 	ldw	r16,0(r6)
 400584c:	31fffd04 	addi	r7,r6,-12
 4005850:	81c0041e 	bne	r16,r7,4005864 <_malloc_r+0x1dc>
 4005854:	0000fb06 	br	4005c44 <_malloc_r+0x5bc>
 4005858:	1801030e 	bge	r3,zero,4005c68 <_malloc_r+0x5e0>
 400585c:	84000317 	ldw	r16,12(r16)
 4005860:	81c0f826 	beq	r16,r7,4005c44 <_malloc_r+0x5bc>
 4005864:	80800117 	ldw	r2,4(r16)
 4005868:	1284703a 	and	r2,r2,r10
 400586c:	1447c83a 	sub	r3,r2,r17
 4005870:	48fff90e 	bge	r9,r3,4005858 <_malloc_r+0x1d0>
 4005874:	80800317 	ldw	r2,12(r16)
 4005878:	81000217 	ldw	r4,8(r16)
 400587c:	89400054 	ori	r5,r17,1
 4005880:	81400115 	stw	r5,4(r16)
 4005884:	20800315 	stw	r2,12(r4)
 4005888:	11000215 	stw	r4,8(r2)
 400588c:	8463883a 	add	r17,r16,r17
 4005890:	9c400515 	stw	r17,20(r19)
 4005894:	9c400415 	stw	r17,16(r19)
 4005898:	18800054 	ori	r2,r3,1
 400589c:	88800115 	stw	r2,4(r17)
 40058a0:	8a000315 	stw	r8,12(r17)
 40058a4:	8a000215 	stw	r8,8(r17)
 40058a8:	88e3883a 	add	r17,r17,r3
 40058ac:	88c00015 	stw	r3,0(r17)
 40058b0:	9009883a 	mov	r4,r18
 40058b4:	400d8840 	call	400d884 <__malloc_unlock>
 40058b8:	80800204 	addi	r2,r16,8
 40058bc:	00001b06 	br	400592c <_malloc_r+0x2a4>
 40058c0:	04400404 	movi	r17,16
 40058c4:	89402536 	bltu	r17,r5,400595c <_malloc_r+0x2d4>
 40058c8:	400d8600 	call	400d860 <__malloc_lock>
 40058cc:	00800184 	movi	r2,6
 40058d0:	01000084 	movi	r4,2
 40058d4:	04c10074 	movhi	r19,1025
 40058d8:	1085883a 	add	r2,r2,r2
 40058dc:	9cc09604 	addi	r19,r19,600
 40058e0:	1085883a 	add	r2,r2,r2
 40058e4:	9885883a 	add	r2,r19,r2
 40058e8:	14000117 	ldw	r16,4(r2)
 40058ec:	10fffe04 	addi	r3,r2,-8
 40058f0:	80c0d926 	beq	r16,r3,4005c58 <_malloc_r+0x5d0>
 40058f4:	80c00117 	ldw	r3,4(r16)
 40058f8:	81000317 	ldw	r4,12(r16)
 40058fc:	00bfff04 	movi	r2,-4
 4005900:	1884703a 	and	r2,r3,r2
 4005904:	81400217 	ldw	r5,8(r16)
 4005908:	8085883a 	add	r2,r16,r2
 400590c:	10c00117 	ldw	r3,4(r2)
 4005910:	29000315 	stw	r4,12(r5)
 4005914:	21400215 	stw	r5,8(r4)
 4005918:	18c00054 	ori	r3,r3,1
 400591c:	10c00115 	stw	r3,4(r2)
 4005920:	9009883a 	mov	r4,r18
 4005924:	400d8840 	call	400d884 <__malloc_unlock>
 4005928:	80800204 	addi	r2,r16,8
 400592c:	dfc00a17 	ldw	ra,40(sp)
 4005930:	df000917 	ldw	fp,36(sp)
 4005934:	ddc00817 	ldw	r23,32(sp)
 4005938:	dd800717 	ldw	r22,28(sp)
 400593c:	dd400617 	ldw	r21,24(sp)
 4005940:	dd000517 	ldw	r20,20(sp)
 4005944:	dcc00417 	ldw	r19,16(sp)
 4005948:	dc800317 	ldw	r18,12(sp)
 400594c:	dc400217 	ldw	r17,8(sp)
 4005950:	dc000117 	ldw	r16,4(sp)
 4005954:	dec00b04 	addi	sp,sp,44
 4005958:	f800283a 	ret
 400595c:	00800304 	movi	r2,12
 4005960:	90800015 	stw	r2,0(r18)
 4005964:	0005883a 	mov	r2,zero
 4005968:	003ff006 	br	400592c <_malloc_r+0x2a4>
 400596c:	01002004 	movi	r4,128
 4005970:	02001004 	movi	r8,64
 4005974:	01c00fc4 	movi	r7,63
 4005978:	003f6106 	br	4005700 <_malloc_r+0x78>
 400597c:	4009883a 	mov	r4,r8
 4005980:	003f7506 	br	4005758 <_malloc_r+0xd0>
 4005984:	81000317 	ldw	r4,12(r16)
 4005988:	003fde06 	br	4005904 <_malloc_r+0x27c>
 400598c:	81c5883a 	add	r2,r16,r7
 4005990:	11400117 	ldw	r5,4(r2)
 4005994:	9009883a 	mov	r4,r18
 4005998:	29400054 	ori	r5,r5,1
 400599c:	11400115 	stw	r5,4(r2)
 40059a0:	400d8840 	call	400d884 <__malloc_unlock>
 40059a4:	80800204 	addi	r2,r16,8
 40059a8:	003fe006 	br	400592c <_malloc_r+0x2a4>
 40059ac:	9c000217 	ldw	r16,8(r19)
 40059b0:	00bfff04 	movi	r2,-4
 40059b4:	85800117 	ldw	r22,4(r16)
 40059b8:	b0ac703a 	and	r22,r22,r2
 40059bc:	b4400336 	bltu	r22,r17,40059cc <_malloc_r+0x344>
 40059c0:	b445c83a 	sub	r2,r22,r17
 40059c4:	00c003c4 	movi	r3,15
 40059c8:	18805d16 	blt	r3,r2,4005b40 <_malloc_r+0x4b8>
 40059cc:	05c10074 	movhi	r23,1025
 40059d0:	00810074 	movhi	r2,1025
 40059d4:	108cec04 	addi	r2,r2,13232
 40059d8:	bdc61e04 	addi	r23,r23,6264
 40059dc:	15400017 	ldw	r21,0(r2)
 40059e0:	b8c00017 	ldw	r3,0(r23)
 40059e4:	00bfffc4 	movi	r2,-1
 40059e8:	858d883a 	add	r6,r16,r22
 40059ec:	8d6b883a 	add	r21,r17,r21
 40059f0:	1880ea26 	beq	r3,r2,4005d9c <_malloc_r+0x714>
 40059f4:	ad4403c4 	addi	r21,r21,4111
 40059f8:	00bc0004 	movi	r2,-4096
 40059fc:	a8aa703a 	and	r21,r21,r2
 4005a00:	a80b883a 	mov	r5,r21
 4005a04:	9009883a 	mov	r4,r18
 4005a08:	d9800015 	stw	r6,0(sp)
 4005a0c:	40079d40 	call	40079d4 <_sbrk_r>
 4005a10:	1029883a 	mov	r20,r2
 4005a14:	00bfffc4 	movi	r2,-1
 4005a18:	d9800017 	ldw	r6,0(sp)
 4005a1c:	a080e826 	beq	r20,r2,4005dc0 <_malloc_r+0x738>
 4005a20:	a180a636 	bltu	r20,r6,4005cbc <_malloc_r+0x634>
 4005a24:	07010074 	movhi	fp,1025
 4005a28:	e70cf504 	addi	fp,fp,13268
 4005a2c:	e0800017 	ldw	r2,0(fp)
 4005a30:	a887883a 	add	r3,r21,r2
 4005a34:	e0c00015 	stw	r3,0(fp)
 4005a38:	3500e626 	beq	r6,r20,4005dd4 <_malloc_r+0x74c>
 4005a3c:	b9000017 	ldw	r4,0(r23)
 4005a40:	00bfffc4 	movi	r2,-1
 4005a44:	2080ee26 	beq	r4,r2,4005e00 <_malloc_r+0x778>
 4005a48:	a185c83a 	sub	r2,r20,r6
 4005a4c:	10c5883a 	add	r2,r2,r3
 4005a50:	e0800015 	stw	r2,0(fp)
 4005a54:	a0c001cc 	andi	r3,r20,7
 4005a58:	1800bc26 	beq	r3,zero,4005d4c <_malloc_r+0x6c4>
 4005a5c:	a0e9c83a 	sub	r20,r20,r3
 4005a60:	00840204 	movi	r2,4104
 4005a64:	a5000204 	addi	r20,r20,8
 4005a68:	10c7c83a 	sub	r3,r2,r3
 4005a6c:	a545883a 	add	r2,r20,r21
 4005a70:	1083ffcc 	andi	r2,r2,4095
 4005a74:	18abc83a 	sub	r21,r3,r2
 4005a78:	a80b883a 	mov	r5,r21
 4005a7c:	9009883a 	mov	r4,r18
 4005a80:	40079d40 	call	40079d4 <_sbrk_r>
 4005a84:	00ffffc4 	movi	r3,-1
 4005a88:	10c0e126 	beq	r2,r3,4005e10 <_malloc_r+0x788>
 4005a8c:	1505c83a 	sub	r2,r2,r20
 4005a90:	1545883a 	add	r2,r2,r21
 4005a94:	10800054 	ori	r2,r2,1
 4005a98:	e0c00017 	ldw	r3,0(fp)
 4005a9c:	9d000215 	stw	r20,8(r19)
 4005aa0:	a0800115 	stw	r2,4(r20)
 4005aa4:	a8c7883a 	add	r3,r21,r3
 4005aa8:	e0c00015 	stw	r3,0(fp)
 4005aac:	84c00e26 	beq	r16,r19,4005ae8 <_malloc_r+0x460>
 4005ab0:	018003c4 	movi	r6,15
 4005ab4:	3580a72e 	bgeu	r6,r22,4005d54 <_malloc_r+0x6cc>
 4005ab8:	81400117 	ldw	r5,4(r16)
 4005abc:	013ffe04 	movi	r4,-8
 4005ac0:	b0bffd04 	addi	r2,r22,-12
 4005ac4:	1104703a 	and	r2,r2,r4
 4005ac8:	2900004c 	andi	r4,r5,1
 4005acc:	2088b03a 	or	r4,r4,r2
 4005ad0:	81000115 	stw	r4,4(r16)
 4005ad4:	01400144 	movi	r5,5
 4005ad8:	8089883a 	add	r4,r16,r2
 4005adc:	21400115 	stw	r5,4(r4)
 4005ae0:	21400215 	stw	r5,8(r4)
 4005ae4:	3080cd36 	bltu	r6,r2,4005e1c <_malloc_r+0x794>
 4005ae8:	00810074 	movhi	r2,1025
 4005aec:	108ceb04 	addi	r2,r2,13228
 4005af0:	11000017 	ldw	r4,0(r2)
 4005af4:	20c0012e 	bgeu	r4,r3,4005afc <_malloc_r+0x474>
 4005af8:	10c00015 	stw	r3,0(r2)
 4005afc:	00810074 	movhi	r2,1025
 4005b00:	108cea04 	addi	r2,r2,13224
 4005b04:	11000017 	ldw	r4,0(r2)
 4005b08:	9c000217 	ldw	r16,8(r19)
 4005b0c:	20c0012e 	bgeu	r4,r3,4005b14 <_malloc_r+0x48c>
 4005b10:	10c00015 	stw	r3,0(r2)
 4005b14:	80c00117 	ldw	r3,4(r16)
 4005b18:	00bfff04 	movi	r2,-4
 4005b1c:	1886703a 	and	r3,r3,r2
 4005b20:	1c45c83a 	sub	r2,r3,r17
 4005b24:	1c400236 	bltu	r3,r17,4005b30 <_malloc_r+0x4a8>
 4005b28:	00c003c4 	movi	r3,15
 4005b2c:	18800416 	blt	r3,r2,4005b40 <_malloc_r+0x4b8>
 4005b30:	9009883a 	mov	r4,r18
 4005b34:	400d8840 	call	400d884 <__malloc_unlock>
 4005b38:	0005883a 	mov	r2,zero
 4005b3c:	003f7b06 	br	400592c <_malloc_r+0x2a4>
 4005b40:	88c00054 	ori	r3,r17,1
 4005b44:	80c00115 	stw	r3,4(r16)
 4005b48:	8463883a 	add	r17,r16,r17
 4005b4c:	10800054 	ori	r2,r2,1
 4005b50:	9c400215 	stw	r17,8(r19)
 4005b54:	88800115 	stw	r2,4(r17)
 4005b58:	9009883a 	mov	r4,r18
 4005b5c:	400d8840 	call	400d884 <__malloc_unlock>
 4005b60:	80800204 	addi	r2,r16,8
 4005b64:	003f7106 	br	400592c <_malloc_r+0x2a4>
 4005b68:	00c00504 	movi	r3,20
 4005b6c:	18804a2e 	bgeu	r3,r2,4005c98 <_malloc_r+0x610>
 4005b70:	00c01504 	movi	r3,84
 4005b74:	18806e36 	bltu	r3,r2,4005d30 <_malloc_r+0x6a8>
 4005b78:	8804d33a 	srli	r2,r17,12
 4005b7c:	12001bc4 	addi	r8,r2,111
 4005b80:	11c01b84 	addi	r7,r2,110
 4005b84:	4209883a 	add	r4,r8,r8
 4005b88:	003edd06 	br	4005700 <_malloc_r+0x78>
 4005b8c:	3804d27a 	srli	r2,r7,9
 4005b90:	00c00104 	movi	r3,4
 4005b94:	1880442e 	bgeu	r3,r2,4005ca8 <_malloc_r+0x620>
 4005b98:	00c00504 	movi	r3,20
 4005b9c:	18808136 	bltu	r3,r2,4005da4 <_malloc_r+0x71c>
 4005ba0:	11401704 	addi	r5,r2,92
 4005ba4:	10c016c4 	addi	r3,r2,91
 4005ba8:	294b883a 	add	r5,r5,r5
 4005bac:	294b883a 	add	r5,r5,r5
 4005bb0:	294b883a 	add	r5,r5,r5
 4005bb4:	994b883a 	add	r5,r19,r5
 4005bb8:	28800017 	ldw	r2,0(r5)
 4005bbc:	01810074 	movhi	r6,1025
 4005bc0:	297ffe04 	addi	r5,r5,-8
 4005bc4:	31809604 	addi	r6,r6,600
 4005bc8:	28806526 	beq	r5,r2,4005d60 <_malloc_r+0x6d8>
 4005bcc:	01bfff04 	movi	r6,-4
 4005bd0:	10c00117 	ldw	r3,4(r2)
 4005bd4:	1986703a 	and	r3,r3,r6
 4005bd8:	38c0022e 	bgeu	r7,r3,4005be4 <_malloc_r+0x55c>
 4005bdc:	10800217 	ldw	r2,8(r2)
 4005be0:	28bffb1e 	bne	r5,r2,4005bd0 <_malloc_r+0x548>
 4005be4:	11400317 	ldw	r5,12(r2)
 4005be8:	98c00117 	ldw	r3,4(r19)
 4005bec:	81400315 	stw	r5,12(r16)
 4005bf0:	80800215 	stw	r2,8(r16)
 4005bf4:	2c000215 	stw	r16,8(r5)
 4005bf8:	14000315 	stw	r16,12(r2)
 4005bfc:	003ef806 	br	40057e0 <_malloc_r+0x158>
 4005c00:	88c00054 	ori	r3,r17,1
 4005c04:	80c00115 	stw	r3,4(r16)
 4005c08:	8463883a 	add	r17,r16,r17
 4005c0c:	34400515 	stw	r17,20(r6)
 4005c10:	34400415 	stw	r17,16(r6)
 4005c14:	10c00054 	ori	r3,r2,1
 4005c18:	8a000315 	stw	r8,12(r17)
 4005c1c:	8a000215 	stw	r8,8(r17)
 4005c20:	88c00115 	stw	r3,4(r17)
 4005c24:	88a3883a 	add	r17,r17,r2
 4005c28:	88800015 	stw	r2,0(r17)
 4005c2c:	9009883a 	mov	r4,r18
 4005c30:	400d8840 	call	400d884 <__malloc_unlock>
 4005c34:	80800204 	addi	r2,r16,8
 4005c38:	003f3c06 	br	400592c <_malloc_r+0x2a4>
 4005c3c:	30c00117 	ldw	r3,4(r6)
 4005c40:	003ee706 	br	40057e0 <_malloc_r+0x158>
 4005c44:	5ac00044 	addi	r11,r11,1
 4005c48:	588000cc 	andi	r2,r11,3
 4005c4c:	31800204 	addi	r6,r6,8
 4005c50:	103efd1e 	bne	r2,zero,4005848 <_malloc_r+0x1c0>
 4005c54:	00002406 	br	4005ce8 <_malloc_r+0x660>
 4005c58:	14000317 	ldw	r16,12(r2)
 4005c5c:	143f251e 	bne	r2,r16,40058f4 <_malloc_r+0x26c>
 4005c60:	21000084 	addi	r4,r4,2
 4005c64:	003ebc06 	br	4005758 <_malloc_r+0xd0>
 4005c68:	8085883a 	add	r2,r16,r2
 4005c6c:	10c00117 	ldw	r3,4(r2)
 4005c70:	81000317 	ldw	r4,12(r16)
 4005c74:	81400217 	ldw	r5,8(r16)
 4005c78:	18c00054 	ori	r3,r3,1
 4005c7c:	10c00115 	stw	r3,4(r2)
 4005c80:	29000315 	stw	r4,12(r5)
 4005c84:	21400215 	stw	r5,8(r4)
 4005c88:	9009883a 	mov	r4,r18
 4005c8c:	400d8840 	call	400d884 <__malloc_unlock>
 4005c90:	80800204 	addi	r2,r16,8
 4005c94:	003f2506 	br	400592c <_malloc_r+0x2a4>
 4005c98:	12001704 	addi	r8,r2,92
 4005c9c:	11c016c4 	addi	r7,r2,91
 4005ca0:	4209883a 	add	r4,r8,r8
 4005ca4:	003e9606 	br	4005700 <_malloc_r+0x78>
 4005ca8:	3804d1ba 	srli	r2,r7,6
 4005cac:	11400e44 	addi	r5,r2,57
 4005cb0:	10c00e04 	addi	r3,r2,56
 4005cb4:	294b883a 	add	r5,r5,r5
 4005cb8:	003fbc06 	br	4005bac <_malloc_r+0x524>
 4005cbc:	84ff5926 	beq	r16,r19,4005a24 <_malloc_r+0x39c>
 4005cc0:	00810074 	movhi	r2,1025
 4005cc4:	10809604 	addi	r2,r2,600
 4005cc8:	14000217 	ldw	r16,8(r2)
 4005ccc:	00bfff04 	movi	r2,-4
 4005cd0:	80c00117 	ldw	r3,4(r16)
 4005cd4:	1886703a 	and	r3,r3,r2
 4005cd8:	003f9106 	br	4005b20 <_malloc_r+0x498>
 4005cdc:	60800217 	ldw	r2,8(r12)
 4005ce0:	213fffc4 	addi	r4,r4,-1
 4005ce4:	1300651e 	bne	r2,r12,4005e7c <_malloc_r+0x7f4>
 4005ce8:	208000cc 	andi	r2,r4,3
 4005cec:	633ffe04 	addi	r12,r12,-8
 4005cf0:	103ffa1e 	bne	r2,zero,4005cdc <_malloc_r+0x654>
 4005cf4:	98800117 	ldw	r2,4(r19)
 4005cf8:	0146303a 	nor	r3,zero,r5
 4005cfc:	1884703a 	and	r2,r3,r2
 4005d00:	98800115 	stw	r2,4(r19)
 4005d04:	294b883a 	add	r5,r5,r5
 4005d08:	117f2836 	bltu	r2,r5,40059ac <_malloc_r+0x324>
 4005d0c:	283f2726 	beq	r5,zero,40059ac <_malloc_r+0x324>
 4005d10:	2886703a 	and	r3,r5,r2
 4005d14:	5809883a 	mov	r4,r11
 4005d18:	183ec31e 	bne	r3,zero,4005828 <_malloc_r+0x1a0>
 4005d1c:	294b883a 	add	r5,r5,r5
 4005d20:	2886703a 	and	r3,r5,r2
 4005d24:	21000104 	addi	r4,r4,4
 4005d28:	183ffc26 	beq	r3,zero,4005d1c <_malloc_r+0x694>
 4005d2c:	003ebe06 	br	4005828 <_malloc_r+0x1a0>
 4005d30:	00c05504 	movi	r3,340
 4005d34:	18801236 	bltu	r3,r2,4005d80 <_malloc_r+0x6f8>
 4005d38:	8804d3fa 	srli	r2,r17,15
 4005d3c:	12001e04 	addi	r8,r2,120
 4005d40:	11c01dc4 	addi	r7,r2,119
 4005d44:	4209883a 	add	r4,r8,r8
 4005d48:	003e6d06 	br	4005700 <_malloc_r+0x78>
 4005d4c:	00c40004 	movi	r3,4096
 4005d50:	003f4606 	br	4005a6c <_malloc_r+0x3e4>
 4005d54:	00800044 	movi	r2,1
 4005d58:	a0800115 	stw	r2,4(r20)
 4005d5c:	003f7406 	br	4005b30 <_malloc_r+0x4a8>
 4005d60:	1805d0ba 	srai	r2,r3,2
 4005d64:	01c00044 	movi	r7,1
 4005d68:	30c00117 	ldw	r3,4(r6)
 4005d6c:	388e983a 	sll	r7,r7,r2
 4005d70:	2805883a 	mov	r2,r5
 4005d74:	38c6b03a 	or	r3,r7,r3
 4005d78:	30c00115 	stw	r3,4(r6)
 4005d7c:	003f9b06 	br	4005bec <_malloc_r+0x564>
 4005d80:	00c15504 	movi	r3,1364
 4005d84:	18801a36 	bltu	r3,r2,4005df0 <_malloc_r+0x768>
 4005d88:	8804d4ba 	srli	r2,r17,18
 4005d8c:	12001f44 	addi	r8,r2,125
 4005d90:	11c01f04 	addi	r7,r2,124
 4005d94:	4209883a 	add	r4,r8,r8
 4005d98:	003e5906 	br	4005700 <_malloc_r+0x78>
 4005d9c:	ad400404 	addi	r21,r21,16
 4005da0:	003f1706 	br	4005a00 <_malloc_r+0x378>
 4005da4:	00c01504 	movi	r3,84
 4005da8:	18802336 	bltu	r3,r2,4005e38 <_malloc_r+0x7b0>
 4005dac:	3804d33a 	srli	r2,r7,12
 4005db0:	11401bc4 	addi	r5,r2,111
 4005db4:	10c01b84 	addi	r3,r2,110
 4005db8:	294b883a 	add	r5,r5,r5
 4005dbc:	003f7b06 	br	4005bac <_malloc_r+0x524>
 4005dc0:	9c000217 	ldw	r16,8(r19)
 4005dc4:	00bfff04 	movi	r2,-4
 4005dc8:	80c00117 	ldw	r3,4(r16)
 4005dcc:	1886703a 	and	r3,r3,r2
 4005dd0:	003f5306 	br	4005b20 <_malloc_r+0x498>
 4005dd4:	3083ffcc 	andi	r2,r6,4095
 4005dd8:	103f181e 	bne	r2,zero,4005a3c <_malloc_r+0x3b4>
 4005ddc:	99000217 	ldw	r4,8(r19)
 4005de0:	b545883a 	add	r2,r22,r21
 4005de4:	10800054 	ori	r2,r2,1
 4005de8:	20800115 	stw	r2,4(r4)
 4005dec:	003f3e06 	br	4005ae8 <_malloc_r+0x460>
 4005df0:	01003f84 	movi	r4,254
 4005df4:	02001fc4 	movi	r8,127
 4005df8:	01c01f84 	movi	r7,126
 4005dfc:	003e4006 	br	4005700 <_malloc_r+0x78>
 4005e00:	00810074 	movhi	r2,1025
 4005e04:	10861e04 	addi	r2,r2,6264
 4005e08:	15000015 	stw	r20,0(r2)
 4005e0c:	003f1106 	br	4005a54 <_malloc_r+0x3cc>
 4005e10:	00800044 	movi	r2,1
 4005e14:	002b883a 	mov	r21,zero
 4005e18:	003f1f06 	br	4005a98 <_malloc_r+0x410>
 4005e1c:	81400204 	addi	r5,r16,8
 4005e20:	9009883a 	mov	r4,r18
 4005e24:	4004a900 	call	4004a90 <_free_r>
 4005e28:	00810074 	movhi	r2,1025
 4005e2c:	108cf504 	addi	r2,r2,13268
 4005e30:	10c00017 	ldw	r3,0(r2)
 4005e34:	003f2c06 	br	4005ae8 <_malloc_r+0x460>
 4005e38:	00c05504 	movi	r3,340
 4005e3c:	18800536 	bltu	r3,r2,4005e54 <_malloc_r+0x7cc>
 4005e40:	3804d3fa 	srli	r2,r7,15
 4005e44:	11401e04 	addi	r5,r2,120
 4005e48:	10c01dc4 	addi	r3,r2,119
 4005e4c:	294b883a 	add	r5,r5,r5
 4005e50:	003f5606 	br	4005bac <_malloc_r+0x524>
 4005e54:	00c15504 	movi	r3,1364
 4005e58:	18800536 	bltu	r3,r2,4005e70 <_malloc_r+0x7e8>
 4005e5c:	3804d4ba 	srli	r2,r7,18
 4005e60:	11401f44 	addi	r5,r2,125
 4005e64:	10c01f04 	addi	r3,r2,124
 4005e68:	294b883a 	add	r5,r5,r5
 4005e6c:	003f4f06 	br	4005bac <_malloc_r+0x524>
 4005e70:	01403f84 	movi	r5,254
 4005e74:	00c01f84 	movi	r3,126
 4005e78:	003f4c06 	br	4005bac <_malloc_r+0x524>
 4005e7c:	98800117 	ldw	r2,4(r19)
 4005e80:	003fa006 	br	4005d04 <_malloc_r+0x67c>
 4005e84:	8808d0fa 	srli	r4,r17,3
 4005e88:	20800044 	addi	r2,r4,1
 4005e8c:	1085883a 	add	r2,r2,r2
 4005e90:	003e9006 	br	40058d4 <_malloc_r+0x24c>

04005e94 <memchr>:
 4005e94:	208000cc 	andi	r2,r4,3
 4005e98:	280f883a 	mov	r7,r5
 4005e9c:	10003426 	beq	r2,zero,4005f70 <memchr+0xdc>
 4005ea0:	30bfffc4 	addi	r2,r6,-1
 4005ea4:	30001a26 	beq	r6,zero,4005f10 <memchr+0x7c>
 4005ea8:	20c00003 	ldbu	r3,0(r4)
 4005eac:	29803fcc 	andi	r6,r5,255
 4005eb0:	30c0051e 	bne	r6,r3,4005ec8 <memchr+0x34>
 4005eb4:	00001806 	br	4005f18 <memchr+0x84>
 4005eb8:	10001526 	beq	r2,zero,4005f10 <memchr+0x7c>
 4005ebc:	20c00003 	ldbu	r3,0(r4)
 4005ec0:	10bfffc4 	addi	r2,r2,-1
 4005ec4:	30c01426 	beq	r6,r3,4005f18 <memchr+0x84>
 4005ec8:	21000044 	addi	r4,r4,1
 4005ecc:	20c000cc 	andi	r3,r4,3
 4005ed0:	183ff91e 	bne	r3,zero,4005eb8 <memchr+0x24>
 4005ed4:	020000c4 	movi	r8,3
 4005ed8:	40801136 	bltu	r8,r2,4005f20 <memchr+0x8c>
 4005edc:	10000c26 	beq	r2,zero,4005f10 <memchr+0x7c>
 4005ee0:	20c00003 	ldbu	r3,0(r4)
 4005ee4:	29403fcc 	andi	r5,r5,255
 4005ee8:	28c00b26 	beq	r5,r3,4005f18 <memchr+0x84>
 4005eec:	20c00044 	addi	r3,r4,1
 4005ef0:	39803fcc 	andi	r6,r7,255
 4005ef4:	2089883a 	add	r4,r4,r2
 4005ef8:	00000306 	br	4005f08 <memchr+0x74>
 4005efc:	18c00044 	addi	r3,r3,1
 4005f00:	197fffc3 	ldbu	r5,-1(r3)
 4005f04:	31400526 	beq	r6,r5,4005f1c <memchr+0x88>
 4005f08:	1805883a 	mov	r2,r3
 4005f0c:	20fffb1e 	bne	r4,r3,4005efc <memchr+0x68>
 4005f10:	0005883a 	mov	r2,zero
 4005f14:	f800283a 	ret
 4005f18:	2005883a 	mov	r2,r4
 4005f1c:	f800283a 	ret
 4005f20:	28c03fcc 	andi	r3,r5,255
 4005f24:	1812923a 	slli	r9,r3,8
 4005f28:	02ffbff4 	movhi	r11,65279
 4005f2c:	02a02074 	movhi	r10,32897
 4005f30:	48d2b03a 	or	r9,r9,r3
 4005f34:	4806943a 	slli	r3,r9,16
 4005f38:	5affbfc4 	addi	r11,r11,-257
 4005f3c:	52a02004 	addi	r10,r10,-32640
 4005f40:	48d2b03a 	or	r9,r9,r3
 4005f44:	20c00017 	ldw	r3,0(r4)
 4005f48:	48c6f03a 	xor	r3,r9,r3
 4005f4c:	1acd883a 	add	r6,r3,r11
 4005f50:	00c6303a 	nor	r3,zero,r3
 4005f54:	30c6703a 	and	r3,r6,r3
 4005f58:	1a86703a 	and	r3,r3,r10
 4005f5c:	183fe01e 	bne	r3,zero,4005ee0 <memchr+0x4c>
 4005f60:	10bfff04 	addi	r2,r2,-4
 4005f64:	21000104 	addi	r4,r4,4
 4005f68:	40bff636 	bltu	r8,r2,4005f44 <memchr+0xb0>
 4005f6c:	003fdb06 	br	4005edc <memchr+0x48>
 4005f70:	3005883a 	mov	r2,r6
 4005f74:	003fd706 	br	4005ed4 <memchr+0x40>

04005f78 <memcpy>:
 4005f78:	defffd04 	addi	sp,sp,-12
 4005f7c:	dfc00215 	stw	ra,8(sp)
 4005f80:	dc400115 	stw	r17,4(sp)
 4005f84:	dc000015 	stw	r16,0(sp)
 4005f88:	00c003c4 	movi	r3,15
 4005f8c:	2005883a 	mov	r2,r4
 4005f90:	1980452e 	bgeu	r3,r6,40060a8 <memcpy+0x130>
 4005f94:	2906b03a 	or	r3,r5,r4
 4005f98:	18c000cc 	andi	r3,r3,3
 4005f9c:	1800441e 	bne	r3,zero,40060b0 <memcpy+0x138>
 4005fa0:	347ffc04 	addi	r17,r6,-16
 4005fa4:	8822d13a 	srli	r17,r17,4
 4005fa8:	28c00104 	addi	r3,r5,4
 4005fac:	23400104 	addi	r13,r4,4
 4005fb0:	8820913a 	slli	r16,r17,4
 4005fb4:	2b000204 	addi	r12,r5,8
 4005fb8:	22c00204 	addi	r11,r4,8
 4005fbc:	84000504 	addi	r16,r16,20
 4005fc0:	2a800304 	addi	r10,r5,12
 4005fc4:	22400304 	addi	r9,r4,12
 4005fc8:	2c21883a 	add	r16,r5,r16
 4005fcc:	2811883a 	mov	r8,r5
 4005fd0:	200f883a 	mov	r7,r4
 4005fd4:	41000017 	ldw	r4,0(r8)
 4005fd8:	1fc00017 	ldw	ra,0(r3)
 4005fdc:	63c00017 	ldw	r15,0(r12)
 4005fe0:	39000015 	stw	r4,0(r7)
 4005fe4:	53800017 	ldw	r14,0(r10)
 4005fe8:	6fc00015 	stw	ra,0(r13)
 4005fec:	5bc00015 	stw	r15,0(r11)
 4005ff0:	4b800015 	stw	r14,0(r9)
 4005ff4:	18c00404 	addi	r3,r3,16
 4005ff8:	39c00404 	addi	r7,r7,16
 4005ffc:	42000404 	addi	r8,r8,16
 4006000:	6b400404 	addi	r13,r13,16
 4006004:	63000404 	addi	r12,r12,16
 4006008:	5ac00404 	addi	r11,r11,16
 400600c:	52800404 	addi	r10,r10,16
 4006010:	4a400404 	addi	r9,r9,16
 4006014:	1c3fef1e 	bne	r3,r16,4005fd4 <memcpy+0x5c>
 4006018:	89c00044 	addi	r7,r17,1
 400601c:	380e913a 	slli	r7,r7,4
 4006020:	310003cc 	andi	r4,r6,15
 4006024:	02c000c4 	movi	r11,3
 4006028:	11c7883a 	add	r3,r2,r7
 400602c:	29cb883a 	add	r5,r5,r7
 4006030:	5900212e 	bgeu	r11,r4,40060b8 <memcpy+0x140>
 4006034:	1813883a 	mov	r9,r3
 4006038:	2811883a 	mov	r8,r5
 400603c:	200f883a 	mov	r7,r4
 4006040:	42800017 	ldw	r10,0(r8)
 4006044:	4a400104 	addi	r9,r9,4
 4006048:	39ffff04 	addi	r7,r7,-4
 400604c:	4abfff15 	stw	r10,-4(r9)
 4006050:	42000104 	addi	r8,r8,4
 4006054:	59fffa36 	bltu	r11,r7,4006040 <memcpy+0xc8>
 4006058:	213fff04 	addi	r4,r4,-4
 400605c:	2008d0ba 	srli	r4,r4,2
 4006060:	318000cc 	andi	r6,r6,3
 4006064:	21000044 	addi	r4,r4,1
 4006068:	2109883a 	add	r4,r4,r4
 400606c:	2109883a 	add	r4,r4,r4
 4006070:	1907883a 	add	r3,r3,r4
 4006074:	290b883a 	add	r5,r5,r4
 4006078:	30000626 	beq	r6,zero,4006094 <memcpy+0x11c>
 400607c:	198d883a 	add	r6,r3,r6
 4006080:	29c00003 	ldbu	r7,0(r5)
 4006084:	18c00044 	addi	r3,r3,1
 4006088:	29400044 	addi	r5,r5,1
 400608c:	19ffffc5 	stb	r7,-1(r3)
 4006090:	19bffb1e 	bne	r3,r6,4006080 <memcpy+0x108>
 4006094:	dfc00217 	ldw	ra,8(sp)
 4006098:	dc400117 	ldw	r17,4(sp)
 400609c:	dc000017 	ldw	r16,0(sp)
 40060a0:	dec00304 	addi	sp,sp,12
 40060a4:	f800283a 	ret
 40060a8:	2007883a 	mov	r3,r4
 40060ac:	003ff206 	br	4006078 <memcpy+0x100>
 40060b0:	2007883a 	mov	r3,r4
 40060b4:	003ff106 	br	400607c <memcpy+0x104>
 40060b8:	200d883a 	mov	r6,r4
 40060bc:	003fee06 	br	4006078 <memcpy+0x100>

040060c0 <memmove>:
 40060c0:	2005883a 	mov	r2,r4
 40060c4:	29000b2e 	bgeu	r5,r4,40060f4 <memmove+0x34>
 40060c8:	298f883a 	add	r7,r5,r6
 40060cc:	21c0092e 	bgeu	r4,r7,40060f4 <memmove+0x34>
 40060d0:	2187883a 	add	r3,r4,r6
 40060d4:	198bc83a 	sub	r5,r3,r6
 40060d8:	30004826 	beq	r6,zero,40061fc <memmove+0x13c>
 40060dc:	39ffffc4 	addi	r7,r7,-1
 40060e0:	39000003 	ldbu	r4,0(r7)
 40060e4:	18ffffc4 	addi	r3,r3,-1
 40060e8:	19000005 	stb	r4,0(r3)
 40060ec:	28fffb1e 	bne	r5,r3,40060dc <memmove+0x1c>
 40060f0:	f800283a 	ret
 40060f4:	00c003c4 	movi	r3,15
 40060f8:	1980412e 	bgeu	r3,r6,4006200 <memmove+0x140>
 40060fc:	2886b03a 	or	r3,r5,r2
 4006100:	18c000cc 	andi	r3,r3,3
 4006104:	1800401e 	bne	r3,zero,4006208 <memmove+0x148>
 4006108:	33fffc04 	addi	r15,r6,-16
 400610c:	781ed13a 	srli	r15,r15,4
 4006110:	28c00104 	addi	r3,r5,4
 4006114:	13400104 	addi	r13,r2,4
 4006118:	781c913a 	slli	r14,r15,4
 400611c:	2b000204 	addi	r12,r5,8
 4006120:	12c00204 	addi	r11,r2,8
 4006124:	73800504 	addi	r14,r14,20
 4006128:	2a800304 	addi	r10,r5,12
 400612c:	12400304 	addi	r9,r2,12
 4006130:	2b9d883a 	add	r14,r5,r14
 4006134:	2811883a 	mov	r8,r5
 4006138:	100f883a 	mov	r7,r2
 400613c:	41000017 	ldw	r4,0(r8)
 4006140:	39c00404 	addi	r7,r7,16
 4006144:	18c00404 	addi	r3,r3,16
 4006148:	393ffc15 	stw	r4,-16(r7)
 400614c:	193ffc17 	ldw	r4,-16(r3)
 4006150:	6b400404 	addi	r13,r13,16
 4006154:	5ac00404 	addi	r11,r11,16
 4006158:	693ffc15 	stw	r4,-16(r13)
 400615c:	61000017 	ldw	r4,0(r12)
 4006160:	4a400404 	addi	r9,r9,16
 4006164:	42000404 	addi	r8,r8,16
 4006168:	593ffc15 	stw	r4,-16(r11)
 400616c:	51000017 	ldw	r4,0(r10)
 4006170:	63000404 	addi	r12,r12,16
 4006174:	52800404 	addi	r10,r10,16
 4006178:	493ffc15 	stw	r4,-16(r9)
 400617c:	1bbfef1e 	bne	r3,r14,400613c <memmove+0x7c>
 4006180:	79000044 	addi	r4,r15,1
 4006184:	2008913a 	slli	r4,r4,4
 4006188:	328003cc 	andi	r10,r6,15
 400618c:	02c000c4 	movi	r11,3
 4006190:	1107883a 	add	r3,r2,r4
 4006194:	290b883a 	add	r5,r5,r4
 4006198:	5a801e2e 	bgeu	r11,r10,4006214 <memmove+0x154>
 400619c:	1813883a 	mov	r9,r3
 40061a0:	2811883a 	mov	r8,r5
 40061a4:	500f883a 	mov	r7,r10
 40061a8:	41000017 	ldw	r4,0(r8)
 40061ac:	4a400104 	addi	r9,r9,4
 40061b0:	39ffff04 	addi	r7,r7,-4
 40061b4:	493fff15 	stw	r4,-4(r9)
 40061b8:	42000104 	addi	r8,r8,4
 40061bc:	59fffa36 	bltu	r11,r7,40061a8 <memmove+0xe8>
 40061c0:	513fff04 	addi	r4,r10,-4
 40061c4:	2008d0ba 	srli	r4,r4,2
 40061c8:	318000cc 	andi	r6,r6,3
 40061cc:	21000044 	addi	r4,r4,1
 40061d0:	2109883a 	add	r4,r4,r4
 40061d4:	2109883a 	add	r4,r4,r4
 40061d8:	1907883a 	add	r3,r3,r4
 40061dc:	290b883a 	add	r5,r5,r4
 40061e0:	30000b26 	beq	r6,zero,4006210 <memmove+0x150>
 40061e4:	198d883a 	add	r6,r3,r6
 40061e8:	29c00003 	ldbu	r7,0(r5)
 40061ec:	18c00044 	addi	r3,r3,1
 40061f0:	29400044 	addi	r5,r5,1
 40061f4:	19ffffc5 	stb	r7,-1(r3)
 40061f8:	19bffb1e 	bne	r3,r6,40061e8 <memmove+0x128>
 40061fc:	f800283a 	ret
 4006200:	1007883a 	mov	r3,r2
 4006204:	003ff606 	br	40061e0 <memmove+0x120>
 4006208:	1007883a 	mov	r3,r2
 400620c:	003ff506 	br	40061e4 <memmove+0x124>
 4006210:	f800283a 	ret
 4006214:	500d883a 	mov	r6,r10
 4006218:	003ff106 	br	40061e0 <memmove+0x120>

0400621c <memset>:
 400621c:	20c000cc 	andi	r3,r4,3
 4006220:	2005883a 	mov	r2,r4
 4006224:	18004426 	beq	r3,zero,4006338 <memset+0x11c>
 4006228:	31ffffc4 	addi	r7,r6,-1
 400622c:	30004026 	beq	r6,zero,4006330 <memset+0x114>
 4006230:	2813883a 	mov	r9,r5
 4006234:	200d883a 	mov	r6,r4
 4006238:	2007883a 	mov	r3,r4
 400623c:	00000406 	br	4006250 <memset+0x34>
 4006240:	3a3fffc4 	addi	r8,r7,-1
 4006244:	31800044 	addi	r6,r6,1
 4006248:	38003926 	beq	r7,zero,4006330 <memset+0x114>
 400624c:	400f883a 	mov	r7,r8
 4006250:	18c00044 	addi	r3,r3,1
 4006254:	32400005 	stb	r9,0(r6)
 4006258:	1a0000cc 	andi	r8,r3,3
 400625c:	403ff81e 	bne	r8,zero,4006240 <memset+0x24>
 4006260:	010000c4 	movi	r4,3
 4006264:	21c02d2e 	bgeu	r4,r7,400631c <memset+0x100>
 4006268:	29003fcc 	andi	r4,r5,255
 400626c:	200c923a 	slli	r6,r4,8
 4006270:	3108b03a 	or	r4,r6,r4
 4006274:	200c943a 	slli	r6,r4,16
 4006278:	218cb03a 	or	r6,r4,r6
 400627c:	010003c4 	movi	r4,15
 4006280:	21c0182e 	bgeu	r4,r7,40062e4 <memset+0xc8>
 4006284:	3b3ffc04 	addi	r12,r7,-16
 4006288:	6018d13a 	srli	r12,r12,4
 400628c:	1a000104 	addi	r8,r3,4
 4006290:	1ac00204 	addi	r11,r3,8
 4006294:	6008913a 	slli	r4,r12,4
 4006298:	1a800304 	addi	r10,r3,12
 400629c:	1813883a 	mov	r9,r3
 40062a0:	21000504 	addi	r4,r4,20
 40062a4:	1909883a 	add	r4,r3,r4
 40062a8:	49800015 	stw	r6,0(r9)
 40062ac:	41800015 	stw	r6,0(r8)
 40062b0:	59800015 	stw	r6,0(r11)
 40062b4:	51800015 	stw	r6,0(r10)
 40062b8:	42000404 	addi	r8,r8,16
 40062bc:	4a400404 	addi	r9,r9,16
 40062c0:	5ac00404 	addi	r11,r11,16
 40062c4:	52800404 	addi	r10,r10,16
 40062c8:	413ff71e 	bne	r8,r4,40062a8 <memset+0x8c>
 40062cc:	63000044 	addi	r12,r12,1
 40062d0:	6018913a 	slli	r12,r12,4
 40062d4:	39c003cc 	andi	r7,r7,15
 40062d8:	010000c4 	movi	r4,3
 40062dc:	1b07883a 	add	r3,r3,r12
 40062e0:	21c00e2e 	bgeu	r4,r7,400631c <memset+0x100>
 40062e4:	1813883a 	mov	r9,r3
 40062e8:	3811883a 	mov	r8,r7
 40062ec:	010000c4 	movi	r4,3
 40062f0:	49800015 	stw	r6,0(r9)
 40062f4:	423fff04 	addi	r8,r8,-4
 40062f8:	4a400104 	addi	r9,r9,4
 40062fc:	223ffc36 	bltu	r4,r8,40062f0 <memset+0xd4>
 4006300:	393fff04 	addi	r4,r7,-4
 4006304:	2008d0ba 	srli	r4,r4,2
 4006308:	39c000cc 	andi	r7,r7,3
 400630c:	21000044 	addi	r4,r4,1
 4006310:	2109883a 	add	r4,r4,r4
 4006314:	2109883a 	add	r4,r4,r4
 4006318:	1907883a 	add	r3,r3,r4
 400631c:	38000526 	beq	r7,zero,4006334 <memset+0x118>
 4006320:	19cf883a 	add	r7,r3,r7
 4006324:	19400005 	stb	r5,0(r3)
 4006328:	18c00044 	addi	r3,r3,1
 400632c:	38fffd1e 	bne	r7,r3,4006324 <memset+0x108>
 4006330:	f800283a 	ret
 4006334:	f800283a 	ret
 4006338:	2007883a 	mov	r3,r4
 400633c:	300f883a 	mov	r7,r6
 4006340:	003fc706 	br	4006260 <memset+0x44>

04006344 <_Balloc>:
 4006344:	20801317 	ldw	r2,76(r4)
 4006348:	defffc04 	addi	sp,sp,-16
 400634c:	dc400115 	stw	r17,4(sp)
 4006350:	dc000015 	stw	r16,0(sp)
 4006354:	dfc00315 	stw	ra,12(sp)
 4006358:	dc800215 	stw	r18,8(sp)
 400635c:	2023883a 	mov	r17,r4
 4006360:	2821883a 	mov	r16,r5
 4006364:	10000f26 	beq	r2,zero,40063a4 <_Balloc+0x60>
 4006368:	8407883a 	add	r3,r16,r16
 400636c:	18c7883a 	add	r3,r3,r3
 4006370:	10c7883a 	add	r3,r2,r3
 4006374:	18800017 	ldw	r2,0(r3)
 4006378:	10001126 	beq	r2,zero,40063c0 <_Balloc+0x7c>
 400637c:	11000017 	ldw	r4,0(r2)
 4006380:	19000015 	stw	r4,0(r3)
 4006384:	10000415 	stw	zero,16(r2)
 4006388:	10000315 	stw	zero,12(r2)
 400638c:	dfc00317 	ldw	ra,12(sp)
 4006390:	dc800217 	ldw	r18,8(sp)
 4006394:	dc400117 	ldw	r17,4(sp)
 4006398:	dc000017 	ldw	r16,0(sp)
 400639c:	dec00404 	addi	sp,sp,16
 40063a0:	f800283a 	ret
 40063a4:	01800844 	movi	r6,33
 40063a8:	01400104 	movi	r5,4
 40063ac:	40093ec0 	call	40093ec <_calloc_r>
 40063b0:	88801315 	stw	r2,76(r17)
 40063b4:	103fec1e 	bne	r2,zero,4006368 <_Balloc+0x24>
 40063b8:	0005883a 	mov	r2,zero
 40063bc:	003ff306 	br	400638c <_Balloc+0x48>
 40063c0:	01400044 	movi	r5,1
 40063c4:	2c24983a 	sll	r18,r5,r16
 40063c8:	8809883a 	mov	r4,r17
 40063cc:	91800144 	addi	r6,r18,5
 40063d0:	318d883a 	add	r6,r6,r6
 40063d4:	318d883a 	add	r6,r6,r6
 40063d8:	40093ec0 	call	40093ec <_calloc_r>
 40063dc:	103ff626 	beq	r2,zero,40063b8 <_Balloc+0x74>
 40063e0:	14000115 	stw	r16,4(r2)
 40063e4:	14800215 	stw	r18,8(r2)
 40063e8:	003fe606 	br	4006384 <_Balloc+0x40>

040063ec <_Bfree>:
 40063ec:	28000826 	beq	r5,zero,4006410 <_Bfree+0x24>
 40063f0:	28c00117 	ldw	r3,4(r5)
 40063f4:	20801317 	ldw	r2,76(r4)
 40063f8:	18c7883a 	add	r3,r3,r3
 40063fc:	18c7883a 	add	r3,r3,r3
 4006400:	10c5883a 	add	r2,r2,r3
 4006404:	10c00017 	ldw	r3,0(r2)
 4006408:	28c00015 	stw	r3,0(r5)
 400640c:	11400015 	stw	r5,0(r2)
 4006410:	f800283a 	ret

04006414 <__multadd>:
 4006414:	defff704 	addi	sp,sp,-36
 4006418:	dc800215 	stw	r18,8(sp)
 400641c:	2c800417 	ldw	r18,16(r5)
 4006420:	dd800615 	stw	r22,24(sp)
 4006424:	dd400515 	stw	r21,20(sp)
 4006428:	dd000415 	stw	r20,16(sp)
 400642c:	dcc00315 	stw	r19,12(sp)
 4006430:	dc400115 	stw	r17,4(sp)
 4006434:	dc000015 	stw	r16,0(sp)
 4006438:	dfc00815 	stw	ra,32(sp)
 400643c:	ddc00715 	stw	r23,28(sp)
 4006440:	2827883a 	mov	r19,r5
 4006444:	2029883a 	mov	r20,r4
 4006448:	3023883a 	mov	r17,r6
 400644c:	3821883a 	mov	r16,r7
 4006450:	2d400504 	addi	r21,r5,20
 4006454:	002d883a 	mov	r22,zero
 4006458:	adc00017 	ldw	r23,0(r21)
 400645c:	880b883a 	mov	r5,r17
 4006460:	ad400104 	addi	r21,r21,4
 4006464:	b93fffcc 	andi	r4,r23,65535
 4006468:	400a9f80 	call	400a9f8 <__mulsi3>
 400646c:	b808d43a 	srli	r4,r23,16
 4006470:	880b883a 	mov	r5,r17
 4006474:	1421883a 	add	r16,r2,r16
 4006478:	400a9f80 	call	400a9f8 <__mulsi3>
 400647c:	800ed43a 	srli	r7,r16,16
 4006480:	80ffffcc 	andi	r3,r16,65535
 4006484:	b5800044 	addi	r22,r22,1
 4006488:	11c5883a 	add	r2,r2,r7
 400648c:	100e943a 	slli	r7,r2,16
 4006490:	1020d43a 	srli	r16,r2,16
 4006494:	38c7883a 	add	r3,r7,r3
 4006498:	a8ffff15 	stw	r3,-4(r21)
 400649c:	b4bfee16 	blt	r22,r18,4006458 <__multadd+0x44>
 40064a0:	80000926 	beq	r16,zero,40064c8 <__multadd+0xb4>
 40064a4:	98800217 	ldw	r2,8(r19)
 40064a8:	9080130e 	bge	r18,r2,40064f8 <__multadd+0xe4>
 40064ac:	90800144 	addi	r2,r18,5
 40064b0:	1085883a 	add	r2,r2,r2
 40064b4:	1085883a 	add	r2,r2,r2
 40064b8:	9885883a 	add	r2,r19,r2
 40064bc:	14000015 	stw	r16,0(r2)
 40064c0:	94800044 	addi	r18,r18,1
 40064c4:	9c800415 	stw	r18,16(r19)
 40064c8:	9805883a 	mov	r2,r19
 40064cc:	dfc00817 	ldw	ra,32(sp)
 40064d0:	ddc00717 	ldw	r23,28(sp)
 40064d4:	dd800617 	ldw	r22,24(sp)
 40064d8:	dd400517 	ldw	r21,20(sp)
 40064dc:	dd000417 	ldw	r20,16(sp)
 40064e0:	dcc00317 	ldw	r19,12(sp)
 40064e4:	dc800217 	ldw	r18,8(sp)
 40064e8:	dc400117 	ldw	r17,4(sp)
 40064ec:	dc000017 	ldw	r16,0(sp)
 40064f0:	dec00904 	addi	sp,sp,36
 40064f4:	f800283a 	ret
 40064f8:	99400117 	ldw	r5,4(r19)
 40064fc:	a009883a 	mov	r4,r20
 4006500:	29400044 	addi	r5,r5,1
 4006504:	40063440 	call	4006344 <_Balloc>
 4006508:	99800417 	ldw	r6,16(r19)
 400650c:	99400304 	addi	r5,r19,12
 4006510:	11000304 	addi	r4,r2,12
 4006514:	31800084 	addi	r6,r6,2
 4006518:	318d883a 	add	r6,r6,r6
 400651c:	318d883a 	add	r6,r6,r6
 4006520:	1023883a 	mov	r17,r2
 4006524:	4005f780 	call	4005f78 <memcpy>
 4006528:	98000a26 	beq	r19,zero,4006554 <__multadd+0x140>
 400652c:	98c00117 	ldw	r3,4(r19)
 4006530:	a0801317 	ldw	r2,76(r20)
 4006534:	18c7883a 	add	r3,r3,r3
 4006538:	18c7883a 	add	r3,r3,r3
 400653c:	10c5883a 	add	r2,r2,r3
 4006540:	10c00017 	ldw	r3,0(r2)
 4006544:	98c00015 	stw	r3,0(r19)
 4006548:	14c00015 	stw	r19,0(r2)
 400654c:	8827883a 	mov	r19,r17
 4006550:	003fd606 	br	40064ac <__multadd+0x98>
 4006554:	8827883a 	mov	r19,r17
 4006558:	003fd406 	br	40064ac <__multadd+0x98>

0400655c <__s2b>:
 400655c:	defff904 	addi	sp,sp,-28
 4006560:	dc400115 	stw	r17,4(sp)
 4006564:	dc000015 	stw	r16,0(sp)
 4006568:	2023883a 	mov	r17,r4
 400656c:	2821883a 	mov	r16,r5
 4006570:	39000204 	addi	r4,r7,8
 4006574:	01400244 	movi	r5,9
 4006578:	dcc00315 	stw	r19,12(sp)
 400657c:	dc800215 	stw	r18,8(sp)
 4006580:	dfc00615 	stw	ra,24(sp)
 4006584:	dd400515 	stw	r21,20(sp)
 4006588:	dd000415 	stw	r20,16(sp)
 400658c:	3825883a 	mov	r18,r7
 4006590:	3027883a 	mov	r19,r6
 4006594:	400a8440 	call	400a844 <__divsi3>
 4006598:	00c00044 	movi	r3,1
 400659c:	000b883a 	mov	r5,zero
 40065a0:	1880030e 	bge	r3,r2,40065b0 <__s2b+0x54>
 40065a4:	18c7883a 	add	r3,r3,r3
 40065a8:	29400044 	addi	r5,r5,1
 40065ac:	18bffd16 	blt	r3,r2,40065a4 <__s2b+0x48>
 40065b0:	8809883a 	mov	r4,r17
 40065b4:	40063440 	call	4006344 <_Balloc>
 40065b8:	d8c00717 	ldw	r3,28(sp)
 40065bc:	10c00515 	stw	r3,20(r2)
 40065c0:	00c00044 	movi	r3,1
 40065c4:	10c00415 	stw	r3,16(r2)
 40065c8:	00c00244 	movi	r3,9
 40065cc:	1cc0210e 	bge	r3,r19,4006654 <__s2b+0xf8>
 40065d0:	80eb883a 	add	r21,r16,r3
 40065d4:	a829883a 	mov	r20,r21
 40065d8:	84e1883a 	add	r16,r16,r19
 40065dc:	a1c00007 	ldb	r7,0(r20)
 40065e0:	01800284 	movi	r6,10
 40065e4:	a5000044 	addi	r20,r20,1
 40065e8:	100b883a 	mov	r5,r2
 40065ec:	39fff404 	addi	r7,r7,-48
 40065f0:	8809883a 	mov	r4,r17
 40065f4:	40064140 	call	4006414 <__multadd>
 40065f8:	a43ff81e 	bne	r20,r16,40065dc <__s2b+0x80>
 40065fc:	ace1883a 	add	r16,r21,r19
 4006600:	843ffe04 	addi	r16,r16,-8
 4006604:	9c800a0e 	bge	r19,r18,4006630 <__s2b+0xd4>
 4006608:	94e5c83a 	sub	r18,r18,r19
 400660c:	84a5883a 	add	r18,r16,r18
 4006610:	81c00007 	ldb	r7,0(r16)
 4006614:	01800284 	movi	r6,10
 4006618:	84000044 	addi	r16,r16,1
 400661c:	100b883a 	mov	r5,r2
 4006620:	39fff404 	addi	r7,r7,-48
 4006624:	8809883a 	mov	r4,r17
 4006628:	40064140 	call	4006414 <__multadd>
 400662c:	84bff81e 	bne	r16,r18,4006610 <__s2b+0xb4>
 4006630:	dfc00617 	ldw	ra,24(sp)
 4006634:	dd400517 	ldw	r21,20(sp)
 4006638:	dd000417 	ldw	r20,16(sp)
 400663c:	dcc00317 	ldw	r19,12(sp)
 4006640:	dc800217 	ldw	r18,8(sp)
 4006644:	dc400117 	ldw	r17,4(sp)
 4006648:	dc000017 	ldw	r16,0(sp)
 400664c:	dec00704 	addi	sp,sp,28
 4006650:	f800283a 	ret
 4006654:	84000284 	addi	r16,r16,10
 4006658:	1827883a 	mov	r19,r3
 400665c:	003fe906 	br	4006604 <__s2b+0xa8>

04006660 <__hi0bits>:
 4006660:	20bfffec 	andhi	r2,r4,65535
 4006664:	1000141e 	bne	r2,zero,40066b8 <__hi0bits+0x58>
 4006668:	2008943a 	slli	r4,r4,16
 400666c:	00800404 	movi	r2,16
 4006670:	20ffc02c 	andhi	r3,r4,65280
 4006674:	1800021e 	bne	r3,zero,4006680 <__hi0bits+0x20>
 4006678:	2008923a 	slli	r4,r4,8
 400667c:	10800204 	addi	r2,r2,8
 4006680:	20fc002c 	andhi	r3,r4,61440
 4006684:	1800021e 	bne	r3,zero,4006690 <__hi0bits+0x30>
 4006688:	2008913a 	slli	r4,r4,4
 400668c:	10800104 	addi	r2,r2,4
 4006690:	20f0002c 	andhi	r3,r4,49152
 4006694:	1800031e 	bne	r3,zero,40066a4 <__hi0bits+0x44>
 4006698:	2109883a 	add	r4,r4,r4
 400669c:	10800084 	addi	r2,r2,2
 40066a0:	2109883a 	add	r4,r4,r4
 40066a4:	20000316 	blt	r4,zero,40066b4 <__hi0bits+0x54>
 40066a8:	2110002c 	andhi	r4,r4,16384
 40066ac:	2000041e 	bne	r4,zero,40066c0 <__hi0bits+0x60>
 40066b0:	00800804 	movi	r2,32
 40066b4:	f800283a 	ret
 40066b8:	0005883a 	mov	r2,zero
 40066bc:	003fec06 	br	4006670 <__hi0bits+0x10>
 40066c0:	10800044 	addi	r2,r2,1
 40066c4:	f800283a 	ret

040066c8 <__lo0bits>:
 40066c8:	20c00017 	ldw	r3,0(r4)
 40066cc:	188001cc 	andi	r2,r3,7
 40066d0:	10000826 	beq	r2,zero,40066f4 <__lo0bits+0x2c>
 40066d4:	1880004c 	andi	r2,r3,1
 40066d8:	1000211e 	bne	r2,zero,4006760 <__lo0bits+0x98>
 40066dc:	1880008c 	andi	r2,r3,2
 40066e0:	1000211e 	bne	r2,zero,4006768 <__lo0bits+0xa0>
 40066e4:	1806d0ba 	srli	r3,r3,2
 40066e8:	00800084 	movi	r2,2
 40066ec:	20c00015 	stw	r3,0(r4)
 40066f0:	f800283a 	ret
 40066f4:	18bfffcc 	andi	r2,r3,65535
 40066f8:	10001326 	beq	r2,zero,4006748 <__lo0bits+0x80>
 40066fc:	0005883a 	mov	r2,zero
 4006700:	19403fcc 	andi	r5,r3,255
 4006704:	2800021e 	bne	r5,zero,4006710 <__lo0bits+0x48>
 4006708:	1806d23a 	srli	r3,r3,8
 400670c:	10800204 	addi	r2,r2,8
 4006710:	194003cc 	andi	r5,r3,15
 4006714:	2800021e 	bne	r5,zero,4006720 <__lo0bits+0x58>
 4006718:	1806d13a 	srli	r3,r3,4
 400671c:	10800104 	addi	r2,r2,4
 4006720:	194000cc 	andi	r5,r3,3
 4006724:	2800021e 	bne	r5,zero,4006730 <__lo0bits+0x68>
 4006728:	1806d0ba 	srli	r3,r3,2
 400672c:	10800084 	addi	r2,r2,2
 4006730:	1940004c 	andi	r5,r3,1
 4006734:	2800081e 	bne	r5,zero,4006758 <__lo0bits+0x90>
 4006738:	1806d07a 	srli	r3,r3,1
 400673c:	1800051e 	bne	r3,zero,4006754 <__lo0bits+0x8c>
 4006740:	00800804 	movi	r2,32
 4006744:	f800283a 	ret
 4006748:	1806d43a 	srli	r3,r3,16
 400674c:	00800404 	movi	r2,16
 4006750:	003feb06 	br	4006700 <__lo0bits+0x38>
 4006754:	10800044 	addi	r2,r2,1
 4006758:	20c00015 	stw	r3,0(r4)
 400675c:	f800283a 	ret
 4006760:	0005883a 	mov	r2,zero
 4006764:	f800283a 	ret
 4006768:	1806d07a 	srli	r3,r3,1
 400676c:	00800044 	movi	r2,1
 4006770:	20c00015 	stw	r3,0(r4)
 4006774:	f800283a 	ret

04006778 <__i2b>:
 4006778:	defffd04 	addi	sp,sp,-12
 400677c:	dc000015 	stw	r16,0(sp)
 4006780:	04000044 	movi	r16,1
 4006784:	dc400115 	stw	r17,4(sp)
 4006788:	2823883a 	mov	r17,r5
 400678c:	800b883a 	mov	r5,r16
 4006790:	dfc00215 	stw	ra,8(sp)
 4006794:	40063440 	call	4006344 <_Balloc>
 4006798:	14400515 	stw	r17,20(r2)
 400679c:	14000415 	stw	r16,16(r2)
 40067a0:	dfc00217 	ldw	ra,8(sp)
 40067a4:	dc400117 	ldw	r17,4(sp)
 40067a8:	dc000017 	ldw	r16,0(sp)
 40067ac:	dec00304 	addi	sp,sp,12
 40067b0:	f800283a 	ret

040067b4 <__multiply>:
 40067b4:	deffef04 	addi	sp,sp,-68
 40067b8:	dc400815 	stw	r17,32(sp)
 40067bc:	dc000715 	stw	r16,28(sp)
 40067c0:	34400417 	ldw	r17,16(r6)
 40067c4:	2c000417 	ldw	r16,16(r5)
 40067c8:	dd800d15 	stw	r22,52(sp)
 40067cc:	dc800915 	stw	r18,36(sp)
 40067d0:	dfc01015 	stw	ra,64(sp)
 40067d4:	df000f15 	stw	fp,60(sp)
 40067d8:	ddc00e15 	stw	r23,56(sp)
 40067dc:	dd400c15 	stw	r21,48(sp)
 40067e0:	dd000b15 	stw	r20,44(sp)
 40067e4:	dcc00a15 	stw	r19,40(sp)
 40067e8:	2825883a 	mov	r18,r5
 40067ec:	302d883a 	mov	r22,r6
 40067f0:	8440050e 	bge	r16,r17,4006808 <__multiply+0x54>
 40067f4:	8007883a 	mov	r3,r16
 40067f8:	3025883a 	mov	r18,r6
 40067fc:	8821883a 	mov	r16,r17
 4006800:	282d883a 	mov	r22,r5
 4006804:	1823883a 	mov	r17,r3
 4006808:	90800217 	ldw	r2,8(r18)
 400680c:	8447883a 	add	r3,r16,r17
 4006810:	d8c00215 	stw	r3,8(sp)
 4006814:	91400117 	ldw	r5,4(r18)
 4006818:	10c0010e 	bge	r2,r3,4006820 <__multiply+0x6c>
 400681c:	29400044 	addi	r5,r5,1
 4006820:	40063440 	call	4006344 <_Balloc>
 4006824:	d8c00217 	ldw	r3,8(sp)
 4006828:	d8800615 	stw	r2,24(sp)
 400682c:	18eb883a 	add	r21,r3,r3
 4006830:	ad6b883a 	add	r21,r21,r21
 4006834:	10c00504 	addi	r3,r2,20
 4006838:	1d6b883a 	add	r21,r3,r21
 400683c:	d8c00115 	stw	r3,4(sp)
 4006840:	dd400315 	stw	r21,12(sp)
 4006844:	1805883a 	mov	r2,r3
 4006848:	1d40042e 	bgeu	r3,r21,400685c <__multiply+0xa8>
 400684c:	d8c00317 	ldw	r3,12(sp)
 4006850:	10000015 	stw	zero,0(r2)
 4006854:	10800104 	addi	r2,r2,4
 4006858:	10fffc36 	bltu	r2,r3,400684c <__multiply+0x98>
 400685c:	8c63883a 	add	r17,r17,r17
 4006860:	b5800504 	addi	r22,r22,20
 4006864:	8c63883a 	add	r17,r17,r17
 4006868:	94800504 	addi	r18,r18,20
 400686c:	8421883a 	add	r16,r16,r16
 4006870:	b463883a 	add	r17,r22,r17
 4006874:	8421883a 	add	r16,r16,r16
 4006878:	dd800015 	stw	r22,0(sp)
 400687c:	dc800415 	stw	r18,16(sp)
 4006880:	dc400515 	stw	r17,20(sp)
 4006884:	9429883a 	add	r20,r18,r16
 4006888:	b4404f2e 	bgeu	r22,r17,40069c8 <__multiply+0x214>
 400688c:	d8c00017 	ldw	r3,0(sp)
 4006890:	1c800017 	ldw	r18,0(r3)
 4006894:	947fffcc 	andi	r17,r18,65535
 4006898:	88001e26 	beq	r17,zero,4006914 <__multiply+0x160>
 400689c:	dd800117 	ldw	r22,4(sp)
 40068a0:	dd400417 	ldw	r21,16(sp)
 40068a4:	0027883a 	mov	r19,zero
 40068a8:	ac800017 	ldw	r18,0(r21)
 40068ac:	b4000017 	ldw	r16,0(r22)
 40068b0:	880b883a 	mov	r5,r17
 40068b4:	913fffcc 	andi	r4,r18,65535
 40068b8:	400a9f80 	call	400a9f8 <__mulsi3>
 40068bc:	9008d43a 	srli	r4,r18,16
 40068c0:	84bfffcc 	andi	r18,r16,65535
 40068c4:	1485883a 	add	r2,r2,r18
 40068c8:	14e5883a 	add	r18,r2,r19
 40068cc:	8020d43a 	srli	r16,r16,16
 40068d0:	9026d43a 	srli	r19,r18,16
 40068d4:	880b883a 	mov	r5,r17
 40068d8:	400a9f80 	call	400a9f8 <__mulsi3>
 40068dc:	1405883a 	add	r2,r2,r16
 40068e0:	14e1883a 	add	r16,r2,r19
 40068e4:	90ffffcc 	andi	r3,r18,65535
 40068e8:	8024943a 	slli	r18,r16,16
 40068ec:	ad400104 	addi	r21,r21,4
 40068f0:	b005883a 	mov	r2,r22
 40068f4:	90c6b03a 	or	r3,r18,r3
 40068f8:	b0c00015 	stw	r3,0(r22)
 40068fc:	8026d43a 	srli	r19,r16,16
 4006900:	b5800104 	addi	r22,r22,4
 4006904:	ad3fe836 	bltu	r21,r20,40068a8 <__multiply+0xf4>
 4006908:	d8c00017 	ldw	r3,0(sp)
 400690c:	14c00115 	stw	r19,4(r2)
 4006910:	1c800017 	ldw	r18,0(r3)
 4006914:	9024d43a 	srli	r18,r18,16
 4006918:	90002226 	beq	r18,zero,40069a4 <__multiply+0x1f0>
 400691c:	d8c00117 	ldw	r3,4(sp)
 4006920:	dd800417 	ldw	r22,16(sp)
 4006924:	002f883a 	mov	r23,zero
 4006928:	1f000017 	ldw	fp,0(r3)
 400692c:	1823883a 	mov	r17,r3
 4006930:	182b883a 	mov	r21,r3
 4006934:	e021883a 	mov	r16,fp
 4006938:	00000106 	br	4006940 <__multiply+0x18c>
 400693c:	982b883a 	mov	r21,r19
 4006940:	b100000b 	ldhu	r4,0(r22)
 4006944:	8020d43a 	srli	r16,r16,16
 4006948:	900b883a 	mov	r5,r18
 400694c:	400a9f80 	call	400a9f8 <__mulsi3>
 4006950:	1405883a 	add	r2,r2,r16
 4006954:	15ef883a 	add	r23,r2,r23
 4006958:	b804943a 	slli	r2,r23,16
 400695c:	e0ffffcc 	andi	r3,fp,65535
 4006960:	8c400104 	addi	r17,r17,4
 4006964:	10c6b03a 	or	r3,r2,r3
 4006968:	88ffff15 	stw	r3,-4(r17)
 400696c:	b5800104 	addi	r22,r22,4
 4006970:	b13fff17 	ldw	r4,-4(r22)
 4006974:	acc00104 	addi	r19,r21,4
 4006978:	900b883a 	mov	r5,r18
 400697c:	2008d43a 	srli	r4,r4,16
 4006980:	9c000017 	ldw	r16,0(r19)
 4006984:	400a9f80 	call	400a9f8 <__mulsi3>
 4006988:	b806d43a 	srli	r3,r23,16
 400698c:	813fffcc 	andi	r4,r16,65535
 4006990:	1105883a 	add	r2,r2,r4
 4006994:	10f9883a 	add	fp,r2,r3
 4006998:	e02ed43a 	srli	r23,fp,16
 400699c:	b53fe736 	bltu	r22,r20,400693c <__multiply+0x188>
 40069a0:	af000115 	stw	fp,4(r21)
 40069a4:	d8c00017 	ldw	r3,0(sp)
 40069a8:	d9000517 	ldw	r4,20(sp)
 40069ac:	18c00104 	addi	r3,r3,4
 40069b0:	d8c00015 	stw	r3,0(sp)
 40069b4:	d8c00117 	ldw	r3,4(sp)
 40069b8:	18c00104 	addi	r3,r3,4
 40069bc:	d8c00115 	stw	r3,4(sp)
 40069c0:	d8c00017 	ldw	r3,0(sp)
 40069c4:	193fb136 	bltu	r3,r4,400688c <__multiply+0xd8>
 40069c8:	d8c00217 	ldw	r3,8(sp)
 40069cc:	00c00c0e 	bge	zero,r3,4006a00 <__multiply+0x24c>
 40069d0:	d8c00317 	ldw	r3,12(sp)
 40069d4:	18bfff17 	ldw	r2,-4(r3)
 40069d8:	1d7fff04 	addi	r21,r3,-4
 40069dc:	10000326 	beq	r2,zero,40069ec <__multiply+0x238>
 40069e0:	00000706 	br	4006a00 <__multiply+0x24c>
 40069e4:	a8800017 	ldw	r2,0(r21)
 40069e8:	1000051e 	bne	r2,zero,4006a00 <__multiply+0x24c>
 40069ec:	d8c00217 	ldw	r3,8(sp)
 40069f0:	ad7fff04 	addi	r21,r21,-4
 40069f4:	18ffffc4 	addi	r3,r3,-1
 40069f8:	d8c00215 	stw	r3,8(sp)
 40069fc:	183ff91e 	bne	r3,zero,40069e4 <__multiply+0x230>
 4006a00:	d8c00617 	ldw	r3,24(sp)
 4006a04:	d9000217 	ldw	r4,8(sp)
 4006a08:	1805883a 	mov	r2,r3
 4006a0c:	19000415 	stw	r4,16(r3)
 4006a10:	dfc01017 	ldw	ra,64(sp)
 4006a14:	df000f17 	ldw	fp,60(sp)
 4006a18:	ddc00e17 	ldw	r23,56(sp)
 4006a1c:	dd800d17 	ldw	r22,52(sp)
 4006a20:	dd400c17 	ldw	r21,48(sp)
 4006a24:	dd000b17 	ldw	r20,44(sp)
 4006a28:	dcc00a17 	ldw	r19,40(sp)
 4006a2c:	dc800917 	ldw	r18,36(sp)
 4006a30:	dc400817 	ldw	r17,32(sp)
 4006a34:	dc000717 	ldw	r16,28(sp)
 4006a38:	dec01104 	addi	sp,sp,68
 4006a3c:	f800283a 	ret

04006a40 <__pow5mult>:
 4006a40:	defffa04 	addi	sp,sp,-24
 4006a44:	dcc00315 	stw	r19,12(sp)
 4006a48:	dc000015 	stw	r16,0(sp)
 4006a4c:	dfc00515 	stw	ra,20(sp)
 4006a50:	dd000415 	stw	r20,16(sp)
 4006a54:	dc800215 	stw	r18,8(sp)
 4006a58:	dc400115 	stw	r17,4(sp)
 4006a5c:	308000cc 	andi	r2,r6,3
 4006a60:	3021883a 	mov	r16,r6
 4006a64:	2027883a 	mov	r19,r4
 4006a68:	10002f1e 	bne	r2,zero,4006b28 <__pow5mult+0xe8>
 4006a6c:	2825883a 	mov	r18,r5
 4006a70:	8021d0ba 	srai	r16,r16,2
 4006a74:	80001a26 	beq	r16,zero,4006ae0 <__pow5mult+0xa0>
 4006a78:	9c401217 	ldw	r17,72(r19)
 4006a7c:	8800061e 	bne	r17,zero,4006a98 <__pow5mult+0x58>
 4006a80:	00003406 	br	4006b54 <__pow5mult+0x114>
 4006a84:	8021d07a 	srai	r16,r16,1
 4006a88:	80001526 	beq	r16,zero,4006ae0 <__pow5mult+0xa0>
 4006a8c:	88800017 	ldw	r2,0(r17)
 4006a90:	10001c26 	beq	r2,zero,4006b04 <__pow5mult+0xc4>
 4006a94:	1023883a 	mov	r17,r2
 4006a98:	8080004c 	andi	r2,r16,1
 4006a9c:	103ff926 	beq	r2,zero,4006a84 <__pow5mult+0x44>
 4006aa0:	880d883a 	mov	r6,r17
 4006aa4:	900b883a 	mov	r5,r18
 4006aa8:	9809883a 	mov	r4,r19
 4006aac:	40067b40 	call	40067b4 <__multiply>
 4006ab0:	90001b26 	beq	r18,zero,4006b20 <__pow5mult+0xe0>
 4006ab4:	91000117 	ldw	r4,4(r18)
 4006ab8:	98c01317 	ldw	r3,76(r19)
 4006abc:	8021d07a 	srai	r16,r16,1
 4006ac0:	2109883a 	add	r4,r4,r4
 4006ac4:	2109883a 	add	r4,r4,r4
 4006ac8:	1907883a 	add	r3,r3,r4
 4006acc:	19000017 	ldw	r4,0(r3)
 4006ad0:	91000015 	stw	r4,0(r18)
 4006ad4:	1c800015 	stw	r18,0(r3)
 4006ad8:	1025883a 	mov	r18,r2
 4006adc:	803feb1e 	bne	r16,zero,4006a8c <__pow5mult+0x4c>
 4006ae0:	9005883a 	mov	r2,r18
 4006ae4:	dfc00517 	ldw	ra,20(sp)
 4006ae8:	dd000417 	ldw	r20,16(sp)
 4006aec:	dcc00317 	ldw	r19,12(sp)
 4006af0:	dc800217 	ldw	r18,8(sp)
 4006af4:	dc400117 	ldw	r17,4(sp)
 4006af8:	dc000017 	ldw	r16,0(sp)
 4006afc:	dec00604 	addi	sp,sp,24
 4006b00:	f800283a 	ret
 4006b04:	880d883a 	mov	r6,r17
 4006b08:	880b883a 	mov	r5,r17
 4006b0c:	9809883a 	mov	r4,r19
 4006b10:	40067b40 	call	40067b4 <__multiply>
 4006b14:	88800015 	stw	r2,0(r17)
 4006b18:	10000015 	stw	zero,0(r2)
 4006b1c:	003fdd06 	br	4006a94 <__pow5mult+0x54>
 4006b20:	1025883a 	mov	r18,r2
 4006b24:	003fd706 	br	4006a84 <__pow5mult+0x44>
 4006b28:	10bfffc4 	addi	r2,r2,-1
 4006b2c:	1085883a 	add	r2,r2,r2
 4006b30:	00c10074 	movhi	r3,1025
 4006b34:	18fed304 	addi	r3,r3,-1204
 4006b38:	1085883a 	add	r2,r2,r2
 4006b3c:	1885883a 	add	r2,r3,r2
 4006b40:	11800017 	ldw	r6,0(r2)
 4006b44:	000f883a 	mov	r7,zero
 4006b48:	40064140 	call	4006414 <__multadd>
 4006b4c:	1025883a 	mov	r18,r2
 4006b50:	003fc706 	br	4006a70 <__pow5mult+0x30>
 4006b54:	05000044 	movi	r20,1
 4006b58:	a00b883a 	mov	r5,r20
 4006b5c:	9809883a 	mov	r4,r19
 4006b60:	40063440 	call	4006344 <_Balloc>
 4006b64:	1023883a 	mov	r17,r2
 4006b68:	00809c44 	movi	r2,625
 4006b6c:	88800515 	stw	r2,20(r17)
 4006b70:	8d000415 	stw	r20,16(r17)
 4006b74:	9c401215 	stw	r17,72(r19)
 4006b78:	88000015 	stw	zero,0(r17)
 4006b7c:	003fc606 	br	4006a98 <__pow5mult+0x58>

04006b80 <__lshift>:
 4006b80:	defff904 	addi	sp,sp,-28
 4006b84:	dd400515 	stw	r21,20(sp)
 4006b88:	dcc00315 	stw	r19,12(sp)
 4006b8c:	302bd17a 	srai	r21,r6,5
 4006b90:	2cc00417 	ldw	r19,16(r5)
 4006b94:	28800217 	ldw	r2,8(r5)
 4006b98:	dd000415 	stw	r20,16(sp)
 4006b9c:	ace7883a 	add	r19,r21,r19
 4006ba0:	dc800215 	stw	r18,8(sp)
 4006ba4:	dc400115 	stw	r17,4(sp)
 4006ba8:	dc000015 	stw	r16,0(sp)
 4006bac:	dfc00615 	stw	ra,24(sp)
 4006bb0:	9c000044 	addi	r16,r19,1
 4006bb4:	2823883a 	mov	r17,r5
 4006bb8:	3029883a 	mov	r20,r6
 4006bbc:	2025883a 	mov	r18,r4
 4006bc0:	29400117 	ldw	r5,4(r5)
 4006bc4:	1400030e 	bge	r2,r16,4006bd4 <__lshift+0x54>
 4006bc8:	1085883a 	add	r2,r2,r2
 4006bcc:	29400044 	addi	r5,r5,1
 4006bd0:	143ffd16 	blt	r2,r16,4006bc8 <__lshift+0x48>
 4006bd4:	9009883a 	mov	r4,r18
 4006bd8:	40063440 	call	4006344 <_Balloc>
 4006bdc:	10c00504 	addi	r3,r2,20
 4006be0:	0540070e 	bge	zero,r21,4006c00 <__lshift+0x80>
 4006be4:	ad6b883a 	add	r21,r21,r21
 4006be8:	ad6b883a 	add	r21,r21,r21
 4006bec:	1809883a 	mov	r4,r3
 4006bf0:	1d47883a 	add	r3,r3,r21
 4006bf4:	20000015 	stw	zero,0(r4)
 4006bf8:	21000104 	addi	r4,r4,4
 4006bfc:	193ffd1e 	bne	r3,r4,4006bf4 <__lshift+0x74>
 4006c00:	8a000417 	ldw	r8,16(r17)
 4006c04:	89000504 	addi	r4,r17,20
 4006c08:	a18007cc 	andi	r6,r20,31
 4006c0c:	4211883a 	add	r8,r8,r8
 4006c10:	4211883a 	add	r8,r8,r8
 4006c14:	2211883a 	add	r8,r4,r8
 4006c18:	30002326 	beq	r6,zero,4006ca8 <__lshift+0x128>
 4006c1c:	02400804 	movi	r9,32
 4006c20:	4993c83a 	sub	r9,r9,r6
 4006c24:	000b883a 	mov	r5,zero
 4006c28:	21c00017 	ldw	r7,0(r4)
 4006c2c:	1815883a 	mov	r10,r3
 4006c30:	18c00104 	addi	r3,r3,4
 4006c34:	398e983a 	sll	r7,r7,r6
 4006c38:	21000104 	addi	r4,r4,4
 4006c3c:	394ab03a 	or	r5,r7,r5
 4006c40:	197fff15 	stw	r5,-4(r3)
 4006c44:	217fff17 	ldw	r5,-4(r4)
 4006c48:	2a4ad83a 	srl	r5,r5,r9
 4006c4c:	223ff636 	bltu	r4,r8,4006c28 <__lshift+0xa8>
 4006c50:	51400115 	stw	r5,4(r10)
 4006c54:	28001a1e 	bne	r5,zero,4006cc0 <__lshift+0x140>
 4006c58:	843fffc4 	addi	r16,r16,-1
 4006c5c:	14000415 	stw	r16,16(r2)
 4006c60:	88000826 	beq	r17,zero,4006c84 <__lshift+0x104>
 4006c64:	89000117 	ldw	r4,4(r17)
 4006c68:	90c01317 	ldw	r3,76(r18)
 4006c6c:	2109883a 	add	r4,r4,r4
 4006c70:	2109883a 	add	r4,r4,r4
 4006c74:	1907883a 	add	r3,r3,r4
 4006c78:	19000017 	ldw	r4,0(r3)
 4006c7c:	89000015 	stw	r4,0(r17)
 4006c80:	1c400015 	stw	r17,0(r3)
 4006c84:	dfc00617 	ldw	ra,24(sp)
 4006c88:	dd400517 	ldw	r21,20(sp)
 4006c8c:	dd000417 	ldw	r20,16(sp)
 4006c90:	dcc00317 	ldw	r19,12(sp)
 4006c94:	dc800217 	ldw	r18,8(sp)
 4006c98:	dc400117 	ldw	r17,4(sp)
 4006c9c:	dc000017 	ldw	r16,0(sp)
 4006ca0:	dec00704 	addi	sp,sp,28
 4006ca4:	f800283a 	ret
 4006ca8:	21400017 	ldw	r5,0(r4)
 4006cac:	18c00104 	addi	r3,r3,4
 4006cb0:	21000104 	addi	r4,r4,4
 4006cb4:	197fff15 	stw	r5,-4(r3)
 4006cb8:	223ffb36 	bltu	r4,r8,4006ca8 <__lshift+0x128>
 4006cbc:	003fe606 	br	4006c58 <__lshift+0xd8>
 4006cc0:	9c000084 	addi	r16,r19,2
 4006cc4:	003fe406 	br	4006c58 <__lshift+0xd8>

04006cc8 <__mcmp>:
 4006cc8:	20800417 	ldw	r2,16(r4)
 4006ccc:	28c00417 	ldw	r3,16(r5)
 4006cd0:	10c5c83a 	sub	r2,r2,r3
 4006cd4:	1000111e 	bne	r2,zero,4006d1c <__mcmp+0x54>
 4006cd8:	18c7883a 	add	r3,r3,r3
 4006cdc:	18c7883a 	add	r3,r3,r3
 4006ce0:	21000504 	addi	r4,r4,20
 4006ce4:	29400504 	addi	r5,r5,20
 4006ce8:	20c5883a 	add	r2,r4,r3
 4006cec:	28cb883a 	add	r5,r5,r3
 4006cf0:	00000106 	br	4006cf8 <__mcmp+0x30>
 4006cf4:	20800a2e 	bgeu	r4,r2,4006d20 <__mcmp+0x58>
 4006cf8:	10bfff04 	addi	r2,r2,-4
 4006cfc:	297fff04 	addi	r5,r5,-4
 4006d00:	11800017 	ldw	r6,0(r2)
 4006d04:	28c00017 	ldw	r3,0(r5)
 4006d08:	30fffa26 	beq	r6,r3,4006cf4 <__mcmp+0x2c>
 4006d0c:	30c00236 	bltu	r6,r3,4006d18 <__mcmp+0x50>
 4006d10:	00800044 	movi	r2,1
 4006d14:	f800283a 	ret
 4006d18:	00bfffc4 	movi	r2,-1
 4006d1c:	f800283a 	ret
 4006d20:	0005883a 	mov	r2,zero
 4006d24:	f800283a 	ret

04006d28 <__mdiff>:
 4006d28:	28c00417 	ldw	r3,16(r5)
 4006d2c:	30800417 	ldw	r2,16(r6)
 4006d30:	defffa04 	addi	sp,sp,-24
 4006d34:	dcc00315 	stw	r19,12(sp)
 4006d38:	dc800215 	stw	r18,8(sp)
 4006d3c:	dfc00515 	stw	ra,20(sp)
 4006d40:	dd000415 	stw	r20,16(sp)
 4006d44:	dc400115 	stw	r17,4(sp)
 4006d48:	dc000015 	stw	r16,0(sp)
 4006d4c:	1887c83a 	sub	r3,r3,r2
 4006d50:	2825883a 	mov	r18,r5
 4006d54:	3027883a 	mov	r19,r6
 4006d58:	1800141e 	bne	r3,zero,4006dac <__mdiff+0x84>
 4006d5c:	1085883a 	add	r2,r2,r2
 4006d60:	1085883a 	add	r2,r2,r2
 4006d64:	2a000504 	addi	r8,r5,20
 4006d68:	34000504 	addi	r16,r6,20
 4006d6c:	4087883a 	add	r3,r8,r2
 4006d70:	8085883a 	add	r2,r16,r2
 4006d74:	00000106 	br	4006d7c <__mdiff+0x54>
 4006d78:	40c0592e 	bgeu	r8,r3,4006ee0 <__mdiff+0x1b8>
 4006d7c:	18ffff04 	addi	r3,r3,-4
 4006d80:	10bfff04 	addi	r2,r2,-4
 4006d84:	19c00017 	ldw	r7,0(r3)
 4006d88:	11400017 	ldw	r5,0(r2)
 4006d8c:	397ffa26 	beq	r7,r5,4006d78 <__mdiff+0x50>
 4006d90:	3940592e 	bgeu	r7,r5,4006ef8 <__mdiff+0x1d0>
 4006d94:	9005883a 	mov	r2,r18
 4006d98:	4023883a 	mov	r17,r8
 4006d9c:	9825883a 	mov	r18,r19
 4006da0:	05000044 	movi	r20,1
 4006da4:	1027883a 	mov	r19,r2
 4006da8:	00000406 	br	4006dbc <__mdiff+0x94>
 4006dac:	18005616 	blt	r3,zero,4006f08 <__mdiff+0x1e0>
 4006db0:	34400504 	addi	r17,r6,20
 4006db4:	2c000504 	addi	r16,r5,20
 4006db8:	0029883a 	mov	r20,zero
 4006dbc:	91400117 	ldw	r5,4(r18)
 4006dc0:	40063440 	call	4006344 <_Balloc>
 4006dc4:	92400417 	ldw	r9,16(r18)
 4006dc8:	9b000417 	ldw	r12,16(r19)
 4006dcc:	12c00504 	addi	r11,r2,20
 4006dd0:	4a51883a 	add	r8,r9,r9
 4006dd4:	6319883a 	add	r12,r12,r12
 4006dd8:	4211883a 	add	r8,r8,r8
 4006ddc:	6319883a 	add	r12,r12,r12
 4006de0:	15000315 	stw	r20,12(r2)
 4006de4:	8211883a 	add	r8,r16,r8
 4006de8:	8b19883a 	add	r12,r17,r12
 4006dec:	0007883a 	mov	r3,zero
 4006df0:	81400017 	ldw	r5,0(r16)
 4006df4:	89c00017 	ldw	r7,0(r17)
 4006df8:	59800104 	addi	r6,r11,4
 4006dfc:	293fffcc 	andi	r4,r5,65535
 4006e00:	20c7883a 	add	r3,r4,r3
 4006e04:	393fffcc 	andi	r4,r7,65535
 4006e08:	1909c83a 	sub	r4,r3,r4
 4006e0c:	280ad43a 	srli	r5,r5,16
 4006e10:	380ed43a 	srli	r7,r7,16
 4006e14:	2007d43a 	srai	r3,r4,16
 4006e18:	213fffcc 	andi	r4,r4,65535
 4006e1c:	29cbc83a 	sub	r5,r5,r7
 4006e20:	28c7883a 	add	r3,r5,r3
 4006e24:	180a943a 	slli	r5,r3,16
 4006e28:	8c400104 	addi	r17,r17,4
 4006e2c:	84000104 	addi	r16,r16,4
 4006e30:	2908b03a 	or	r4,r5,r4
 4006e34:	59000015 	stw	r4,0(r11)
 4006e38:	1807d43a 	srai	r3,r3,16
 4006e3c:	3015883a 	mov	r10,r6
 4006e40:	3017883a 	mov	r11,r6
 4006e44:	8b3fea36 	bltu	r17,r12,4006df0 <__mdiff+0xc8>
 4006e48:	8200162e 	bgeu	r16,r8,4006ea4 <__mdiff+0x17c>
 4006e4c:	8017883a 	mov	r11,r16
 4006e50:	59400017 	ldw	r5,0(r11)
 4006e54:	31800104 	addi	r6,r6,4
 4006e58:	5ac00104 	addi	r11,r11,4
 4006e5c:	293fffcc 	andi	r4,r5,65535
 4006e60:	20c7883a 	add	r3,r4,r3
 4006e64:	280ed43a 	srli	r7,r5,16
 4006e68:	180bd43a 	srai	r5,r3,16
 4006e6c:	193fffcc 	andi	r4,r3,65535
 4006e70:	3947883a 	add	r3,r7,r5
 4006e74:	180a943a 	slli	r5,r3,16
 4006e78:	1807d43a 	srai	r3,r3,16
 4006e7c:	2908b03a 	or	r4,r5,r4
 4006e80:	313fff15 	stw	r4,-4(r6)
 4006e84:	5a3ff236 	bltu	r11,r8,4006e50 <__mdiff+0x128>
 4006e88:	0406303a 	nor	r3,zero,r16
 4006e8c:	1a07883a 	add	r3,r3,r8
 4006e90:	1806d0ba 	srli	r3,r3,2
 4006e94:	18c00044 	addi	r3,r3,1
 4006e98:	18c7883a 	add	r3,r3,r3
 4006e9c:	18c7883a 	add	r3,r3,r3
 4006ea0:	50d5883a 	add	r10,r10,r3
 4006ea4:	50ffff04 	addi	r3,r10,-4
 4006ea8:	2000041e 	bne	r4,zero,4006ebc <__mdiff+0x194>
 4006eac:	18ffff04 	addi	r3,r3,-4
 4006eb0:	19000017 	ldw	r4,0(r3)
 4006eb4:	4a7fffc4 	addi	r9,r9,-1
 4006eb8:	203ffc26 	beq	r4,zero,4006eac <__mdiff+0x184>
 4006ebc:	12400415 	stw	r9,16(r2)
 4006ec0:	dfc00517 	ldw	ra,20(sp)
 4006ec4:	dd000417 	ldw	r20,16(sp)
 4006ec8:	dcc00317 	ldw	r19,12(sp)
 4006ecc:	dc800217 	ldw	r18,8(sp)
 4006ed0:	dc400117 	ldw	r17,4(sp)
 4006ed4:	dc000017 	ldw	r16,0(sp)
 4006ed8:	dec00604 	addi	sp,sp,24
 4006edc:	f800283a 	ret
 4006ee0:	000b883a 	mov	r5,zero
 4006ee4:	40063440 	call	4006344 <_Balloc>
 4006ee8:	00c00044 	movi	r3,1
 4006eec:	10c00415 	stw	r3,16(r2)
 4006ef0:	10000515 	stw	zero,20(r2)
 4006ef4:	003ff206 	br	4006ec0 <__mdiff+0x198>
 4006ef8:	8023883a 	mov	r17,r16
 4006efc:	0029883a 	mov	r20,zero
 4006f00:	4021883a 	mov	r16,r8
 4006f04:	003fad06 	br	4006dbc <__mdiff+0x94>
 4006f08:	9005883a 	mov	r2,r18
 4006f0c:	94400504 	addi	r17,r18,20
 4006f10:	9c000504 	addi	r16,r19,20
 4006f14:	9825883a 	mov	r18,r19
 4006f18:	05000044 	movi	r20,1
 4006f1c:	1027883a 	mov	r19,r2
 4006f20:	003fa606 	br	4006dbc <__mdiff+0x94>

04006f24 <__ulp>:
 4006f24:	295ffc2c 	andhi	r5,r5,32752
 4006f28:	00bf3034 	movhi	r2,64704
 4006f2c:	2887883a 	add	r3,r5,r2
 4006f30:	00c0020e 	bge	zero,r3,4006f3c <__ulp+0x18>
 4006f34:	0005883a 	mov	r2,zero
 4006f38:	f800283a 	ret
 4006f3c:	00c7c83a 	sub	r3,zero,r3
 4006f40:	1807d53a 	srai	r3,r3,20
 4006f44:	008004c4 	movi	r2,19
 4006f48:	10c00b0e 	bge	r2,r3,4006f78 <__ulp+0x54>
 4006f4c:	18bffb04 	addi	r2,r3,-20
 4006f50:	01000784 	movi	r4,30
 4006f54:	0007883a 	mov	r3,zero
 4006f58:	20800516 	blt	r4,r2,4006f70 <__ulp+0x4c>
 4006f5c:	010007c4 	movi	r4,31
 4006f60:	2089c83a 	sub	r4,r4,r2
 4006f64:	00800044 	movi	r2,1
 4006f68:	1104983a 	sll	r2,r2,r4
 4006f6c:	f800283a 	ret
 4006f70:	00800044 	movi	r2,1
 4006f74:	f800283a 	ret
 4006f78:	01400234 	movhi	r5,8
 4006f7c:	28c7d83a 	sra	r3,r5,r3
 4006f80:	0005883a 	mov	r2,zero
 4006f84:	f800283a 	ret

04006f88 <__b2d>:
 4006f88:	defffa04 	addi	sp,sp,-24
 4006f8c:	dc000015 	stw	r16,0(sp)
 4006f90:	24000417 	ldw	r16,16(r4)
 4006f94:	dc400115 	stw	r17,4(sp)
 4006f98:	24400504 	addi	r17,r4,20
 4006f9c:	8421883a 	add	r16,r16,r16
 4006fa0:	8421883a 	add	r16,r16,r16
 4006fa4:	8c21883a 	add	r16,r17,r16
 4006fa8:	dc800215 	stw	r18,8(sp)
 4006fac:	84bfff17 	ldw	r18,-4(r16)
 4006fb0:	dd000415 	stw	r20,16(sp)
 4006fb4:	dcc00315 	stw	r19,12(sp)
 4006fb8:	9009883a 	mov	r4,r18
 4006fbc:	2829883a 	mov	r20,r5
 4006fc0:	dfc00515 	stw	ra,20(sp)
 4006fc4:	40066600 	call	4006660 <__hi0bits>
 4006fc8:	00c00804 	movi	r3,32
 4006fcc:	1889c83a 	sub	r4,r3,r2
 4006fd0:	a1000015 	stw	r4,0(r20)
 4006fd4:	01000284 	movi	r4,10
 4006fd8:	84ffff04 	addi	r19,r16,-4
 4006fdc:	20801216 	blt	r4,r2,4007028 <__b2d+0xa0>
 4006fe0:	018002c4 	movi	r6,11
 4006fe4:	308dc83a 	sub	r6,r6,r2
 4006fe8:	9186d83a 	srl	r3,r18,r6
 4006fec:	18cffc34 	orhi	r3,r3,16368
 4006ff0:	8cc0212e 	bgeu	r17,r19,4007078 <__b2d+0xf0>
 4006ff4:	813ffe17 	ldw	r4,-8(r16)
 4006ff8:	218cd83a 	srl	r6,r4,r6
 4006ffc:	10800544 	addi	r2,r2,21
 4007000:	9084983a 	sll	r2,r18,r2
 4007004:	1184b03a 	or	r2,r2,r6
 4007008:	dfc00517 	ldw	ra,20(sp)
 400700c:	dd000417 	ldw	r20,16(sp)
 4007010:	dcc00317 	ldw	r19,12(sp)
 4007014:	dc800217 	ldw	r18,8(sp)
 4007018:	dc400117 	ldw	r17,4(sp)
 400701c:	dc000017 	ldw	r16,0(sp)
 4007020:	dec00604 	addi	sp,sp,24
 4007024:	f800283a 	ret
 4007028:	8cc00f2e 	bgeu	r17,r19,4007068 <__b2d+0xe0>
 400702c:	117ffd44 	addi	r5,r2,-11
 4007030:	80bffe17 	ldw	r2,-8(r16)
 4007034:	28000e26 	beq	r5,zero,4007070 <__b2d+0xe8>
 4007038:	1949c83a 	sub	r4,r3,r5
 400703c:	9164983a 	sll	r18,r18,r5
 4007040:	1106d83a 	srl	r3,r2,r4
 4007044:	81bffe04 	addi	r6,r16,-8
 4007048:	948ffc34 	orhi	r18,r18,16368
 400704c:	90c6b03a 	or	r3,r18,r3
 4007050:	89800e2e 	bgeu	r17,r6,400708c <__b2d+0x104>
 4007054:	81bffd17 	ldw	r6,-12(r16)
 4007058:	1144983a 	sll	r2,r2,r5
 400705c:	310ad83a 	srl	r5,r6,r4
 4007060:	2884b03a 	or	r2,r5,r2
 4007064:	003fe806 	br	4007008 <__b2d+0x80>
 4007068:	10bffd44 	addi	r2,r2,-11
 400706c:	1000041e 	bne	r2,zero,4007080 <__b2d+0xf8>
 4007070:	90cffc34 	orhi	r3,r18,16368
 4007074:	003fe406 	br	4007008 <__b2d+0x80>
 4007078:	000d883a 	mov	r6,zero
 400707c:	003fdf06 	br	4006ffc <__b2d+0x74>
 4007080:	90a4983a 	sll	r18,r18,r2
 4007084:	0005883a 	mov	r2,zero
 4007088:	003ff906 	br	4007070 <__b2d+0xe8>
 400708c:	1144983a 	sll	r2,r2,r5
 4007090:	003fdd06 	br	4007008 <__b2d+0x80>

04007094 <__d2b>:
 4007094:	defff804 	addi	sp,sp,-32
 4007098:	dc000215 	stw	r16,8(sp)
 400709c:	3021883a 	mov	r16,r6
 40070a0:	dc400315 	stw	r17,12(sp)
 40070a4:	8022907a 	slli	r17,r16,1
 40070a8:	dd000615 	stw	r20,24(sp)
 40070ac:	2829883a 	mov	r20,r5
 40070b0:	01400044 	movi	r5,1
 40070b4:	dcc00515 	stw	r19,20(sp)
 40070b8:	dc800415 	stw	r18,16(sp)
 40070bc:	dfc00715 	stw	ra,28(sp)
 40070c0:	3825883a 	mov	r18,r7
 40070c4:	8822d57a 	srli	r17,r17,21
 40070c8:	40063440 	call	4006344 <_Balloc>
 40070cc:	1027883a 	mov	r19,r2
 40070d0:	00800434 	movhi	r2,16
 40070d4:	10bfffc4 	addi	r2,r2,-1
 40070d8:	808c703a 	and	r6,r16,r2
 40070dc:	88000126 	beq	r17,zero,40070e4 <__d2b+0x50>
 40070e0:	31800434 	orhi	r6,r6,16
 40070e4:	d9800015 	stw	r6,0(sp)
 40070e8:	a0002426 	beq	r20,zero,400717c <__d2b+0xe8>
 40070ec:	d9000104 	addi	r4,sp,4
 40070f0:	dd000115 	stw	r20,4(sp)
 40070f4:	40066c80 	call	40066c8 <__lo0bits>
 40070f8:	d8c00017 	ldw	r3,0(sp)
 40070fc:	10002f1e 	bne	r2,zero,40071bc <__d2b+0x128>
 4007100:	d9000117 	ldw	r4,4(sp)
 4007104:	99000515 	stw	r4,20(r19)
 4007108:	1821003a 	cmpeq	r16,r3,zero
 400710c:	01000084 	movi	r4,2
 4007110:	2421c83a 	sub	r16,r4,r16
 4007114:	98c00615 	stw	r3,24(r19)
 4007118:	9c000415 	stw	r16,16(r19)
 400711c:	88001f1e 	bne	r17,zero,400719c <__d2b+0x108>
 4007120:	10bef384 	addi	r2,r2,-1074
 4007124:	90800015 	stw	r2,0(r18)
 4007128:	00900034 	movhi	r2,16384
 400712c:	10bfffc4 	addi	r2,r2,-1
 4007130:	8085883a 	add	r2,r16,r2
 4007134:	1085883a 	add	r2,r2,r2
 4007138:	1085883a 	add	r2,r2,r2
 400713c:	9885883a 	add	r2,r19,r2
 4007140:	11000517 	ldw	r4,20(r2)
 4007144:	8020917a 	slli	r16,r16,5
 4007148:	40066600 	call	4006660 <__hi0bits>
 400714c:	d8c00817 	ldw	r3,32(sp)
 4007150:	8085c83a 	sub	r2,r16,r2
 4007154:	18800015 	stw	r2,0(r3)
 4007158:	9805883a 	mov	r2,r19
 400715c:	dfc00717 	ldw	ra,28(sp)
 4007160:	dd000617 	ldw	r20,24(sp)
 4007164:	dcc00517 	ldw	r19,20(sp)
 4007168:	dc800417 	ldw	r18,16(sp)
 400716c:	dc400317 	ldw	r17,12(sp)
 4007170:	dc000217 	ldw	r16,8(sp)
 4007174:	dec00804 	addi	sp,sp,32
 4007178:	f800283a 	ret
 400717c:	d809883a 	mov	r4,sp
 4007180:	40066c80 	call	40066c8 <__lo0bits>
 4007184:	d8c00017 	ldw	r3,0(sp)
 4007188:	04000044 	movi	r16,1
 400718c:	9c000415 	stw	r16,16(r19)
 4007190:	98c00515 	stw	r3,20(r19)
 4007194:	10800804 	addi	r2,r2,32
 4007198:	883fe126 	beq	r17,zero,4007120 <__d2b+0x8c>
 400719c:	00c00d44 	movi	r3,53
 40071a0:	8c7ef344 	addi	r17,r17,-1075
 40071a4:	88a3883a 	add	r17,r17,r2
 40071a8:	1885c83a 	sub	r2,r3,r2
 40071ac:	d8c00817 	ldw	r3,32(sp)
 40071b0:	94400015 	stw	r17,0(r18)
 40071b4:	18800015 	stw	r2,0(r3)
 40071b8:	003fe706 	br	4007158 <__d2b+0xc4>
 40071bc:	01000804 	movi	r4,32
 40071c0:	2089c83a 	sub	r4,r4,r2
 40071c4:	1908983a 	sll	r4,r3,r4
 40071c8:	d9400117 	ldw	r5,4(sp)
 40071cc:	1886d83a 	srl	r3,r3,r2
 40071d0:	2148b03a 	or	r4,r4,r5
 40071d4:	99000515 	stw	r4,20(r19)
 40071d8:	d8c00015 	stw	r3,0(sp)
 40071dc:	003fca06 	br	4007108 <__d2b+0x74>

040071e0 <__ratio>:
 40071e0:	defff904 	addi	sp,sp,-28
 40071e4:	dc400315 	stw	r17,12(sp)
 40071e8:	2823883a 	mov	r17,r5
 40071ec:	d9400104 	addi	r5,sp,4
 40071f0:	dfc00615 	stw	ra,24(sp)
 40071f4:	dcc00515 	stw	r19,20(sp)
 40071f8:	dc800415 	stw	r18,16(sp)
 40071fc:	2027883a 	mov	r19,r4
 4007200:	dc000215 	stw	r16,8(sp)
 4007204:	4006f880 	call	4006f88 <__b2d>
 4007208:	d80b883a 	mov	r5,sp
 400720c:	8809883a 	mov	r4,r17
 4007210:	1025883a 	mov	r18,r2
 4007214:	1821883a 	mov	r16,r3
 4007218:	4006f880 	call	4006f88 <__b2d>
 400721c:	8a000417 	ldw	r8,16(r17)
 4007220:	99000417 	ldw	r4,16(r19)
 4007224:	d9400117 	ldw	r5,4(sp)
 4007228:	2209c83a 	sub	r4,r4,r8
 400722c:	2010917a 	slli	r8,r4,5
 4007230:	d9000017 	ldw	r4,0(sp)
 4007234:	2909c83a 	sub	r4,r5,r4
 4007238:	4109883a 	add	r4,r8,r4
 400723c:	01000e0e 	bge	zero,r4,4007278 <__ratio+0x98>
 4007240:	2008953a 	slli	r4,r4,20
 4007244:	2421883a 	add	r16,r4,r16
 4007248:	100d883a 	mov	r6,r2
 400724c:	180f883a 	mov	r7,r3
 4007250:	9009883a 	mov	r4,r18
 4007254:	800b883a 	mov	r5,r16
 4007258:	400b2cc0 	call	400b2cc <__divdf3>
 400725c:	dfc00617 	ldw	ra,24(sp)
 4007260:	dcc00517 	ldw	r19,20(sp)
 4007264:	dc800417 	ldw	r18,16(sp)
 4007268:	dc400317 	ldw	r17,12(sp)
 400726c:	dc000217 	ldw	r16,8(sp)
 4007270:	dec00704 	addi	sp,sp,28
 4007274:	f800283a 	ret
 4007278:	2008953a 	slli	r4,r4,20
 400727c:	1907c83a 	sub	r3,r3,r4
 4007280:	003ff106 	br	4007248 <__ratio+0x68>

04007284 <_mprec_log10>:
 4007284:	defffe04 	addi	sp,sp,-8
 4007288:	dc000015 	stw	r16,0(sp)
 400728c:	dfc00115 	stw	ra,4(sp)
 4007290:	008005c4 	movi	r2,23
 4007294:	2021883a 	mov	r16,r4
 4007298:	11000d0e 	bge	r2,r4,40072d0 <_mprec_log10+0x4c>
 400729c:	0005883a 	mov	r2,zero
 40072a0:	00cffc34 	movhi	r3,16368
 40072a4:	843fffc4 	addi	r16,r16,-1
 40072a8:	000d883a 	mov	r6,zero
 40072ac:	01d00934 	movhi	r7,16420
 40072b0:	1009883a 	mov	r4,r2
 40072b4:	180b883a 	mov	r5,r3
 40072b8:	400bef40 	call	400bef4 <__muldf3>
 40072bc:	803ff91e 	bne	r16,zero,40072a4 <_mprec_log10+0x20>
 40072c0:	dfc00117 	ldw	ra,4(sp)
 40072c4:	dc000017 	ldw	r16,0(sp)
 40072c8:	dec00204 	addi	sp,sp,8
 40072cc:	f800283a 	ret
 40072d0:	202090fa 	slli	r16,r4,3
 40072d4:	00810074 	movhi	r2,1025
 40072d8:	10beea04 	addi	r2,r2,-1112
 40072dc:	1421883a 	add	r16,r2,r16
 40072e0:	80800017 	ldw	r2,0(r16)
 40072e4:	80c00117 	ldw	r3,4(r16)
 40072e8:	dfc00117 	ldw	ra,4(sp)
 40072ec:	dc000017 	ldw	r16,0(sp)
 40072f0:	dec00204 	addi	sp,sp,8
 40072f4:	f800283a 	ret

040072f8 <__copybits>:
 40072f8:	297fffc4 	addi	r5,r5,-1
 40072fc:	280fd17a 	srai	r7,r5,5
 4007300:	30c00417 	ldw	r3,16(r6)
 4007304:	30800504 	addi	r2,r6,20
 4007308:	39c00044 	addi	r7,r7,1
 400730c:	18c7883a 	add	r3,r3,r3
 4007310:	39cf883a 	add	r7,r7,r7
 4007314:	18c7883a 	add	r3,r3,r3
 4007318:	39cf883a 	add	r7,r7,r7
 400731c:	10c7883a 	add	r3,r2,r3
 4007320:	21cf883a 	add	r7,r4,r7
 4007324:	10c00d2e 	bgeu	r2,r3,400735c <__copybits+0x64>
 4007328:	200b883a 	mov	r5,r4
 400732c:	12000017 	ldw	r8,0(r2)
 4007330:	29400104 	addi	r5,r5,4
 4007334:	10800104 	addi	r2,r2,4
 4007338:	2a3fff15 	stw	r8,-4(r5)
 400733c:	10fffb36 	bltu	r2,r3,400732c <__copybits+0x34>
 4007340:	1985c83a 	sub	r2,r3,r6
 4007344:	10bffac4 	addi	r2,r2,-21
 4007348:	1004d0ba 	srli	r2,r2,2
 400734c:	10800044 	addi	r2,r2,1
 4007350:	1085883a 	add	r2,r2,r2
 4007354:	1085883a 	add	r2,r2,r2
 4007358:	2089883a 	add	r4,r4,r2
 400735c:	21c0032e 	bgeu	r4,r7,400736c <__copybits+0x74>
 4007360:	20000015 	stw	zero,0(r4)
 4007364:	21000104 	addi	r4,r4,4
 4007368:	21fffd36 	bltu	r4,r7,4007360 <__copybits+0x68>
 400736c:	f800283a 	ret

04007370 <__any_on>:
 4007370:	20c00417 	ldw	r3,16(r4)
 4007374:	2805d17a 	srai	r2,r5,5
 4007378:	21000504 	addi	r4,r4,20
 400737c:	18800d0e 	bge	r3,r2,40073b4 <__any_on+0x44>
 4007380:	18c7883a 	add	r3,r3,r3
 4007384:	18c7883a 	add	r3,r3,r3
 4007388:	20c7883a 	add	r3,r4,r3
 400738c:	20c0192e 	bgeu	r4,r3,40073f4 <__any_on+0x84>
 4007390:	18bfff17 	ldw	r2,-4(r3)
 4007394:	18ffff04 	addi	r3,r3,-4
 4007398:	1000041e 	bne	r2,zero,40073ac <__any_on+0x3c>
 400739c:	20c0142e 	bgeu	r4,r3,40073f0 <__any_on+0x80>
 40073a0:	18ffff04 	addi	r3,r3,-4
 40073a4:	19400017 	ldw	r5,0(r3)
 40073a8:	283ffc26 	beq	r5,zero,400739c <__any_on+0x2c>
 40073ac:	00800044 	movi	r2,1
 40073b0:	f800283a 	ret
 40073b4:	10c00a0e 	bge	r2,r3,40073e0 <__any_on+0x70>
 40073b8:	1085883a 	add	r2,r2,r2
 40073bc:	1085883a 	add	r2,r2,r2
 40073c0:	294007cc 	andi	r5,r5,31
 40073c4:	2087883a 	add	r3,r4,r2
 40073c8:	283ff026 	beq	r5,zero,400738c <__any_on+0x1c>
 40073cc:	19800017 	ldw	r6,0(r3)
 40073d0:	3144d83a 	srl	r2,r6,r5
 40073d4:	114a983a 	sll	r5,r2,r5
 40073d8:	317ff41e 	bne	r6,r5,40073ac <__any_on+0x3c>
 40073dc:	003feb06 	br	400738c <__any_on+0x1c>
 40073e0:	1085883a 	add	r2,r2,r2
 40073e4:	1085883a 	add	r2,r2,r2
 40073e8:	2087883a 	add	r3,r4,r2
 40073ec:	003fe706 	br	400738c <__any_on+0x1c>
 40073f0:	f800283a 	ret
 40073f4:	0005883a 	mov	r2,zero
 40073f8:	f800283a 	ret

040073fc <_realloc_r>:
 40073fc:	defff604 	addi	sp,sp,-40
 4007400:	dc800215 	stw	r18,8(sp)
 4007404:	dfc00915 	stw	ra,36(sp)
 4007408:	df000815 	stw	fp,32(sp)
 400740c:	ddc00715 	stw	r23,28(sp)
 4007410:	dd800615 	stw	r22,24(sp)
 4007414:	dd400515 	stw	r21,20(sp)
 4007418:	dd000415 	stw	r20,16(sp)
 400741c:	dcc00315 	stw	r19,12(sp)
 4007420:	dc400115 	stw	r17,4(sp)
 4007424:	dc000015 	stw	r16,0(sp)
 4007428:	3025883a 	mov	r18,r6
 400742c:	2800b726 	beq	r5,zero,400770c <_realloc_r+0x310>
 4007430:	282b883a 	mov	r21,r5
 4007434:	2029883a 	mov	r20,r4
 4007438:	400d8600 	call	400d860 <__malloc_lock>
 400743c:	a8bfff17 	ldw	r2,-4(r21)
 4007440:	043fff04 	movi	r16,-4
 4007444:	90c002c4 	addi	r3,r18,11
 4007448:	01000584 	movi	r4,22
 400744c:	acfffe04 	addi	r19,r21,-8
 4007450:	1420703a 	and	r16,r2,r16
 4007454:	20c0332e 	bgeu	r4,r3,4007524 <_realloc_r+0x128>
 4007458:	047ffe04 	movi	r17,-8
 400745c:	1c62703a 	and	r17,r3,r17
 4007460:	8807883a 	mov	r3,r17
 4007464:	88005816 	blt	r17,zero,40075c8 <_realloc_r+0x1cc>
 4007468:	8c805736 	bltu	r17,r18,40075c8 <_realloc_r+0x1cc>
 400746c:	80c0300e 	bge	r16,r3,4007530 <_realloc_r+0x134>
 4007470:	07010074 	movhi	fp,1025
 4007474:	e7009604 	addi	fp,fp,600
 4007478:	e1c00217 	ldw	r7,8(fp)
 400747c:	9c09883a 	add	r4,r19,r16
 4007480:	22000117 	ldw	r8,4(r4)
 4007484:	21c06326 	beq	r4,r7,4007614 <_realloc_r+0x218>
 4007488:	017fff84 	movi	r5,-2
 400748c:	414a703a 	and	r5,r8,r5
 4007490:	214b883a 	add	r5,r4,r5
 4007494:	29800117 	ldw	r6,4(r5)
 4007498:	3180004c 	andi	r6,r6,1
 400749c:	30003f26 	beq	r6,zero,400759c <_realloc_r+0x1a0>
 40074a0:	1080004c 	andi	r2,r2,1
 40074a4:	10008326 	beq	r2,zero,40076b4 <_realloc_r+0x2b8>
 40074a8:	900b883a 	mov	r5,r18
 40074ac:	a009883a 	mov	r4,r20
 40074b0:	40056880 	call	4005688 <_malloc_r>
 40074b4:	1025883a 	mov	r18,r2
 40074b8:	10011e26 	beq	r2,zero,4007934 <_realloc_r+0x538>
 40074bc:	a93fff17 	ldw	r4,-4(r21)
 40074c0:	10fffe04 	addi	r3,r2,-8
 40074c4:	00bfff84 	movi	r2,-2
 40074c8:	2084703a 	and	r2,r4,r2
 40074cc:	9885883a 	add	r2,r19,r2
 40074d0:	1880ee26 	beq	r3,r2,400788c <_realloc_r+0x490>
 40074d4:	81bfff04 	addi	r6,r16,-4
 40074d8:	00800904 	movi	r2,36
 40074dc:	1180b836 	bltu	r2,r6,40077c0 <_realloc_r+0x3c4>
 40074e0:	00c004c4 	movi	r3,19
 40074e4:	19809636 	bltu	r3,r6,4007740 <_realloc_r+0x344>
 40074e8:	9005883a 	mov	r2,r18
 40074ec:	a807883a 	mov	r3,r21
 40074f0:	19000017 	ldw	r4,0(r3)
 40074f4:	11000015 	stw	r4,0(r2)
 40074f8:	19000117 	ldw	r4,4(r3)
 40074fc:	11000115 	stw	r4,4(r2)
 4007500:	18c00217 	ldw	r3,8(r3)
 4007504:	10c00215 	stw	r3,8(r2)
 4007508:	a80b883a 	mov	r5,r21
 400750c:	a009883a 	mov	r4,r20
 4007510:	4004a900 	call	4004a90 <_free_r>
 4007514:	a009883a 	mov	r4,r20
 4007518:	400d8840 	call	400d884 <__malloc_unlock>
 400751c:	9005883a 	mov	r2,r18
 4007520:	00001206 	br	400756c <_realloc_r+0x170>
 4007524:	00c00404 	movi	r3,16
 4007528:	1823883a 	mov	r17,r3
 400752c:	003fce06 	br	4007468 <_realloc_r+0x6c>
 4007530:	a825883a 	mov	r18,r21
 4007534:	8445c83a 	sub	r2,r16,r17
 4007538:	00c003c4 	movi	r3,15
 400753c:	18802636 	bltu	r3,r2,40075d8 <_realloc_r+0x1dc>
 4007540:	99800117 	ldw	r6,4(r19)
 4007544:	9c07883a 	add	r3,r19,r16
 4007548:	3180004c 	andi	r6,r6,1
 400754c:	3420b03a 	or	r16,r6,r16
 4007550:	9c000115 	stw	r16,4(r19)
 4007554:	18800117 	ldw	r2,4(r3)
 4007558:	10800054 	ori	r2,r2,1
 400755c:	18800115 	stw	r2,4(r3)
 4007560:	a009883a 	mov	r4,r20
 4007564:	400d8840 	call	400d884 <__malloc_unlock>
 4007568:	9005883a 	mov	r2,r18
 400756c:	dfc00917 	ldw	ra,36(sp)
 4007570:	df000817 	ldw	fp,32(sp)
 4007574:	ddc00717 	ldw	r23,28(sp)
 4007578:	dd800617 	ldw	r22,24(sp)
 400757c:	dd400517 	ldw	r21,20(sp)
 4007580:	dd000417 	ldw	r20,16(sp)
 4007584:	dcc00317 	ldw	r19,12(sp)
 4007588:	dc800217 	ldw	r18,8(sp)
 400758c:	dc400117 	ldw	r17,4(sp)
 4007590:	dc000017 	ldw	r16,0(sp)
 4007594:	dec00a04 	addi	sp,sp,40
 4007598:	f800283a 	ret
 400759c:	017fff04 	movi	r5,-4
 40075a0:	414a703a 	and	r5,r8,r5
 40075a4:	814d883a 	add	r6,r16,r5
 40075a8:	30c01f16 	blt	r6,r3,4007628 <_realloc_r+0x22c>
 40075ac:	20800317 	ldw	r2,12(r4)
 40075b0:	20c00217 	ldw	r3,8(r4)
 40075b4:	a825883a 	mov	r18,r21
 40075b8:	3021883a 	mov	r16,r6
 40075bc:	18800315 	stw	r2,12(r3)
 40075c0:	10c00215 	stw	r3,8(r2)
 40075c4:	003fdb06 	br	4007534 <_realloc_r+0x138>
 40075c8:	00800304 	movi	r2,12
 40075cc:	a0800015 	stw	r2,0(r20)
 40075d0:	0005883a 	mov	r2,zero
 40075d4:	003fe506 	br	400756c <_realloc_r+0x170>
 40075d8:	98c00117 	ldw	r3,4(r19)
 40075dc:	9c4b883a 	add	r5,r19,r17
 40075e0:	11000054 	ori	r4,r2,1
 40075e4:	18c0004c 	andi	r3,r3,1
 40075e8:	1c62b03a 	or	r17,r3,r17
 40075ec:	9c400115 	stw	r17,4(r19)
 40075f0:	29000115 	stw	r4,4(r5)
 40075f4:	2885883a 	add	r2,r5,r2
 40075f8:	10c00117 	ldw	r3,4(r2)
 40075fc:	29400204 	addi	r5,r5,8
 4007600:	a009883a 	mov	r4,r20
 4007604:	18c00054 	ori	r3,r3,1
 4007608:	10c00115 	stw	r3,4(r2)
 400760c:	4004a900 	call	4004a90 <_free_r>
 4007610:	003fd306 	br	4007560 <_realloc_r+0x164>
 4007614:	017fff04 	movi	r5,-4
 4007618:	414a703a 	and	r5,r8,r5
 400761c:	89800404 	addi	r6,r17,16
 4007620:	8151883a 	add	r8,r16,r5
 4007624:	4180590e 	bge	r8,r6,400778c <_realloc_r+0x390>
 4007628:	1080004c 	andi	r2,r2,1
 400762c:	103f9e1e 	bne	r2,zero,40074a8 <_realloc_r+0xac>
 4007630:	adbffe17 	ldw	r22,-8(r21)
 4007634:	00bfff04 	movi	r2,-4
 4007638:	9dadc83a 	sub	r22,r19,r22
 400763c:	b1800117 	ldw	r6,4(r22)
 4007640:	3084703a 	and	r2,r6,r2
 4007644:	20002026 	beq	r4,zero,40076c8 <_realloc_r+0x2cc>
 4007648:	80af883a 	add	r23,r16,r2
 400764c:	b96f883a 	add	r23,r23,r5
 4007650:	21c05f26 	beq	r4,r7,40077d0 <_realloc_r+0x3d4>
 4007654:	b8c01c16 	blt	r23,r3,40076c8 <_realloc_r+0x2cc>
 4007658:	20800317 	ldw	r2,12(r4)
 400765c:	20c00217 	ldw	r3,8(r4)
 4007660:	81bfff04 	addi	r6,r16,-4
 4007664:	01000904 	movi	r4,36
 4007668:	18800315 	stw	r2,12(r3)
 400766c:	10c00215 	stw	r3,8(r2)
 4007670:	b0c00217 	ldw	r3,8(r22)
 4007674:	b0800317 	ldw	r2,12(r22)
 4007678:	b4800204 	addi	r18,r22,8
 400767c:	18800315 	stw	r2,12(r3)
 4007680:	10c00215 	stw	r3,8(r2)
 4007684:	21801b36 	bltu	r4,r6,40076f4 <_realloc_r+0x2f8>
 4007688:	008004c4 	movi	r2,19
 400768c:	1180352e 	bgeu	r2,r6,4007764 <_realloc_r+0x368>
 4007690:	a8800017 	ldw	r2,0(r21)
 4007694:	b0800215 	stw	r2,8(r22)
 4007698:	a8800117 	ldw	r2,4(r21)
 400769c:	b0800315 	stw	r2,12(r22)
 40076a0:	008006c4 	movi	r2,27
 40076a4:	11807f36 	bltu	r2,r6,40078a4 <_realloc_r+0x4a8>
 40076a8:	b0800404 	addi	r2,r22,16
 40076ac:	ad400204 	addi	r21,r21,8
 40076b0:	00002d06 	br	4007768 <_realloc_r+0x36c>
 40076b4:	adbffe17 	ldw	r22,-8(r21)
 40076b8:	00bfff04 	movi	r2,-4
 40076bc:	9dadc83a 	sub	r22,r19,r22
 40076c0:	b1000117 	ldw	r4,4(r22)
 40076c4:	2084703a 	and	r2,r4,r2
 40076c8:	b03f7726 	beq	r22,zero,40074a8 <_realloc_r+0xac>
 40076cc:	80af883a 	add	r23,r16,r2
 40076d0:	b8ff7516 	blt	r23,r3,40074a8 <_realloc_r+0xac>
 40076d4:	b0800317 	ldw	r2,12(r22)
 40076d8:	b0c00217 	ldw	r3,8(r22)
 40076dc:	81bfff04 	addi	r6,r16,-4
 40076e0:	01000904 	movi	r4,36
 40076e4:	18800315 	stw	r2,12(r3)
 40076e8:	10c00215 	stw	r3,8(r2)
 40076ec:	b4800204 	addi	r18,r22,8
 40076f0:	21bfe52e 	bgeu	r4,r6,4007688 <_realloc_r+0x28c>
 40076f4:	a80b883a 	mov	r5,r21
 40076f8:	9009883a 	mov	r4,r18
 40076fc:	40060c00 	call	40060c0 <memmove>
 4007700:	b821883a 	mov	r16,r23
 4007704:	b027883a 	mov	r19,r22
 4007708:	003f8a06 	br	4007534 <_realloc_r+0x138>
 400770c:	300b883a 	mov	r5,r6
 4007710:	dfc00917 	ldw	ra,36(sp)
 4007714:	df000817 	ldw	fp,32(sp)
 4007718:	ddc00717 	ldw	r23,28(sp)
 400771c:	dd800617 	ldw	r22,24(sp)
 4007720:	dd400517 	ldw	r21,20(sp)
 4007724:	dd000417 	ldw	r20,16(sp)
 4007728:	dcc00317 	ldw	r19,12(sp)
 400772c:	dc800217 	ldw	r18,8(sp)
 4007730:	dc400117 	ldw	r17,4(sp)
 4007734:	dc000017 	ldw	r16,0(sp)
 4007738:	dec00a04 	addi	sp,sp,40
 400773c:	40056881 	jmpi	4005688 <_malloc_r>
 4007740:	a8c00017 	ldw	r3,0(r21)
 4007744:	90c00015 	stw	r3,0(r18)
 4007748:	a8c00117 	ldw	r3,4(r21)
 400774c:	90c00115 	stw	r3,4(r18)
 4007750:	00c006c4 	movi	r3,27
 4007754:	19804536 	bltu	r3,r6,400786c <_realloc_r+0x470>
 4007758:	90800204 	addi	r2,r18,8
 400775c:	a8c00204 	addi	r3,r21,8
 4007760:	003f6306 	br	40074f0 <_realloc_r+0xf4>
 4007764:	9005883a 	mov	r2,r18
 4007768:	a8c00017 	ldw	r3,0(r21)
 400776c:	b821883a 	mov	r16,r23
 4007770:	b027883a 	mov	r19,r22
 4007774:	10c00015 	stw	r3,0(r2)
 4007778:	a8c00117 	ldw	r3,4(r21)
 400777c:	10c00115 	stw	r3,4(r2)
 4007780:	a8c00217 	ldw	r3,8(r21)
 4007784:	10c00215 	stw	r3,8(r2)
 4007788:	003f6a06 	br	4007534 <_realloc_r+0x138>
 400778c:	9c67883a 	add	r19,r19,r17
 4007790:	4445c83a 	sub	r2,r8,r17
 4007794:	e4c00215 	stw	r19,8(fp)
 4007798:	10800054 	ori	r2,r2,1
 400779c:	98800115 	stw	r2,4(r19)
 40077a0:	a8bfff17 	ldw	r2,-4(r21)
 40077a4:	a009883a 	mov	r4,r20
 40077a8:	1080004c 	andi	r2,r2,1
 40077ac:	1462b03a 	or	r17,r2,r17
 40077b0:	ac7fff15 	stw	r17,-4(r21)
 40077b4:	400d8840 	call	400d884 <__malloc_unlock>
 40077b8:	a805883a 	mov	r2,r21
 40077bc:	003f6b06 	br	400756c <_realloc_r+0x170>
 40077c0:	a80b883a 	mov	r5,r21
 40077c4:	9009883a 	mov	r4,r18
 40077c8:	40060c00 	call	40060c0 <memmove>
 40077cc:	003f4e06 	br	4007508 <_realloc_r+0x10c>
 40077d0:	89000404 	addi	r4,r17,16
 40077d4:	b93fbc16 	blt	r23,r4,40076c8 <_realloc_r+0x2cc>
 40077d8:	b0800317 	ldw	r2,12(r22)
 40077dc:	b0c00217 	ldw	r3,8(r22)
 40077e0:	81bfff04 	addi	r6,r16,-4
 40077e4:	01000904 	movi	r4,36
 40077e8:	18800315 	stw	r2,12(r3)
 40077ec:	10c00215 	stw	r3,8(r2)
 40077f0:	b4800204 	addi	r18,r22,8
 40077f4:	21804336 	bltu	r4,r6,4007904 <_realloc_r+0x508>
 40077f8:	008004c4 	movi	r2,19
 40077fc:	11803f2e 	bgeu	r2,r6,40078fc <_realloc_r+0x500>
 4007800:	a8800017 	ldw	r2,0(r21)
 4007804:	b0800215 	stw	r2,8(r22)
 4007808:	a8800117 	ldw	r2,4(r21)
 400780c:	b0800315 	stw	r2,12(r22)
 4007810:	008006c4 	movi	r2,27
 4007814:	11803f36 	bltu	r2,r6,4007914 <_realloc_r+0x518>
 4007818:	b0800404 	addi	r2,r22,16
 400781c:	ad400204 	addi	r21,r21,8
 4007820:	a8c00017 	ldw	r3,0(r21)
 4007824:	10c00015 	stw	r3,0(r2)
 4007828:	a8c00117 	ldw	r3,4(r21)
 400782c:	10c00115 	stw	r3,4(r2)
 4007830:	a8c00217 	ldw	r3,8(r21)
 4007834:	10c00215 	stw	r3,8(r2)
 4007838:	b447883a 	add	r3,r22,r17
 400783c:	bc45c83a 	sub	r2,r23,r17
 4007840:	e0c00215 	stw	r3,8(fp)
 4007844:	10800054 	ori	r2,r2,1
 4007848:	18800115 	stw	r2,4(r3)
 400784c:	b0800117 	ldw	r2,4(r22)
 4007850:	a009883a 	mov	r4,r20
 4007854:	1080004c 	andi	r2,r2,1
 4007858:	1462b03a 	or	r17,r2,r17
 400785c:	b4400115 	stw	r17,4(r22)
 4007860:	400d8840 	call	400d884 <__malloc_unlock>
 4007864:	9005883a 	mov	r2,r18
 4007868:	003f4006 	br	400756c <_realloc_r+0x170>
 400786c:	a8c00217 	ldw	r3,8(r21)
 4007870:	90c00215 	stw	r3,8(r18)
 4007874:	a8c00317 	ldw	r3,12(r21)
 4007878:	90c00315 	stw	r3,12(r18)
 400787c:	30801126 	beq	r6,r2,40078c4 <_realloc_r+0x4c8>
 4007880:	90800404 	addi	r2,r18,16
 4007884:	a8c00404 	addi	r3,r21,16
 4007888:	003f1906 	br	40074f0 <_realloc_r+0xf4>
 400788c:	90ffff17 	ldw	r3,-4(r18)
 4007890:	00bfff04 	movi	r2,-4
 4007894:	a825883a 	mov	r18,r21
 4007898:	1884703a 	and	r2,r3,r2
 400789c:	80a1883a 	add	r16,r16,r2
 40078a0:	003f2406 	br	4007534 <_realloc_r+0x138>
 40078a4:	a8800217 	ldw	r2,8(r21)
 40078a8:	b0800415 	stw	r2,16(r22)
 40078ac:	a8800317 	ldw	r2,12(r21)
 40078b0:	b0800515 	stw	r2,20(r22)
 40078b4:	31000a26 	beq	r6,r4,40078e0 <_realloc_r+0x4e4>
 40078b8:	b0800604 	addi	r2,r22,24
 40078bc:	ad400404 	addi	r21,r21,16
 40078c0:	003fa906 	br	4007768 <_realloc_r+0x36c>
 40078c4:	a9000417 	ldw	r4,16(r21)
 40078c8:	90800604 	addi	r2,r18,24
 40078cc:	a8c00604 	addi	r3,r21,24
 40078d0:	91000415 	stw	r4,16(r18)
 40078d4:	a9000517 	ldw	r4,20(r21)
 40078d8:	91000515 	stw	r4,20(r18)
 40078dc:	003f0406 	br	40074f0 <_realloc_r+0xf4>
 40078e0:	a8c00417 	ldw	r3,16(r21)
 40078e4:	ad400604 	addi	r21,r21,24
 40078e8:	b0800804 	addi	r2,r22,32
 40078ec:	b0c00615 	stw	r3,24(r22)
 40078f0:	a8ffff17 	ldw	r3,-4(r21)
 40078f4:	b0c00715 	stw	r3,28(r22)
 40078f8:	003f9b06 	br	4007768 <_realloc_r+0x36c>
 40078fc:	9005883a 	mov	r2,r18
 4007900:	003fc706 	br	4007820 <_realloc_r+0x424>
 4007904:	a80b883a 	mov	r5,r21
 4007908:	9009883a 	mov	r4,r18
 400790c:	40060c00 	call	40060c0 <memmove>
 4007910:	003fc906 	br	4007838 <_realloc_r+0x43c>
 4007914:	a8800217 	ldw	r2,8(r21)
 4007918:	b0800415 	stw	r2,16(r22)
 400791c:	a8800317 	ldw	r2,12(r21)
 4007920:	b0800515 	stw	r2,20(r22)
 4007924:	31000726 	beq	r6,r4,4007944 <_realloc_r+0x548>
 4007928:	b0800604 	addi	r2,r22,24
 400792c:	ad400404 	addi	r21,r21,16
 4007930:	003fbb06 	br	4007820 <_realloc_r+0x424>
 4007934:	a009883a 	mov	r4,r20
 4007938:	400d8840 	call	400d884 <__malloc_unlock>
 400793c:	0005883a 	mov	r2,zero
 4007940:	003f0a06 	br	400756c <_realloc_r+0x170>
 4007944:	a8c00417 	ldw	r3,16(r21)
 4007948:	ad400604 	addi	r21,r21,24
 400794c:	b0800804 	addi	r2,r22,32
 4007950:	b0c00615 	stw	r3,24(r22)
 4007954:	a8ffff17 	ldw	r3,-4(r21)
 4007958:	b0c00715 	stw	r3,28(r22)
 400795c:	003fb006 	br	4007820 <_realloc_r+0x424>

04007960 <__fpclassifyd>:
 4007960:	00a00034 	movhi	r2,32768
 4007964:	10bfffc4 	addi	r2,r2,-1
 4007968:	2884703a 	and	r2,r5,r2
 400796c:	10000726 	beq	r2,zero,400798c <__fpclassifyd+0x2c>
 4007970:	00fffc34 	movhi	r3,65520
 4007974:	019ff834 	movhi	r6,32736
 4007978:	28c7883a 	add	r3,r5,r3
 400797c:	31bfffc4 	addi	r6,r6,-1
 4007980:	30c00536 	bltu	r6,r3,4007998 <__fpclassifyd+0x38>
 4007984:	00800104 	movi	r2,4
 4007988:	f800283a 	ret
 400798c:	2000021e 	bne	r4,zero,4007998 <__fpclassifyd+0x38>
 4007990:	00800084 	movi	r2,2
 4007994:	f800283a 	ret
 4007998:	00dffc34 	movhi	r3,32752
 400799c:	019ff834 	movhi	r6,32736
 40079a0:	28cb883a 	add	r5,r5,r3
 40079a4:	31bfffc4 	addi	r6,r6,-1
 40079a8:	317ff62e 	bgeu	r6,r5,4007984 <__fpclassifyd+0x24>
 40079ac:	01400434 	movhi	r5,16
 40079b0:	297fffc4 	addi	r5,r5,-1
 40079b4:	28800236 	bltu	r5,r2,40079c0 <__fpclassifyd+0x60>
 40079b8:	008000c4 	movi	r2,3
 40079bc:	f800283a 	ret
 40079c0:	10c00226 	beq	r2,r3,40079cc <__fpclassifyd+0x6c>
 40079c4:	0005883a 	mov	r2,zero
 40079c8:	f800283a 	ret
 40079cc:	2005003a 	cmpeq	r2,r4,zero
 40079d0:	f800283a 	ret

040079d4 <_sbrk_r>:
 40079d4:	defffd04 	addi	sp,sp,-12
 40079d8:	dc000015 	stw	r16,0(sp)
 40079dc:	04010074 	movhi	r16,1025
 40079e0:	dc400115 	stw	r17,4(sp)
 40079e4:	840ced04 	addi	r16,r16,13236
 40079e8:	2023883a 	mov	r17,r4
 40079ec:	2809883a 	mov	r4,r5
 40079f0:	dfc00215 	stw	ra,8(sp)
 40079f4:	80000015 	stw	zero,0(r16)
 40079f8:	400daa80 	call	400daa8 <sbrk>
 40079fc:	00ffffc4 	movi	r3,-1
 4007a00:	10c00526 	beq	r2,r3,4007a18 <_sbrk_r+0x44>
 4007a04:	dfc00217 	ldw	ra,8(sp)
 4007a08:	dc400117 	ldw	r17,4(sp)
 4007a0c:	dc000017 	ldw	r16,0(sp)
 4007a10:	dec00304 	addi	sp,sp,12
 4007a14:	f800283a 	ret
 4007a18:	80c00017 	ldw	r3,0(r16)
 4007a1c:	183ff926 	beq	r3,zero,4007a04 <_sbrk_r+0x30>
 4007a20:	88c00015 	stw	r3,0(r17)
 4007a24:	003ff706 	br	4007a04 <_sbrk_r+0x30>

04007a28 <__sread>:
 4007a28:	defffe04 	addi	sp,sp,-8
 4007a2c:	dc000015 	stw	r16,0(sp)
 4007a30:	2821883a 	mov	r16,r5
 4007a34:	2940038f 	ldh	r5,14(r5)
 4007a38:	dfc00115 	stw	ra,4(sp)
 4007a3c:	40098e40 	call	40098e4 <_read_r>
 4007a40:	10000716 	blt	r2,zero,4007a60 <__sread+0x38>
 4007a44:	80c01417 	ldw	r3,80(r16)
 4007a48:	1887883a 	add	r3,r3,r2
 4007a4c:	80c01415 	stw	r3,80(r16)
 4007a50:	dfc00117 	ldw	ra,4(sp)
 4007a54:	dc000017 	ldw	r16,0(sp)
 4007a58:	dec00204 	addi	sp,sp,8
 4007a5c:	f800283a 	ret
 4007a60:	80c0030b 	ldhu	r3,12(r16)
 4007a64:	18fbffcc 	andi	r3,r3,61439
 4007a68:	80c0030d 	sth	r3,12(r16)
 4007a6c:	dfc00117 	ldw	ra,4(sp)
 4007a70:	dc000017 	ldw	r16,0(sp)
 4007a74:	dec00204 	addi	sp,sp,8
 4007a78:	f800283a 	ret

04007a7c <__seofread>:
 4007a7c:	0005883a 	mov	r2,zero
 4007a80:	f800283a 	ret

04007a84 <__swrite>:
 4007a84:	2880030b 	ldhu	r2,12(r5)
 4007a88:	defffb04 	addi	sp,sp,-20
 4007a8c:	dcc00315 	stw	r19,12(sp)
 4007a90:	dc800215 	stw	r18,8(sp)
 4007a94:	dc400115 	stw	r17,4(sp)
 4007a98:	dc000015 	stw	r16,0(sp)
 4007a9c:	dfc00415 	stw	ra,16(sp)
 4007aa0:	10c0400c 	andi	r3,r2,256
 4007aa4:	2821883a 	mov	r16,r5
 4007aa8:	2023883a 	mov	r17,r4
 4007aac:	3025883a 	mov	r18,r6
 4007ab0:	3827883a 	mov	r19,r7
 4007ab4:	18000526 	beq	r3,zero,4007acc <__swrite+0x48>
 4007ab8:	2940038f 	ldh	r5,14(r5)
 4007abc:	01c00084 	movi	r7,2
 4007ac0:	000d883a 	mov	r6,zero
 4007ac4:	40098840 	call	4009884 <_lseek_r>
 4007ac8:	8080030b 	ldhu	r2,12(r16)
 4007acc:	8140038f 	ldh	r5,14(r16)
 4007ad0:	10bbffcc 	andi	r2,r2,61439
 4007ad4:	980f883a 	mov	r7,r19
 4007ad8:	900d883a 	mov	r6,r18
 4007adc:	8809883a 	mov	r4,r17
 4007ae0:	8080030d 	sth	r2,12(r16)
 4007ae4:	dfc00417 	ldw	ra,16(sp)
 4007ae8:	dcc00317 	ldw	r19,12(sp)
 4007aec:	dc800217 	ldw	r18,8(sp)
 4007af0:	dc400117 	ldw	r17,4(sp)
 4007af4:	dc000017 	ldw	r16,0(sp)
 4007af8:	dec00504 	addi	sp,sp,20
 4007afc:	40093381 	jmpi	4009338 <_write_r>

04007b00 <__sseek>:
 4007b00:	defffe04 	addi	sp,sp,-8
 4007b04:	dc000015 	stw	r16,0(sp)
 4007b08:	2821883a 	mov	r16,r5
 4007b0c:	2940038f 	ldh	r5,14(r5)
 4007b10:	dfc00115 	stw	ra,4(sp)
 4007b14:	40098840 	call	4009884 <_lseek_r>
 4007b18:	00ffffc4 	movi	r3,-1
 4007b1c:	10c00826 	beq	r2,r3,4007b40 <__sseek+0x40>
 4007b20:	80c0030b 	ldhu	r3,12(r16)
 4007b24:	80801415 	stw	r2,80(r16)
 4007b28:	18c40014 	ori	r3,r3,4096
 4007b2c:	80c0030d 	sth	r3,12(r16)
 4007b30:	dfc00117 	ldw	ra,4(sp)
 4007b34:	dc000017 	ldw	r16,0(sp)
 4007b38:	dec00204 	addi	sp,sp,8
 4007b3c:	f800283a 	ret
 4007b40:	80c0030b 	ldhu	r3,12(r16)
 4007b44:	18fbffcc 	andi	r3,r3,61439
 4007b48:	80c0030d 	sth	r3,12(r16)
 4007b4c:	dfc00117 	ldw	ra,4(sp)
 4007b50:	dc000017 	ldw	r16,0(sp)
 4007b54:	dec00204 	addi	sp,sp,8
 4007b58:	f800283a 	ret

04007b5c <__sclose>:
 4007b5c:	2940038f 	ldh	r5,14(r5)
 4007b60:	40093981 	jmpi	4009398 <_close_r>

04007b64 <strcmp>:
 4007b64:	2144b03a 	or	r2,r4,r5
 4007b68:	108000cc 	andi	r2,r2,3
 4007b6c:	1000171e 	bne	r2,zero,4007bcc <strcmp+0x68>
 4007b70:	20800017 	ldw	r2,0(r4)
 4007b74:	28c00017 	ldw	r3,0(r5)
 4007b78:	10c0141e 	bne	r2,r3,4007bcc <strcmp+0x68>
 4007b7c:	027fbff4 	movhi	r9,65279
 4007b80:	4a7fbfc4 	addi	r9,r9,-257
 4007b84:	0086303a 	nor	r3,zero,r2
 4007b88:	02202074 	movhi	r8,32897
 4007b8c:	1245883a 	add	r2,r2,r9
 4007b90:	42202004 	addi	r8,r8,-32640
 4007b94:	10c4703a 	and	r2,r2,r3
 4007b98:	1204703a 	and	r2,r2,r8
 4007b9c:	10000226 	beq	r2,zero,4007ba8 <strcmp+0x44>
 4007ba0:	00002306 	br	4007c30 <strcmp+0xcc>
 4007ba4:	1000221e 	bne	r2,zero,4007c30 <strcmp+0xcc>
 4007ba8:	21000104 	addi	r4,r4,4
 4007bac:	20c00017 	ldw	r3,0(r4)
 4007bb0:	29400104 	addi	r5,r5,4
 4007bb4:	29800017 	ldw	r6,0(r5)
 4007bb8:	1a4f883a 	add	r7,r3,r9
 4007bbc:	00c4303a 	nor	r2,zero,r3
 4007bc0:	3884703a 	and	r2,r7,r2
 4007bc4:	1204703a 	and	r2,r2,r8
 4007bc8:	19bff626 	beq	r3,r6,4007ba4 <strcmp+0x40>
 4007bcc:	20800003 	ldbu	r2,0(r4)
 4007bd0:	10c03fcc 	andi	r3,r2,255
 4007bd4:	18c0201c 	xori	r3,r3,128
 4007bd8:	18ffe004 	addi	r3,r3,-128
 4007bdc:	18000c26 	beq	r3,zero,4007c10 <strcmp+0xac>
 4007be0:	29800007 	ldb	r6,0(r5)
 4007be4:	19800326 	beq	r3,r6,4007bf4 <strcmp+0x90>
 4007be8:	00001306 	br	4007c38 <strcmp+0xd4>
 4007bec:	29800007 	ldb	r6,0(r5)
 4007bf0:	11800b1e 	bne	r2,r6,4007c20 <strcmp+0xbc>
 4007bf4:	21000044 	addi	r4,r4,1
 4007bf8:	20c00003 	ldbu	r3,0(r4)
 4007bfc:	29400044 	addi	r5,r5,1
 4007c00:	18803fcc 	andi	r2,r3,255
 4007c04:	1080201c 	xori	r2,r2,128
 4007c08:	10bfe004 	addi	r2,r2,-128
 4007c0c:	103ff71e 	bne	r2,zero,4007bec <strcmp+0x88>
 4007c10:	0007883a 	mov	r3,zero
 4007c14:	28800003 	ldbu	r2,0(r5)
 4007c18:	1885c83a 	sub	r2,r3,r2
 4007c1c:	f800283a 	ret
 4007c20:	28800003 	ldbu	r2,0(r5)
 4007c24:	18c03fcc 	andi	r3,r3,255
 4007c28:	1885c83a 	sub	r2,r3,r2
 4007c2c:	f800283a 	ret
 4007c30:	0005883a 	mov	r2,zero
 4007c34:	f800283a 	ret
 4007c38:	10c03fcc 	andi	r3,r2,255
 4007c3c:	003ff506 	br	4007c14 <strcmp+0xb0>

04007c40 <__sprint_r.part.0>:
 4007c40:	28801917 	ldw	r2,100(r5)
 4007c44:	defff604 	addi	sp,sp,-40
 4007c48:	dd400515 	stw	r21,20(sp)
 4007c4c:	dfc00915 	stw	ra,36(sp)
 4007c50:	df000815 	stw	fp,32(sp)
 4007c54:	ddc00715 	stw	r23,28(sp)
 4007c58:	dd800615 	stw	r22,24(sp)
 4007c5c:	dd000415 	stw	r20,16(sp)
 4007c60:	dcc00315 	stw	r19,12(sp)
 4007c64:	dc800215 	stw	r18,8(sp)
 4007c68:	dc400115 	stw	r17,4(sp)
 4007c6c:	dc000015 	stw	r16,0(sp)
 4007c70:	1088000c 	andi	r2,r2,8192
 4007c74:	302b883a 	mov	r21,r6
 4007c78:	10002e26 	beq	r2,zero,4007d34 <__sprint_r.part.0+0xf4>
 4007c7c:	30800217 	ldw	r2,8(r6)
 4007c80:	35800017 	ldw	r22,0(r6)
 4007c84:	10002926 	beq	r2,zero,4007d2c <__sprint_r.part.0+0xec>
 4007c88:	2827883a 	mov	r19,r5
 4007c8c:	2029883a 	mov	r20,r4
 4007c90:	b5c00104 	addi	r23,r22,4
 4007c94:	04bfffc4 	movi	r18,-1
 4007c98:	bc400017 	ldw	r17,0(r23)
 4007c9c:	b4000017 	ldw	r16,0(r22)
 4007ca0:	0039883a 	mov	fp,zero
 4007ca4:	8822d0ba 	srli	r17,r17,2
 4007ca8:	8800031e 	bne	r17,zero,4007cb8 <__sprint_r.part.0+0x78>
 4007cac:	00001806 	br	4007d10 <__sprint_r.part.0+0xd0>
 4007cb0:	84000104 	addi	r16,r16,4
 4007cb4:	8f001526 	beq	r17,fp,4007d0c <__sprint_r.part.0+0xcc>
 4007cb8:	81400017 	ldw	r5,0(r16)
 4007cbc:	980d883a 	mov	r6,r19
 4007cc0:	a009883a 	mov	r4,r20
 4007cc4:	40097300 	call	4009730 <_fputwc_r>
 4007cc8:	e7000044 	addi	fp,fp,1
 4007ccc:	14bff81e 	bne	r2,r18,4007cb0 <__sprint_r.part.0+0x70>
 4007cd0:	9005883a 	mov	r2,r18
 4007cd4:	a8000215 	stw	zero,8(r21)
 4007cd8:	a8000115 	stw	zero,4(r21)
 4007cdc:	dfc00917 	ldw	ra,36(sp)
 4007ce0:	df000817 	ldw	fp,32(sp)
 4007ce4:	ddc00717 	ldw	r23,28(sp)
 4007ce8:	dd800617 	ldw	r22,24(sp)
 4007cec:	dd400517 	ldw	r21,20(sp)
 4007cf0:	dd000417 	ldw	r20,16(sp)
 4007cf4:	dcc00317 	ldw	r19,12(sp)
 4007cf8:	dc800217 	ldw	r18,8(sp)
 4007cfc:	dc400117 	ldw	r17,4(sp)
 4007d00:	dc000017 	ldw	r16,0(sp)
 4007d04:	dec00a04 	addi	sp,sp,40
 4007d08:	f800283a 	ret
 4007d0c:	a8800217 	ldw	r2,8(r21)
 4007d10:	8c63883a 	add	r17,r17,r17
 4007d14:	8c63883a 	add	r17,r17,r17
 4007d18:	1445c83a 	sub	r2,r2,r17
 4007d1c:	a8800215 	stw	r2,8(r21)
 4007d20:	b5800204 	addi	r22,r22,8
 4007d24:	bdc00204 	addi	r23,r23,8
 4007d28:	103fdb1e 	bne	r2,zero,4007c98 <__sprint_r.part.0+0x58>
 4007d2c:	0005883a 	mov	r2,zero
 4007d30:	003fe806 	br	4007cd4 <__sprint_r.part.0+0x94>
 4007d34:	4004da00 	call	4004da0 <__sfvwrite_r>
 4007d38:	003fe606 	br	4007cd4 <__sprint_r.part.0+0x94>

04007d3c <__sprint_r>:
 4007d3c:	30c00217 	ldw	r3,8(r6)
 4007d40:	18000126 	beq	r3,zero,4007d48 <__sprint_r+0xc>
 4007d44:	4007c401 	jmpi	4007c40 <__sprint_r.part.0>
 4007d48:	30000115 	stw	zero,4(r6)
 4007d4c:	0005883a 	mov	r2,zero
 4007d50:	f800283a 	ret

04007d54 <___vfiprintf_internal_r>:
 4007d54:	deffca04 	addi	sp,sp,-216
 4007d58:	dd403115 	stw	r21,196(sp)
 4007d5c:	dfc03515 	stw	ra,212(sp)
 4007d60:	df003415 	stw	fp,208(sp)
 4007d64:	ddc03315 	stw	r23,204(sp)
 4007d68:	dd803215 	stw	r22,200(sp)
 4007d6c:	dd003015 	stw	r20,192(sp)
 4007d70:	dcc02f15 	stw	r19,188(sp)
 4007d74:	dc802e15 	stw	r18,184(sp)
 4007d78:	dc402d15 	stw	r17,180(sp)
 4007d7c:	dc002c15 	stw	r16,176(sp)
 4007d80:	d9002115 	stw	r4,132(sp)
 4007d84:	d9402015 	stw	r5,128(sp)
 4007d88:	d9c02215 	stw	r7,136(sp)
 4007d8c:	302b883a 	mov	r21,r6
 4007d90:	20000226 	beq	r4,zero,4007d9c <___vfiprintf_internal_r+0x48>
 4007d94:	20800e17 	ldw	r2,56(r4)
 4007d98:	1000cf26 	beq	r2,zero,40080d8 <___vfiprintf_internal_r+0x384>
 4007d9c:	d8c02017 	ldw	r3,128(sp)
 4007da0:	1880030b 	ldhu	r2,12(r3)
 4007da4:	10c8000c 	andi	r3,r2,8192
 4007da8:	1800071e 	bne	r3,zero,4007dc8 <___vfiprintf_internal_r+0x74>
 4007dac:	d9402017 	ldw	r5,128(sp)
 4007db0:	00f7ffc4 	movi	r3,-8193
 4007db4:	10880014 	ori	r2,r2,8192
 4007db8:	29001917 	ldw	r4,100(r5)
 4007dbc:	2880030d 	sth	r2,12(r5)
 4007dc0:	20c6703a 	and	r3,r4,r3
 4007dc4:	28c01915 	stw	r3,100(r5)
 4007dc8:	10c0020c 	andi	r3,r2,8
 4007dcc:	1800a526 	beq	r3,zero,4008064 <___vfiprintf_internal_r+0x310>
 4007dd0:	d9002017 	ldw	r4,128(sp)
 4007dd4:	20c00417 	ldw	r3,16(r4)
 4007dd8:	1800a226 	beq	r3,zero,4008064 <___vfiprintf_internal_r+0x310>
 4007ddc:	1080068c 	andi	r2,r2,26
 4007de0:	00c00284 	movi	r3,10
 4007de4:	10c0a826 	beq	r2,r3,4008088 <___vfiprintf_internal_r+0x334>
 4007de8:	d9001a04 	addi	r4,sp,104
 4007dec:	d94019c4 	addi	r5,sp,103
 4007df0:	04810074 	movhi	r18,1025
 4007df4:	2145c83a 	sub	r2,r4,r5
 4007df8:	94bf1c04 	addi	r18,r18,-912
 4007dfc:	d9001e15 	stw	r4,120(sp)
 4007e00:	d9401f15 	stw	r5,124(sp)
 4007e04:	dec01a15 	stw	sp,104(sp)
 4007e08:	d8001c15 	stw	zero,112(sp)
 4007e0c:	d8001b15 	stw	zero,108(sp)
 4007e10:	d811883a 	mov	r8,sp
 4007e14:	d8002615 	stw	zero,152(sp)
 4007e18:	d8002415 	stw	zero,144(sp)
 4007e1c:	d8802815 	stw	r2,160(sp)
 4007e20:	a82d883a 	mov	r22,r21
 4007e24:	b0800007 	ldb	r2,0(r22)
 4007e28:	10040d26 	beq	r2,zero,4008e60 <___vfiprintf_internal_r+0x110c>
 4007e2c:	00c00944 	movi	r3,37
 4007e30:	b029883a 	mov	r20,r22
 4007e34:	10c0021e 	bne	r2,r3,4007e40 <___vfiprintf_internal_r+0xec>
 4007e38:	00001606 	br	4007e94 <___vfiprintf_internal_r+0x140>
 4007e3c:	10c00326 	beq	r2,r3,4007e4c <___vfiprintf_internal_r+0xf8>
 4007e40:	a5000044 	addi	r20,r20,1
 4007e44:	a0800007 	ldb	r2,0(r20)
 4007e48:	103ffc1e 	bne	r2,zero,4007e3c <___vfiprintf_internal_r+0xe8>
 4007e4c:	a5a1c83a 	sub	r16,r20,r22
 4007e50:	80001026 	beq	r16,zero,4007e94 <___vfiprintf_internal_r+0x140>
 4007e54:	d8c01c17 	ldw	r3,112(sp)
 4007e58:	d8801b17 	ldw	r2,108(sp)
 4007e5c:	45800015 	stw	r22,0(r8)
 4007e60:	80c7883a 	add	r3,r16,r3
 4007e64:	10800044 	addi	r2,r2,1
 4007e68:	44000115 	stw	r16,4(r8)
 4007e6c:	d8c01c15 	stw	r3,112(sp)
 4007e70:	d8801b15 	stw	r2,108(sp)
 4007e74:	010001c4 	movi	r4,7
 4007e78:	2080750e 	bge	r4,r2,4008050 <___vfiprintf_internal_r+0x2fc>
 4007e7c:	1803951e 	bne	r3,zero,4008cd4 <___vfiprintf_internal_r+0xf80>
 4007e80:	d8c02417 	ldw	r3,144(sp)
 4007e84:	d8001b15 	stw	zero,108(sp)
 4007e88:	d811883a 	mov	r8,sp
 4007e8c:	1c07883a 	add	r3,r3,r16
 4007e90:	d8c02415 	stw	r3,144(sp)
 4007e94:	a0800007 	ldb	r2,0(r20)
 4007e98:	1002e026 	beq	r2,zero,4008a1c <___vfiprintf_internal_r+0xcc8>
 4007e9c:	a5800044 	addi	r22,r20,1
 4007ea0:	a0c00047 	ldb	r3,1(r20)
 4007ea4:	d8001d85 	stb	zero,118(sp)
 4007ea8:	0027883a 	mov	r19,zero
 4007eac:	d8002305 	stb	zero,140(sp)
 4007eb0:	043fffc4 	movi	r16,-1
 4007eb4:	d8002515 	stw	zero,148(sp)
 4007eb8:	0023883a 	mov	r17,zero
 4007ebc:	05001604 	movi	r20,88
 4007ec0:	05400244 	movi	r21,9
 4007ec4:	402f883a 	mov	r23,r8
 4007ec8:	b5800044 	addi	r22,r22,1
 4007ecc:	18bff804 	addi	r2,r3,-32
 4007ed0:	a0827736 	bltu	r20,r2,40088b0 <___vfiprintf_internal_r+0xb5c>
 4007ed4:	100490ba 	slli	r2,r2,2
 4007ed8:	01010034 	movhi	r4,1024
 4007edc:	211fbb04 	addi	r4,r4,32492
 4007ee0:	1105883a 	add	r2,r2,r4
 4007ee4:	10800017 	ldw	r2,0(r2)
 4007ee8:	1000683a 	jmp	r2
 4007eec:	040085b0 	cmpltui	r16,zero,534
 4007ef0:	040088b0 	cmpltui	r16,zero,546
 4007ef4:	040088b0 	cmpltui	r16,zero,546
 4007ef8:	040085cc 	andi	r16,zero,535
 4007efc:	040088b0 	cmpltui	r16,zero,546
 4007f00:	040088b0 	cmpltui	r16,zero,546
 4007f04:	040088b0 	cmpltui	r16,zero,546
 4007f08:	040088b0 	cmpltui	r16,zero,546
 4007f0c:	040088b0 	cmpltui	r16,zero,546
 4007f10:	040088b0 	cmpltui	r16,zero,546
 4007f14:	040087d4 	movui	r16,543
 4007f18:	040087f8 	rdprs	r16,zero,543
 4007f1c:	040088b0 	cmpltui	r16,zero,546
 4007f20:	040080f0 	cmpltui	r16,zero,515
 4007f24:	0400880c 	andi	r16,zero,544
 4007f28:	040088b0 	cmpltui	r16,zero,546
 4007f2c:	040085d8 	cmpnei	r16,zero,535
 4007f30:	040085e4 	muli	r16,zero,535
 4007f34:	040085e4 	muli	r16,zero,535
 4007f38:	040085e4 	muli	r16,zero,535
 4007f3c:	040085e4 	muli	r16,zero,535
 4007f40:	040085e4 	muli	r16,zero,535
 4007f44:	040085e4 	muli	r16,zero,535
 4007f48:	040085e4 	muli	r16,zero,535
 4007f4c:	040085e4 	muli	r16,zero,535
 4007f50:	040085e4 	muli	r16,zero,535
 4007f54:	040088b0 	cmpltui	r16,zero,546
 4007f58:	040088b0 	cmpltui	r16,zero,546
 4007f5c:	040088b0 	cmpltui	r16,zero,546
 4007f60:	040088b0 	cmpltui	r16,zero,546
 4007f64:	040088b0 	cmpltui	r16,zero,546
 4007f68:	040088b0 	cmpltui	r16,zero,546
 4007f6c:	040088b0 	cmpltui	r16,zero,546
 4007f70:	040088b0 	cmpltui	r16,zero,546
 4007f74:	040088b0 	cmpltui	r16,zero,546
 4007f78:	040088b0 	cmpltui	r16,zero,546
 4007f7c:	04008624 	muli	r16,zero,536
 4007f80:	040088b0 	cmpltui	r16,zero,546
 4007f84:	040088b0 	cmpltui	r16,zero,546
 4007f88:	040088b0 	cmpltui	r16,zero,546
 4007f8c:	040088b0 	cmpltui	r16,zero,546
 4007f90:	040088b0 	cmpltui	r16,zero,546
 4007f94:	040088b0 	cmpltui	r16,zero,546
 4007f98:	040088b0 	cmpltui	r16,zero,546
 4007f9c:	040088b0 	cmpltui	r16,zero,546
 4007fa0:	040088b0 	cmpltui	r16,zero,546
 4007fa4:	040088b0 	cmpltui	r16,zero,546
 4007fa8:	04008660 	cmpeqi	r16,zero,537
 4007fac:	040088b0 	cmpltui	r16,zero,546
 4007fb0:	040088b0 	cmpltui	r16,zero,546
 4007fb4:	040088b0 	cmpltui	r16,zero,546
 4007fb8:	040088b0 	cmpltui	r16,zero,546
 4007fbc:	040088b0 	cmpltui	r16,zero,546
 4007fc0:	040086bc 	xorhi	r16,zero,538
 4007fc4:	040088b0 	cmpltui	r16,zero,546
 4007fc8:	040088b0 	cmpltui	r16,zero,546
 4007fcc:	04008730 	cmpltui	r16,zero,540
 4007fd0:	040088b0 	cmpltui	r16,zero,546
 4007fd4:	040088b0 	cmpltui	r16,zero,546
 4007fd8:	040088b0 	cmpltui	r16,zero,546
 4007fdc:	040088b0 	cmpltui	r16,zero,546
 4007fe0:	040088b0 	cmpltui	r16,zero,546
 4007fe4:	040088b0 	cmpltui	r16,zero,546
 4007fe8:	040088b0 	cmpltui	r16,zero,546
 4007fec:	040088b0 	cmpltui	r16,zero,546
 4007ff0:	040088b0 	cmpltui	r16,zero,546
 4007ff4:	040088b0 	cmpltui	r16,zero,546
 4007ff8:	040084d8 	cmpnei	r16,zero,531
 4007ffc:	04008508 	cmpgei	r16,zero,532
 4008000:	040088b0 	cmpltui	r16,zero,546
 4008004:	040088b0 	cmpltui	r16,zero,546
 4008008:	040088b0 	cmpltui	r16,zero,546
 400800c:	04008858 	cmpnei	r16,zero,545
 4008010:	04008508 	cmpgei	r16,zero,532
 4008014:	040088b0 	cmpltui	r16,zero,546
 4008018:	040088b0 	cmpltui	r16,zero,546
 400801c:	040083b0 	cmpltui	r16,zero,526
 4008020:	040088b0 	cmpltui	r16,zero,546
 4008024:	040083c4 	movi	r16,527
 4008028:	040083fc 	xorhi	r16,zero,527
 400802c:	040080fc 	xorhi	r16,zero,515
 4008030:	040083a4 	muli	r16,zero,526
 4008034:	040088b0 	cmpltui	r16,zero,546
 4008038:	04008770 	cmpltui	r16,zero,541
 400803c:	040088b0 	cmpltui	r16,zero,546
 4008040:	040087bc 	xorhi	r16,zero,542
 4008044:	040088b0 	cmpltui	r16,zero,546
 4008048:	040088b0 	cmpltui	r16,zero,546
 400804c:	04008480 	call	400848 <__ram_exceptions_end+0x400618>
 4008050:	42000204 	addi	r8,r8,8
 4008054:	d8c02417 	ldw	r3,144(sp)
 4008058:	1c07883a 	add	r3,r3,r16
 400805c:	d8c02415 	stw	r3,144(sp)
 4008060:	003f8c06 	br	4007e94 <___vfiprintf_internal_r+0x140>
 4008064:	d9402017 	ldw	r5,128(sp)
 4008068:	d9002117 	ldw	r4,132(sp)
 400806c:	40029100 	call	4002910 <__swsetup_r>
 4008070:	1003c11e 	bne	r2,zero,4008f78 <___vfiprintf_internal_r+0x1224>
 4008074:	d9402017 	ldw	r5,128(sp)
 4008078:	00c00284 	movi	r3,10
 400807c:	2880030b 	ldhu	r2,12(r5)
 4008080:	1080068c 	andi	r2,r2,26
 4008084:	10ff581e 	bne	r2,r3,4007de8 <___vfiprintf_internal_r+0x94>
 4008088:	d8c02017 	ldw	r3,128(sp)
 400808c:	1880038f 	ldh	r2,14(r3)
 4008090:	103f5516 	blt	r2,zero,4007de8 <___vfiprintf_internal_r+0x94>
 4008094:	d9c02217 	ldw	r7,136(sp)
 4008098:	d9002117 	ldw	r4,132(sp)
 400809c:	a80d883a 	mov	r6,r21
 40080a0:	180b883a 	mov	r5,r3
 40080a4:	400927c0 	call	400927c <__sbprintf>
 40080a8:	dfc03517 	ldw	ra,212(sp)
 40080ac:	df003417 	ldw	fp,208(sp)
 40080b0:	ddc03317 	ldw	r23,204(sp)
 40080b4:	dd803217 	ldw	r22,200(sp)
 40080b8:	dd403117 	ldw	r21,196(sp)
 40080bc:	dd003017 	ldw	r20,192(sp)
 40080c0:	dcc02f17 	ldw	r19,188(sp)
 40080c4:	dc802e17 	ldw	r18,184(sp)
 40080c8:	dc402d17 	ldw	r17,180(sp)
 40080cc:	dc002c17 	ldw	r16,176(sp)
 40080d0:	dec03604 	addi	sp,sp,216
 40080d4:	f800283a 	ret
 40080d8:	400491c0 	call	400491c <__sinit>
 40080dc:	003f2f06 	br	4007d9c <___vfiprintf_internal_r+0x48>
 40080e0:	d8c02517 	ldw	r3,148(sp)
 40080e4:	d8802215 	stw	r2,136(sp)
 40080e8:	00c7c83a 	sub	r3,zero,r3
 40080ec:	d8c02515 	stw	r3,148(sp)
 40080f0:	8c400114 	ori	r17,r17,4
 40080f4:	b0c00007 	ldb	r3,0(r22)
 40080f8:	003f7306 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 40080fc:	00800c04 	movi	r2,48
 4008100:	d9402217 	ldw	r5,136(sp)
 4008104:	d8801d05 	stb	r2,116(sp)
 4008108:	00801e04 	movi	r2,120
 400810c:	d8801d45 	stb	r2,117(sp)
 4008110:	d8001d85 	stb	zero,118(sp)
 4008114:	b811883a 	mov	r8,r23
 4008118:	28c00104 	addi	r3,r5,4
 400811c:	2cc00017 	ldw	r19,0(r5)
 4008120:	0029883a 	mov	r20,zero
 4008124:	88800094 	ori	r2,r17,2
 4008128:	80032516 	blt	r16,zero,4008dc0 <___vfiprintf_internal_r+0x106c>
 400812c:	00bfdfc4 	movi	r2,-129
 4008130:	88a2703a 	and	r17,r17,r2
 4008134:	d8c02215 	stw	r3,136(sp)
 4008138:	8c400094 	ori	r17,r17,2
 400813c:	98032a1e 	bne	r19,zero,4008de8 <___vfiprintf_internal_r+0x1094>
 4008140:	00810074 	movhi	r2,1025
 4008144:	10bebb04 	addi	r2,r2,-1300
 4008148:	d8802615 	stw	r2,152(sp)
 400814c:	002b883a 	mov	r21,zero
 4008150:	8001741e 	bne	r16,zero,4008724 <___vfiprintf_internal_r+0x9d0>
 4008154:	0021883a 	mov	r16,zero
 4008158:	0029883a 	mov	r20,zero
 400815c:	ddc01a04 	addi	r23,sp,104
 4008160:	8027883a 	mov	r19,r16
 4008164:	8500010e 	bge	r16,r20,400816c <___vfiprintf_internal_r+0x418>
 4008168:	a027883a 	mov	r19,r20
 400816c:	ad403fcc 	andi	r21,r21,255
 4008170:	ad40201c 	xori	r21,r21,128
 4008174:	ad7fe004 	addi	r21,r21,-128
 4008178:	a8000126 	beq	r21,zero,4008180 <___vfiprintf_internal_r+0x42c>
 400817c:	9cc00044 	addi	r19,r19,1
 4008180:	89c0008c 	andi	r7,r17,2
 4008184:	38000126 	beq	r7,zero,400818c <___vfiprintf_internal_r+0x438>
 4008188:	9cc00084 	addi	r19,r19,2
 400818c:	88c0210c 	andi	r3,r17,132
 4008190:	1801dd1e 	bne	r3,zero,4008908 <___vfiprintf_internal_r+0xbb4>
 4008194:	d9402517 	ldw	r5,148(sp)
 4008198:	2cebc83a 	sub	r21,r5,r19
 400819c:	0541da0e 	bge	zero,r21,4008908 <___vfiprintf_internal_r+0xbb4>
 40081a0:	07000404 	movi	fp,16
 40081a4:	d8801c17 	ldw	r2,112(sp)
 40081a8:	e543be0e 	bge	fp,r21,40090a4 <___vfiprintf_internal_r+0x1350>
 40081ac:	01410074 	movhi	r5,1025
 40081b0:	297f2004 	addi	r5,r5,-896
 40081b4:	dc002715 	stw	r16,156(sp)
 40081b8:	d9801b17 	ldw	r6,108(sp)
 40081bc:	a821883a 	mov	r16,r21
 40081c0:	d9402315 	stw	r5,140(sp)
 40081c4:	028001c4 	movi	r10,7
 40081c8:	d9c02915 	stw	r7,164(sp)
 40081cc:	182b883a 	mov	r21,r3
 40081d0:	00000506 	br	40081e8 <___vfiprintf_internal_r+0x494>
 40081d4:	31000084 	addi	r4,r6,2
 40081d8:	42000204 	addi	r8,r8,8
 40081dc:	180d883a 	mov	r6,r3
 40081e0:	843ffc04 	addi	r16,r16,-16
 40081e4:	e4000f0e 	bge	fp,r16,4008224 <___vfiprintf_internal_r+0x4d0>
 40081e8:	01010074 	movhi	r4,1025
 40081ec:	10800404 	addi	r2,r2,16
 40081f0:	30c00044 	addi	r3,r6,1
 40081f4:	213f2004 	addi	r4,r4,-896
 40081f8:	41000015 	stw	r4,0(r8)
 40081fc:	47000115 	stw	fp,4(r8)
 4008200:	d8801c15 	stw	r2,112(sp)
 4008204:	d8c01b15 	stw	r3,108(sp)
 4008208:	50fff20e 	bge	r10,r3,40081d4 <___vfiprintf_internal_r+0x480>
 400820c:	1001b21e 	bne	r2,zero,40088d8 <___vfiprintf_internal_r+0xb84>
 4008210:	843ffc04 	addi	r16,r16,-16
 4008214:	000d883a 	mov	r6,zero
 4008218:	01000044 	movi	r4,1
 400821c:	d811883a 	mov	r8,sp
 4008220:	e43ff116 	blt	fp,r16,40081e8 <___vfiprintf_internal_r+0x494>
 4008224:	a807883a 	mov	r3,r21
 4008228:	d9c02917 	ldw	r7,164(sp)
 400822c:	802b883a 	mov	r21,r16
 4008230:	dc002717 	ldw	r16,156(sp)
 4008234:	d9402317 	ldw	r5,140(sp)
 4008238:	a885883a 	add	r2,r21,r2
 400823c:	45400115 	stw	r21,4(r8)
 4008240:	41400015 	stw	r5,0(r8)
 4008244:	d8801c15 	stw	r2,112(sp)
 4008248:	d9001b15 	stw	r4,108(sp)
 400824c:	014001c4 	movi	r5,7
 4008250:	29026216 	blt	r5,r4,4008bdc <___vfiprintf_internal_r+0xe88>
 4008254:	d9801d87 	ldb	r6,118(sp)
 4008258:	42000204 	addi	r8,r8,8
 400825c:	21400044 	addi	r5,r4,1
 4008260:	3001ae1e 	bne	r6,zero,400891c <___vfiprintf_internal_r+0xbc8>
 4008264:	3801bb26 	beq	r7,zero,4008954 <___vfiprintf_internal_r+0xc00>
 4008268:	d9001d04 	addi	r4,sp,116
 400826c:	10800084 	addi	r2,r2,2
 4008270:	41000015 	stw	r4,0(r8)
 4008274:	01000084 	movi	r4,2
 4008278:	41000115 	stw	r4,4(r8)
 400827c:	d8801c15 	stw	r2,112(sp)
 4008280:	d9401b15 	stw	r5,108(sp)
 4008284:	010001c4 	movi	r4,7
 4008288:	2142680e 	bge	r4,r5,4008c2c <___vfiprintf_internal_r+0xed8>
 400828c:	1002b11e 	bne	r2,zero,4008d54 <___vfiprintf_internal_r+0x1000>
 4008290:	01802004 	movi	r6,128
 4008294:	01400044 	movi	r5,1
 4008298:	0009883a 	mov	r4,zero
 400829c:	d811883a 	mov	r8,sp
 40082a0:	1981ae1e 	bne	r3,r6,400895c <___vfiprintf_internal_r+0xc08>
 40082a4:	d8c02517 	ldw	r3,148(sp)
 40082a8:	1cf9c83a 	sub	fp,r3,r19
 40082ac:	0701ab0e 	bge	zero,fp,400895c <___vfiprintf_internal_r+0xc08>
 40082b0:	05400404 	movi	r21,16
 40082b4:	af03a90e 	bge	r21,fp,400915c <___vfiprintf_internal_r+0x1408>
 40082b8:	01410074 	movhi	r5,1025
 40082bc:	297f1c04 	addi	r5,r5,-912
 40082c0:	d9402315 	stw	r5,140(sp)
 40082c4:	01c001c4 	movi	r7,7
 40082c8:	00000506 	br	40082e0 <___vfiprintf_internal_r+0x58c>
 40082cc:	21800084 	addi	r6,r4,2
 40082d0:	42000204 	addi	r8,r8,8
 40082d4:	1809883a 	mov	r4,r3
 40082d8:	e73ffc04 	addi	fp,fp,-16
 40082dc:	af000d0e 	bge	r21,fp,4008314 <___vfiprintf_internal_r+0x5c0>
 40082e0:	10800404 	addi	r2,r2,16
 40082e4:	20c00044 	addi	r3,r4,1
 40082e8:	44800015 	stw	r18,0(r8)
 40082ec:	45400115 	stw	r21,4(r8)
 40082f0:	d8801c15 	stw	r2,112(sp)
 40082f4:	d8c01b15 	stw	r3,108(sp)
 40082f8:	38fff40e 	bge	r7,r3,40082cc <___vfiprintf_internal_r+0x578>
 40082fc:	10022b1e 	bne	r2,zero,4008bac <___vfiprintf_internal_r+0xe58>
 4008300:	e73ffc04 	addi	fp,fp,-16
 4008304:	01800044 	movi	r6,1
 4008308:	0009883a 	mov	r4,zero
 400830c:	d811883a 	mov	r8,sp
 4008310:	af3ff316 	blt	r21,fp,40082e0 <___vfiprintf_internal_r+0x58c>
 4008314:	d8c02317 	ldw	r3,140(sp)
 4008318:	1705883a 	add	r2,r2,fp
 400831c:	47000115 	stw	fp,4(r8)
 4008320:	40c00015 	stw	r3,0(r8)
 4008324:	d8801c15 	stw	r2,112(sp)
 4008328:	d9801b15 	stw	r6,108(sp)
 400832c:	00c001c4 	movi	r3,7
 4008330:	19829416 	blt	r3,r6,4008d84 <___vfiprintf_internal_r+0x1030>
 4008334:	8521c83a 	sub	r16,r16,r20
 4008338:	42000204 	addi	r8,r8,8
 400833c:	31400044 	addi	r5,r6,1
 4008340:	3009883a 	mov	r4,r6
 4008344:	04018716 	blt	zero,r16,4008964 <___vfiprintf_internal_r+0xc10>
 4008348:	a085883a 	add	r2,r20,r2
 400834c:	45c00015 	stw	r23,0(r8)
 4008350:	45000115 	stw	r20,4(r8)
 4008354:	d8801c15 	stw	r2,112(sp)
 4008358:	d9401b15 	stw	r5,108(sp)
 400835c:	00c001c4 	movi	r3,7
 4008360:	1941c20e 	bge	r3,r5,4008a6c <___vfiprintf_internal_r+0xd18>
 4008364:	1002531e 	bne	r2,zero,4008cb4 <___vfiprintf_internal_r+0xf60>
 4008368:	d8001b15 	stw	zero,108(sp)
 400836c:	8c40010c 	andi	r17,r17,4
 4008370:	88023226 	beq	r17,zero,4008c3c <___vfiprintf_internal_r+0xee8>
 4008374:	d9002517 	ldw	r4,148(sp)
 4008378:	24e3c83a 	sub	r17,r4,r19
 400837c:	04432916 	blt	zero,r17,4009024 <___vfiprintf_internal_r+0x12d0>
 4008380:	d8802517 	ldw	r2,148(sp)
 4008384:	14c0010e 	bge	r2,r19,400838c <___vfiprintf_internal_r+0x638>
 4008388:	9805883a 	mov	r2,r19
 400838c:	d8c02417 	ldw	r3,144(sp)
 4008390:	1887883a 	add	r3,r3,r2
 4008394:	d8c02415 	stw	r3,144(sp)
 4008398:	d8001b15 	stw	zero,108(sp)
 400839c:	d811883a 	mov	r8,sp
 40083a0:	003ea006 	br	4007e24 <___vfiprintf_internal_r+0xd0>
 40083a4:	8c400814 	ori	r17,r17,32
 40083a8:	b0c00007 	ldb	r3,0(r22)
 40083ac:	003ec606 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 40083b0:	b0c00007 	ldb	r3,0(r22)
 40083b4:	00801b04 	movi	r2,108
 40083b8:	18832026 	beq	r3,r2,400903c <___vfiprintf_internal_r+0x12e8>
 40083bc:	8c400414 	ori	r17,r17,16
 40083c0:	003ec106 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 40083c4:	9cc03fcc 	andi	r19,r19,255
 40083c8:	b811883a 	mov	r8,r23
 40083cc:	9803981e 	bne	r19,zero,4009230 <___vfiprintf_internal_r+0x14dc>
 40083d0:	8880080c 	andi	r2,r17,32
 40083d4:	1002be26 	beq	r2,zero,4008ed0 <___vfiprintf_internal_r+0x117c>
 40083d8:	d9002217 	ldw	r4,136(sp)
 40083dc:	d9402417 	ldw	r5,144(sp)
 40083e0:	20800017 	ldw	r2,0(r4)
 40083e4:	2807d7fa 	srai	r3,r5,31
 40083e8:	21000104 	addi	r4,r4,4
 40083ec:	d9002215 	stw	r4,136(sp)
 40083f0:	11400015 	stw	r5,0(r2)
 40083f4:	10c00115 	stw	r3,4(r2)
 40083f8:	003e8a06 	br	4007e24 <___vfiprintf_internal_r+0xd0>
 40083fc:	9cc03fcc 	andi	r19,r19,255
 4008400:	b811883a 	mov	r8,r23
 4008404:	9803871e 	bne	r19,zero,4009224 <___vfiprintf_internal_r+0x14d0>
 4008408:	8880080c 	andi	r2,r17,32
 400840c:	10009a26 	beq	r2,zero,4008678 <___vfiprintf_internal_r+0x924>
 4008410:	d9002217 	ldw	r4,136(sp)
 4008414:	d8001d85 	stb	zero,118(sp)
 4008418:	20800204 	addi	r2,r4,8
 400841c:	24c00017 	ldw	r19,0(r4)
 4008420:	25000117 	ldw	r20,4(r4)
 4008424:	8002a416 	blt	r16,zero,4008eb8 <___vfiprintf_internal_r+0x1164>
 4008428:	013fdfc4 	movi	r4,-129
 400842c:	9d06b03a 	or	r3,r19,r20
 4008430:	d8802215 	stw	r2,136(sp)
 4008434:	8922703a 	and	r17,r17,r4
 4008438:	18009b26 	beq	r3,zero,40086a8 <___vfiprintf_internal_r+0x954>
 400843c:	002b883a 	mov	r21,zero
 4008440:	ddc01a04 	addi	r23,sp,104
 4008444:	9806d0fa 	srli	r3,r19,3
 4008448:	a008977a 	slli	r4,r20,29
 400844c:	a028d0fa 	srli	r20,r20,3
 4008450:	9cc001cc 	andi	r19,r19,7
 4008454:	98800c04 	addi	r2,r19,48
 4008458:	bdffffc4 	addi	r23,r23,-1
 400845c:	20e6b03a 	or	r19,r4,r3
 4008460:	b8800005 	stb	r2,0(r23)
 4008464:	9d06b03a 	or	r3,r19,r20
 4008468:	183ff61e 	bne	r3,zero,4008444 <___vfiprintf_internal_r+0x6f0>
 400846c:	88c0004c 	andi	r3,r17,1
 4008470:	18021f1e 	bne	r3,zero,4008cf0 <___vfiprintf_internal_r+0xf9c>
 4008474:	d9401e17 	ldw	r5,120(sp)
 4008478:	2de9c83a 	sub	r20,r5,r23
 400847c:	003f3806 	br	4008160 <___vfiprintf_internal_r+0x40c>
 4008480:	9cc03fcc 	andi	r19,r19,255
 4008484:	b811883a 	mov	r8,r23
 4008488:	98034f1e 	bne	r19,zero,40091c8 <___vfiprintf_internal_r+0x1474>
 400848c:	00810074 	movhi	r2,1025
 4008490:	10bebb04 	addi	r2,r2,-1300
 4008494:	d8802615 	stw	r2,152(sp)
 4008498:	8880080c 	andi	r2,r17,32
 400849c:	1000ac26 	beq	r2,zero,4008750 <___vfiprintf_internal_r+0x9fc>
 40084a0:	d9002217 	ldw	r4,136(sp)
 40084a4:	24c00017 	ldw	r19,0(r4)
 40084a8:	25000117 	ldw	r20,4(r4)
 40084ac:	21000204 	addi	r4,r4,8
 40084b0:	d9002215 	stw	r4,136(sp)
 40084b4:	8880004c 	andi	r2,r17,1
 40084b8:	1001e726 	beq	r2,zero,4008c58 <___vfiprintf_internal_r+0xf04>
 40084bc:	9d04b03a 	or	r2,r19,r20
 40084c0:	10025c1e 	bne	r2,zero,4008e34 <___vfiprintf_internal_r+0x10e0>
 40084c4:	d8001d85 	stb	zero,118(sp)
 40084c8:	80024416 	blt	r16,zero,4008ddc <___vfiprintf_internal_r+0x1088>
 40084cc:	00bfdfc4 	movi	r2,-129
 40084d0:	88a2703a 	and	r17,r17,r2
 40084d4:	003f1d06 	br	400814c <___vfiprintf_internal_r+0x3f8>
 40084d8:	d8c02217 	ldw	r3,136(sp)
 40084dc:	04c00044 	movi	r19,1
 40084e0:	b811883a 	mov	r8,r23
 40084e4:	18800017 	ldw	r2,0(r3)
 40084e8:	18c00104 	addi	r3,r3,4
 40084ec:	d8001d85 	stb	zero,118(sp)
 40084f0:	d8801005 	stb	r2,64(sp)
 40084f4:	d8c02215 	stw	r3,136(sp)
 40084f8:	9829883a 	mov	r20,r19
 40084fc:	ddc01004 	addi	r23,sp,64
 4008500:	0021883a 	mov	r16,zero
 4008504:	003f1e06 	br	4008180 <___vfiprintf_internal_r+0x42c>
 4008508:	9cc03fcc 	andi	r19,r19,255
 400850c:	b811883a 	mov	r8,r23
 4008510:	9803331e 	bne	r19,zero,40091e0 <___vfiprintf_internal_r+0x148c>
 4008514:	8880080c 	andi	r2,r17,32
 4008518:	10004826 	beq	r2,zero,400863c <___vfiprintf_internal_r+0x8e8>
 400851c:	d9002217 	ldw	r4,136(sp)
 4008520:	20800117 	ldw	r2,4(r4)
 4008524:	24c00017 	ldw	r19,0(r4)
 4008528:	21000204 	addi	r4,r4,8
 400852c:	d9002215 	stw	r4,136(sp)
 4008530:	1029883a 	mov	r20,r2
 4008534:	10024c16 	blt	r2,zero,4008e68 <___vfiprintf_internal_r+0x1114>
 4008538:	dd401d83 	ldbu	r21,118(sp)
 400853c:	80007116 	blt	r16,zero,4008704 <___vfiprintf_internal_r+0x9b0>
 4008540:	00ffdfc4 	movi	r3,-129
 4008544:	9d04b03a 	or	r2,r19,r20
 4008548:	88e2703a 	and	r17,r17,r3
 400854c:	1000d126 	beq	r2,zero,4008894 <___vfiprintf_internal_r+0xb40>
 4008550:	a0023526 	beq	r20,zero,4008e28 <___vfiprintf_internal_r+0x10d4>
 4008554:	ddc01a04 	addi	r23,sp,104
 4008558:	4039883a 	mov	fp,r8
 400855c:	9809883a 	mov	r4,r19
 4008560:	a00b883a 	mov	r5,r20
 4008564:	01800284 	movi	r6,10
 4008568:	000f883a 	mov	r7,zero
 400856c:	400a2800 	call	400a280 <__umoddi3>
 4008570:	10800c04 	addi	r2,r2,48
 4008574:	bdffffc4 	addi	r23,r23,-1
 4008578:	9809883a 	mov	r4,r19
 400857c:	a00b883a 	mov	r5,r20
 4008580:	b8800005 	stb	r2,0(r23)
 4008584:	01800284 	movi	r6,10
 4008588:	000f883a 	mov	r7,zero
 400858c:	4009c840 	call	4009c84 <__udivdi3>
 4008590:	1027883a 	mov	r19,r2
 4008594:	10c4b03a 	or	r2,r2,r3
 4008598:	1829883a 	mov	r20,r3
 400859c:	103fef1e 	bne	r2,zero,400855c <___vfiprintf_internal_r+0x808>
 40085a0:	d9001e17 	ldw	r4,120(sp)
 40085a4:	e011883a 	mov	r8,fp
 40085a8:	25e9c83a 	sub	r20,r4,r23
 40085ac:	003eec06 	br	4008160 <___vfiprintf_internal_r+0x40c>
 40085b0:	d8802307 	ldb	r2,140(sp)
 40085b4:	1002361e 	bne	r2,zero,4008e90 <___vfiprintf_internal_r+0x113c>
 40085b8:	00c00804 	movi	r3,32
 40085bc:	d8c02305 	stb	r3,140(sp)
 40085c0:	04c00044 	movi	r19,1
 40085c4:	b0c00007 	ldb	r3,0(r22)
 40085c8:	003e3f06 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 40085cc:	8c400054 	ori	r17,r17,1
 40085d0:	b0c00007 	ldb	r3,0(r22)
 40085d4:	003e3c06 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 40085d8:	8c402014 	ori	r17,r17,128
 40085dc:	b0c00007 	ldb	r3,0(r22)
 40085e0:	003e3906 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 40085e4:	dc002715 	stw	r16,156(sp)
 40085e8:	d8002515 	stw	zero,148(sp)
 40085ec:	1f3ff404 	addi	fp,r3,-48
 40085f0:	0009883a 	mov	r4,zero
 40085f4:	b021883a 	mov	r16,r22
 40085f8:	01400284 	movi	r5,10
 40085fc:	400a9f80 	call	400a9f8 <__mulsi3>
 4008600:	80c00007 	ldb	r3,0(r16)
 4008604:	e089883a 	add	r4,fp,r2
 4008608:	b5800044 	addi	r22,r22,1
 400860c:	1f3ff404 	addi	fp,r3,-48
 4008610:	b021883a 	mov	r16,r22
 4008614:	af3ff82e 	bgeu	r21,fp,40085f8 <___vfiprintf_internal_r+0x8a4>
 4008618:	d9002515 	stw	r4,148(sp)
 400861c:	dc002717 	ldw	r16,156(sp)
 4008620:	003e2a06 	br	4007ecc <___vfiprintf_internal_r+0x178>
 4008624:	9cc03fcc 	andi	r19,r19,255
 4008628:	b811883a 	mov	r8,r23
 400862c:	9802e91e 	bne	r19,zero,40091d4 <___vfiprintf_internal_r+0x1480>
 4008630:	8c400414 	ori	r17,r17,16
 4008634:	8880080c 	andi	r2,r17,32
 4008638:	103fb81e 	bne	r2,zero,400851c <___vfiprintf_internal_r+0x7c8>
 400863c:	8880040c 	andi	r2,r17,16
 4008640:	10022e26 	beq	r2,zero,4008efc <___vfiprintf_internal_r+0x11a8>
 4008644:	d9402217 	ldw	r5,136(sp)
 4008648:	2cc00017 	ldw	r19,0(r5)
 400864c:	29400104 	addi	r5,r5,4
 4008650:	d9402215 	stw	r5,136(sp)
 4008654:	9829d7fa 	srai	r20,r19,31
 4008658:	a005883a 	mov	r2,r20
 400865c:	003fb506 	br	4008534 <___vfiprintf_internal_r+0x7e0>
 4008660:	9cc03fcc 	andi	r19,r19,255
 4008664:	b811883a 	mov	r8,r23
 4008668:	9802fa1e 	bne	r19,zero,4009254 <___vfiprintf_internal_r+0x1500>
 400866c:	8c400414 	ori	r17,r17,16
 4008670:	8880080c 	andi	r2,r17,32
 4008674:	103f661e 	bne	r2,zero,4008410 <___vfiprintf_internal_r+0x6bc>
 4008678:	8880040c 	andi	r2,r17,16
 400867c:	10020626 	beq	r2,zero,4008e98 <___vfiprintf_internal_r+0x1144>
 4008680:	d9402217 	ldw	r5,136(sp)
 4008684:	d8001d85 	stb	zero,118(sp)
 4008688:	0029883a 	mov	r20,zero
 400868c:	28800104 	addi	r2,r5,4
 4008690:	2cc00017 	ldw	r19,0(r5)
 4008694:	80020816 	blt	r16,zero,4008eb8 <___vfiprintf_internal_r+0x1164>
 4008698:	00ffdfc4 	movi	r3,-129
 400869c:	d8802215 	stw	r2,136(sp)
 40086a0:	88e2703a 	and	r17,r17,r3
 40086a4:	983f651e 	bne	r19,zero,400843c <___vfiprintf_internal_r+0x6e8>
 40086a8:	002b883a 	mov	r21,zero
 40086ac:	8002cf26 	beq	r16,zero,40091ec <___vfiprintf_internal_r+0x1498>
 40086b0:	0027883a 	mov	r19,zero
 40086b4:	0029883a 	mov	r20,zero
 40086b8:	003f6106 	br	4008440 <___vfiprintf_internal_r+0x6ec>
 40086bc:	9cc03fcc 	andi	r19,r19,255
 40086c0:	b811883a 	mov	r8,r23
 40086c4:	9802e01e 	bne	r19,zero,4009248 <___vfiprintf_internal_r+0x14f4>
 40086c8:	8c400414 	ori	r17,r17,16
 40086cc:	8880080c 	andi	r2,r17,32
 40086d0:	1000641e 	bne	r2,zero,4008864 <___vfiprintf_internal_r+0xb10>
 40086d4:	8880040c 	andi	r2,r17,16
 40086d8:	1001c81e 	bne	r2,zero,4008dfc <___vfiprintf_internal_r+0x10a8>
 40086dc:	8880100c 	andi	r2,r17,64
 40086e0:	d8001d85 	stb	zero,118(sp)
 40086e4:	1002281e 	bne	r2,zero,4008f88 <___vfiprintf_internal_r+0x1234>
 40086e8:	d9002217 	ldw	r4,136(sp)
 40086ec:	0029883a 	mov	r20,zero
 40086f0:	20800104 	addi	r2,r4,4
 40086f4:	24c00017 	ldw	r19,0(r4)
 40086f8:	8001c60e 	bge	r16,zero,4008e14 <___vfiprintf_internal_r+0x10c0>
 40086fc:	d8802215 	stw	r2,136(sp)
 4008700:	002b883a 	mov	r21,zero
 4008704:	9d04b03a 	or	r2,r19,r20
 4008708:	103f911e 	bne	r2,zero,4008550 <___vfiprintf_internal_r+0x7fc>
 400870c:	00800044 	movi	r2,1
 4008710:	10803fcc 	andi	r2,r2,255
 4008714:	00c00044 	movi	r3,1
 4008718:	10c05f26 	beq	r2,r3,4008898 <___vfiprintf_internal_r+0xb44>
 400871c:	00c00084 	movi	r3,2
 4008720:	10ffe31e 	bne	r2,r3,40086b0 <___vfiprintf_internal_r+0x95c>
 4008724:	0027883a 	mov	r19,zero
 4008728:	0029883a 	mov	r20,zero
 400872c:	00015106 	br	4008c74 <___vfiprintf_internal_r+0xf20>
 4008730:	9cc03fcc 	andi	r19,r19,255
 4008734:	b811883a 	mov	r8,r23
 4008738:	9802c01e 	bne	r19,zero,400923c <___vfiprintf_internal_r+0x14e8>
 400873c:	01410074 	movhi	r5,1025
 4008740:	297eb604 	addi	r5,r5,-1320
 4008744:	d9402615 	stw	r5,152(sp)
 4008748:	8880080c 	andi	r2,r17,32
 400874c:	103f541e 	bne	r2,zero,40084a0 <___vfiprintf_internal_r+0x74c>
 4008750:	8880040c 	andi	r2,r17,16
 4008754:	1001f226 	beq	r2,zero,4008f20 <___vfiprintf_internal_r+0x11cc>
 4008758:	d9402217 	ldw	r5,136(sp)
 400875c:	0029883a 	mov	r20,zero
 4008760:	2cc00017 	ldw	r19,0(r5)
 4008764:	29400104 	addi	r5,r5,4
 4008768:	d9402215 	stw	r5,136(sp)
 400876c:	003f5106 	br	40084b4 <___vfiprintf_internal_r+0x760>
 4008770:	d8c02217 	ldw	r3,136(sp)
 4008774:	b811883a 	mov	r8,r23
 4008778:	d8001d85 	stb	zero,118(sp)
 400877c:	1dc00017 	ldw	r23,0(r3)
 4008780:	1f000104 	addi	fp,r3,4
 4008784:	b8025926 	beq	r23,zero,40090ec <___vfiprintf_internal_r+0x1398>
 4008788:	80023316 	blt	r16,zero,4009058 <___vfiprintf_internal_r+0x1304>
 400878c:	800d883a 	mov	r6,r16
 4008790:	000b883a 	mov	r5,zero
 4008794:	b809883a 	mov	r4,r23
 4008798:	da002a15 	stw	r8,168(sp)
 400879c:	4005e940 	call	4005e94 <memchr>
 40087a0:	da002a17 	ldw	r8,168(sp)
 40087a4:	10026826 	beq	r2,zero,4009148 <___vfiprintf_internal_r+0x13f4>
 40087a8:	15e9c83a 	sub	r20,r2,r23
 40087ac:	dd401d83 	ldbu	r21,118(sp)
 40087b0:	df002215 	stw	fp,136(sp)
 40087b4:	0021883a 	mov	r16,zero
 40087b8:	003e6906 	br	4008160 <___vfiprintf_internal_r+0x40c>
 40087bc:	9cc03fcc 	andi	r19,r19,255
 40087c0:	b811883a 	mov	r8,r23
 40087c4:	983fc126 	beq	r19,zero,40086cc <___vfiprintf_internal_r+0x978>
 40087c8:	d8c02303 	ldbu	r3,140(sp)
 40087cc:	d8c01d85 	stb	r3,118(sp)
 40087d0:	003fbe06 	br	40086cc <___vfiprintf_internal_r+0x978>
 40087d4:	d9002217 	ldw	r4,136(sp)
 40087d8:	d9402217 	ldw	r5,136(sp)
 40087dc:	21000017 	ldw	r4,0(r4)
 40087e0:	28800104 	addi	r2,r5,4
 40087e4:	d9002515 	stw	r4,148(sp)
 40087e8:	203e3d16 	blt	r4,zero,40080e0 <___vfiprintf_internal_r+0x38c>
 40087ec:	d8802215 	stw	r2,136(sp)
 40087f0:	b0c00007 	ldb	r3,0(r22)
 40087f4:	003db406 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 40087f8:	00c00ac4 	movi	r3,43
 40087fc:	d8c02305 	stb	r3,140(sp)
 4008800:	04c00044 	movi	r19,1
 4008804:	b0c00007 	ldb	r3,0(r22)
 4008808:	003daf06 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 400880c:	b0c00007 	ldb	r3,0(r22)
 4008810:	01000a84 	movi	r4,42
 4008814:	b4000044 	addi	r16,r22,1
 4008818:	19025e26 	beq	r3,r4,4009194 <___vfiprintf_internal_r+0x1440>
 400881c:	1f3ff404 	addi	fp,r3,-48
 4008820:	0009883a 	mov	r4,zero
 4008824:	af025236 	bltu	r21,fp,4009170 <___vfiprintf_internal_r+0x141c>
 4008828:	01400284 	movi	r5,10
 400882c:	400a9f80 	call	400a9f8 <__mulsi3>
 4008830:	80c00007 	ldb	r3,0(r16)
 4008834:	1709883a 	add	r4,r2,fp
 4008838:	85800044 	addi	r22,r16,1
 400883c:	1f3ff404 	addi	fp,r3,-48
 4008840:	b021883a 	mov	r16,r22
 4008844:	af3ff82e 	bgeu	r21,fp,4008828 <___vfiprintf_internal_r+0xad4>
 4008848:	2021883a 	mov	r16,r4
 400884c:	203d9f0e 	bge	r4,zero,4007ecc <___vfiprintf_internal_r+0x178>
 4008850:	043fffc4 	movi	r16,-1
 4008854:	003d9d06 	br	4007ecc <___vfiprintf_internal_r+0x178>
 4008858:	8c401014 	ori	r17,r17,64
 400885c:	b0c00007 	ldb	r3,0(r22)
 4008860:	003d9906 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 4008864:	d9002217 	ldw	r4,136(sp)
 4008868:	d8001d85 	stb	zero,118(sp)
 400886c:	20c00204 	addi	r3,r4,8
 4008870:	24c00017 	ldw	r19,0(r4)
 4008874:	25000117 	ldw	r20,4(r4)
 4008878:	8001e716 	blt	r16,zero,4009018 <___vfiprintf_internal_r+0x12c4>
 400887c:	013fdfc4 	movi	r4,-129
 4008880:	9d04b03a 	or	r2,r19,r20
 4008884:	d8c02215 	stw	r3,136(sp)
 4008888:	8922703a 	and	r17,r17,r4
 400888c:	002b883a 	mov	r21,zero
 4008890:	103f2f1e 	bne	r2,zero,4008550 <___vfiprintf_internal_r+0x7fc>
 4008894:	803e2f26 	beq	r16,zero,4008154 <___vfiprintf_internal_r+0x400>
 4008898:	0027883a 	mov	r19,zero
 400889c:	9cc00c04 	addi	r19,r19,48
 40088a0:	dcc019c5 	stb	r19,103(sp)
 40088a4:	dd002817 	ldw	r20,160(sp)
 40088a8:	ddc019c4 	addi	r23,sp,103
 40088ac:	003e2c06 	br	4008160 <___vfiprintf_internal_r+0x40c>
 40088b0:	9cc03fcc 	andi	r19,r19,255
 40088b4:	b811883a 	mov	r8,r23
 40088b8:	9802571e 	bne	r19,zero,4009218 <___vfiprintf_internal_r+0x14c4>
 40088bc:	18005726 	beq	r3,zero,4008a1c <___vfiprintf_internal_r+0xcc8>
 40088c0:	04c00044 	movi	r19,1
 40088c4:	d8c01005 	stb	r3,64(sp)
 40088c8:	d8001d85 	stb	zero,118(sp)
 40088cc:	9829883a 	mov	r20,r19
 40088d0:	ddc01004 	addi	r23,sp,64
 40088d4:	003f0a06 	br	4008500 <___vfiprintf_internal_r+0x7ac>
 40088d8:	d9402017 	ldw	r5,128(sp)
 40088dc:	d9002117 	ldw	r4,132(sp)
 40088e0:	d9801a04 	addi	r6,sp,104
 40088e4:	da802a15 	stw	r10,168(sp)
 40088e8:	4007c400 	call	4007c40 <__sprint_r.part.0>
 40088ec:	da802a17 	ldw	r10,168(sp)
 40088f0:	1000501e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 40088f4:	d9801b17 	ldw	r6,108(sp)
 40088f8:	d8801c17 	ldw	r2,112(sp)
 40088fc:	d811883a 	mov	r8,sp
 4008900:	31000044 	addi	r4,r6,1
 4008904:	003e3606 	br	40081e0 <___vfiprintf_internal_r+0x48c>
 4008908:	d9001b17 	ldw	r4,108(sp)
 400890c:	d8801c17 	ldw	r2,112(sp)
 4008910:	21400044 	addi	r5,r4,1
 4008914:	d9801d87 	ldb	r6,118(sp)
 4008918:	303e5226 	beq	r6,zero,4008264 <___vfiprintf_internal_r+0x510>
 400891c:	01800044 	movi	r6,1
 4008920:	d9001d84 	addi	r4,sp,118
 4008924:	1185883a 	add	r2,r2,r6
 4008928:	41000015 	stw	r4,0(r8)
 400892c:	41800115 	stw	r6,4(r8)
 4008930:	d8801c15 	stw	r2,112(sp)
 4008934:	d9401b15 	stw	r5,108(sp)
 4008938:	010001c4 	movi	r4,7
 400893c:	2140b00e 	bge	r4,r5,4008c00 <___vfiprintf_internal_r+0xeac>
 4008940:	1000f61e 	bne	r2,zero,4008d1c <___vfiprintf_internal_r+0xfc8>
 4008944:	3800b31e 	bne	r7,zero,4008c14 <___vfiprintf_internal_r+0xec0>
 4008948:	0009883a 	mov	r4,zero
 400894c:	300b883a 	mov	r5,r6
 4008950:	d811883a 	mov	r8,sp
 4008954:	01802004 	movi	r6,128
 4008958:	19be5226 	beq	r3,r6,40082a4 <___vfiprintf_internal_r+0x550>
 400895c:	8521c83a 	sub	r16,r16,r20
 4008960:	043e790e 	bge	zero,r16,4008348 <___vfiprintf_internal_r+0x5f4>
 4008964:	05400404 	movi	r21,16
 4008968:	ac01b00e 	bge	r21,r16,400902c <___vfiprintf_internal_r+0x12d8>
 400896c:	01410074 	movhi	r5,1025
 4008970:	297f1c04 	addi	r5,r5,-912
 4008974:	d9402315 	stw	r5,140(sp)
 4008978:	070001c4 	movi	fp,7
 400897c:	00000506 	br	4008994 <___vfiprintf_internal_r+0xc40>
 4008980:	21400084 	addi	r5,r4,2
 4008984:	42000204 	addi	r8,r8,8
 4008988:	1809883a 	mov	r4,r3
 400898c:	843ffc04 	addi	r16,r16,-16
 4008990:	ac000d0e 	bge	r21,r16,40089c8 <___vfiprintf_internal_r+0xc74>
 4008994:	10800404 	addi	r2,r2,16
 4008998:	20c00044 	addi	r3,r4,1
 400899c:	44800015 	stw	r18,0(r8)
 40089a0:	45400115 	stw	r21,4(r8)
 40089a4:	d8801c15 	stw	r2,112(sp)
 40089a8:	d8c01b15 	stw	r3,108(sp)
 40089ac:	e0fff40e 	bge	fp,r3,4008980 <___vfiprintf_internal_r+0xc2c>
 40089b0:	1000101e 	bne	r2,zero,40089f4 <___vfiprintf_internal_r+0xca0>
 40089b4:	843ffc04 	addi	r16,r16,-16
 40089b8:	01400044 	movi	r5,1
 40089bc:	0009883a 	mov	r4,zero
 40089c0:	d811883a 	mov	r8,sp
 40089c4:	ac3ff316 	blt	r21,r16,4008994 <___vfiprintf_internal_r+0xc40>
 40089c8:	d8c02317 	ldw	r3,140(sp)
 40089cc:	1405883a 	add	r2,r2,r16
 40089d0:	44000115 	stw	r16,4(r8)
 40089d4:	40c00015 	stw	r3,0(r8)
 40089d8:	d8801c15 	stw	r2,112(sp)
 40089dc:	d9401b15 	stw	r5,108(sp)
 40089e0:	00c001c4 	movi	r3,7
 40089e4:	19401916 	blt	r3,r5,4008a4c <___vfiprintf_internal_r+0xcf8>
 40089e8:	42000204 	addi	r8,r8,8
 40089ec:	29400044 	addi	r5,r5,1
 40089f0:	003e5506 	br	4008348 <___vfiprintf_internal_r+0x5f4>
 40089f4:	d9402017 	ldw	r5,128(sp)
 40089f8:	d9002117 	ldw	r4,132(sp)
 40089fc:	d9801a04 	addi	r6,sp,104
 4008a00:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008a04:	10000b1e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008a08:	d9001b17 	ldw	r4,108(sp)
 4008a0c:	d8801c17 	ldw	r2,112(sp)
 4008a10:	d811883a 	mov	r8,sp
 4008a14:	21400044 	addi	r5,r4,1
 4008a18:	003fdc06 	br	400898c <___vfiprintf_internal_r+0xc38>
 4008a1c:	d8801c17 	ldw	r2,112(sp)
 4008a20:	10000426 	beq	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008a24:	d9402017 	ldw	r5,128(sp)
 4008a28:	d9002117 	ldw	r4,132(sp)
 4008a2c:	d9801a04 	addi	r6,sp,104
 4008a30:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008a34:	d9402017 	ldw	r5,128(sp)
 4008a38:	2880030b 	ldhu	r2,12(r5)
 4008a3c:	1080100c 	andi	r2,r2,64
 4008a40:	10014d1e 	bne	r2,zero,4008f78 <___vfiprintf_internal_r+0x1224>
 4008a44:	d8802417 	ldw	r2,144(sp)
 4008a48:	003d9706 	br	40080a8 <___vfiprintf_internal_r+0x354>
 4008a4c:	1000d21e 	bne	r2,zero,4008d98 <___vfiprintf_internal_r+0x1044>
 4008a50:	00c00044 	movi	r3,1
 4008a54:	a005883a 	mov	r2,r20
 4008a58:	ddc00015 	stw	r23,0(sp)
 4008a5c:	dd000115 	stw	r20,4(sp)
 4008a60:	dd001c15 	stw	r20,112(sp)
 4008a64:	d8c01b15 	stw	r3,108(sp)
 4008a68:	d811883a 	mov	r8,sp
 4008a6c:	42000204 	addi	r8,r8,8
 4008a70:	8c40010c 	andi	r17,r17,4
 4008a74:	88004026 	beq	r17,zero,4008b78 <___vfiprintf_internal_r+0xe24>
 4008a78:	d9002517 	ldw	r4,148(sp)
 4008a7c:	24e3c83a 	sub	r17,r4,r19
 4008a80:	04403d0e 	bge	zero,r17,4008b78 <___vfiprintf_internal_r+0xe24>
 4008a84:	04000404 	movi	r16,16
 4008a88:	8441a90e 	bge	r16,r17,4009130 <___vfiprintf_internal_r+0x13dc>
 4008a8c:	00c10074 	movhi	r3,1025
 4008a90:	18ff2004 	addi	r3,r3,-896
 4008a94:	d9001b17 	ldw	r4,108(sp)
 4008a98:	d8c02315 	stw	r3,140(sp)
 4008a9c:	050001c4 	movi	r20,7
 4008aa0:	dd402117 	ldw	r21,132(sp)
 4008aa4:	ddc02017 	ldw	r23,128(sp)
 4008aa8:	00000506 	br	4008ac0 <___vfiprintf_internal_r+0xd6c>
 4008aac:	21400084 	addi	r5,r4,2
 4008ab0:	42000204 	addi	r8,r8,8
 4008ab4:	1809883a 	mov	r4,r3
 4008ab8:	8c7ffc04 	addi	r17,r17,-16
 4008abc:	84400f0e 	bge	r16,r17,4008afc <___vfiprintf_internal_r+0xda8>
 4008ac0:	01410074 	movhi	r5,1025
 4008ac4:	10800404 	addi	r2,r2,16
 4008ac8:	20c00044 	addi	r3,r4,1
 4008acc:	297f2004 	addi	r5,r5,-896
 4008ad0:	41400015 	stw	r5,0(r8)
 4008ad4:	44000115 	stw	r16,4(r8)
 4008ad8:	d8801c15 	stw	r2,112(sp)
 4008adc:	d8c01b15 	stw	r3,108(sp)
 4008ae0:	a0fff20e 	bge	r20,r3,4008aac <___vfiprintf_internal_r+0xd58>
 4008ae4:	1000141e 	bne	r2,zero,4008b38 <___vfiprintf_internal_r+0xde4>
 4008ae8:	8c7ffc04 	addi	r17,r17,-16
 4008aec:	01400044 	movi	r5,1
 4008af0:	0009883a 	mov	r4,zero
 4008af4:	d811883a 	mov	r8,sp
 4008af8:	847ff116 	blt	r16,r17,4008ac0 <___vfiprintf_internal_r+0xd6c>
 4008afc:	d8c02317 	ldw	r3,140(sp)
 4008b00:	1445883a 	add	r2,r2,r17
 4008b04:	44400115 	stw	r17,4(r8)
 4008b08:	40c00015 	stw	r3,0(r8)
 4008b0c:	d8801c15 	stw	r2,112(sp)
 4008b10:	d9401b15 	stw	r5,108(sp)
 4008b14:	00c001c4 	movi	r3,7
 4008b18:	1940170e 	bge	r3,r5,4008b78 <___vfiprintf_internal_r+0xe24>
 4008b1c:	1000101e 	bne	r2,zero,4008b60 <___vfiprintf_internal_r+0xe0c>
 4008b20:	d8802517 	ldw	r2,148(sp)
 4008b24:	14c11616 	blt	r2,r19,4008f80 <___vfiprintf_internal_r+0x122c>
 4008b28:	d9002417 	ldw	r4,144(sp)
 4008b2c:	2089883a 	add	r4,r4,r2
 4008b30:	d9002415 	stw	r4,144(sp)
 4008b34:	003e1806 	br	4008398 <___vfiprintf_internal_r+0x644>
 4008b38:	d9801a04 	addi	r6,sp,104
 4008b3c:	b80b883a 	mov	r5,r23
 4008b40:	a809883a 	mov	r4,r21
 4008b44:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008b48:	103fba1e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008b4c:	d9001b17 	ldw	r4,108(sp)
 4008b50:	d8801c17 	ldw	r2,112(sp)
 4008b54:	d811883a 	mov	r8,sp
 4008b58:	21400044 	addi	r5,r4,1
 4008b5c:	003fd606 	br	4008ab8 <___vfiprintf_internal_r+0xd64>
 4008b60:	d9402017 	ldw	r5,128(sp)
 4008b64:	d9002117 	ldw	r4,132(sp)
 4008b68:	d9801a04 	addi	r6,sp,104
 4008b6c:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008b70:	103fb01e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008b74:	d8801c17 	ldw	r2,112(sp)
 4008b78:	d8c02517 	ldw	r3,148(sp)
 4008b7c:	1cc0010e 	bge	r3,r19,4008b84 <___vfiprintf_internal_r+0xe30>
 4008b80:	9807883a 	mov	r3,r19
 4008b84:	d9002417 	ldw	r4,144(sp)
 4008b88:	20c9883a 	add	r4,r4,r3
 4008b8c:	d9002415 	stw	r4,144(sp)
 4008b90:	103e0126 	beq	r2,zero,4008398 <___vfiprintf_internal_r+0x644>
 4008b94:	d9402017 	ldw	r5,128(sp)
 4008b98:	d9002117 	ldw	r4,132(sp)
 4008b9c:	d9801a04 	addi	r6,sp,104
 4008ba0:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008ba4:	103dfc26 	beq	r2,zero,4008398 <___vfiprintf_internal_r+0x644>
 4008ba8:	003fa206 	br	4008a34 <___vfiprintf_internal_r+0xce0>
 4008bac:	d9402017 	ldw	r5,128(sp)
 4008bb0:	d9002117 	ldw	r4,132(sp)
 4008bb4:	d9801a04 	addi	r6,sp,104
 4008bb8:	d9c02b15 	stw	r7,172(sp)
 4008bbc:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008bc0:	d9c02b17 	ldw	r7,172(sp)
 4008bc4:	103f9b1e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008bc8:	d9001b17 	ldw	r4,108(sp)
 4008bcc:	d8801c17 	ldw	r2,112(sp)
 4008bd0:	d811883a 	mov	r8,sp
 4008bd4:	21800044 	addi	r6,r4,1
 4008bd8:	003dbf06 	br	40082d8 <___vfiprintf_internal_r+0x584>
 4008bdc:	1000d81e 	bne	r2,zero,4008f40 <___vfiprintf_internal_r+0x11ec>
 4008be0:	d9001d87 	ldb	r4,118(sp)
 4008be4:	20000a26 	beq	r4,zero,4008c10 <___vfiprintf_internal_r+0xebc>
 4008be8:	00800044 	movi	r2,1
 4008bec:	d9001d84 	addi	r4,sp,118
 4008bf0:	100b883a 	mov	r5,r2
 4008bf4:	d9000015 	stw	r4,0(sp)
 4008bf8:	d8800115 	stw	r2,4(sp)
 4008bfc:	d811883a 	mov	r8,sp
 4008c00:	2809883a 	mov	r4,r5
 4008c04:	42000204 	addi	r8,r8,8
 4008c08:	29400044 	addi	r5,r5,1
 4008c0c:	003d9506 	br	4008264 <___vfiprintf_internal_r+0x510>
 4008c10:	3800fd26 	beq	r7,zero,4009008 <___vfiprintf_internal_r+0x12b4>
 4008c14:	00800084 	movi	r2,2
 4008c18:	d9001d04 	addi	r4,sp,116
 4008c1c:	d9000015 	stw	r4,0(sp)
 4008c20:	d8800115 	stw	r2,4(sp)
 4008c24:	01400044 	movi	r5,1
 4008c28:	d811883a 	mov	r8,sp
 4008c2c:	2809883a 	mov	r4,r5
 4008c30:	42000204 	addi	r8,r8,8
 4008c34:	29400044 	addi	r5,r5,1
 4008c38:	003f4606 	br	4008954 <___vfiprintf_internal_r+0xc00>
 4008c3c:	d8802517 	ldw	r2,148(sp)
 4008c40:	14c0010e 	bge	r2,r19,4008c48 <___vfiprintf_internal_r+0xef4>
 4008c44:	9805883a 	mov	r2,r19
 4008c48:	d9402417 	ldw	r5,144(sp)
 4008c4c:	288b883a 	add	r5,r5,r2
 4008c50:	d9402415 	stw	r5,144(sp)
 4008c54:	003dd006 	br	4008398 <___vfiprintf_internal_r+0x644>
 4008c58:	d8001d85 	stb	zero,118(sp)
 4008c5c:	80005d16 	blt	r16,zero,4008dd4 <___vfiprintf_internal_r+0x1080>
 4008c60:	00ffdfc4 	movi	r3,-129
 4008c64:	9d04b03a 	or	r2,r19,r20
 4008c68:	88e2703a 	and	r17,r17,r3
 4008c6c:	103d3726 	beq	r2,zero,400814c <___vfiprintf_internal_r+0x3f8>
 4008c70:	002b883a 	mov	r21,zero
 4008c74:	d9002617 	ldw	r4,152(sp)
 4008c78:	ddc01a04 	addi	r23,sp,104
 4008c7c:	988003cc 	andi	r2,r19,15
 4008c80:	a006973a 	slli	r3,r20,28
 4008c84:	2085883a 	add	r2,r4,r2
 4008c88:	9826d13a 	srli	r19,r19,4
 4008c8c:	10800003 	ldbu	r2,0(r2)
 4008c90:	a028d13a 	srli	r20,r20,4
 4008c94:	bdffffc4 	addi	r23,r23,-1
 4008c98:	1ce6b03a 	or	r19,r3,r19
 4008c9c:	b8800005 	stb	r2,0(r23)
 4008ca0:	9d04b03a 	or	r2,r19,r20
 4008ca4:	103ff51e 	bne	r2,zero,4008c7c <___vfiprintf_internal_r+0xf28>
 4008ca8:	d8801e17 	ldw	r2,120(sp)
 4008cac:	15e9c83a 	sub	r20,r2,r23
 4008cb0:	003d2b06 	br	4008160 <___vfiprintf_internal_r+0x40c>
 4008cb4:	d9402017 	ldw	r5,128(sp)
 4008cb8:	d9002117 	ldw	r4,132(sp)
 4008cbc:	d9801a04 	addi	r6,sp,104
 4008cc0:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008cc4:	103f5b1e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008cc8:	d8801c17 	ldw	r2,112(sp)
 4008ccc:	d811883a 	mov	r8,sp
 4008cd0:	003f6706 	br	4008a70 <___vfiprintf_internal_r+0xd1c>
 4008cd4:	d9402017 	ldw	r5,128(sp)
 4008cd8:	d9002117 	ldw	r4,132(sp)
 4008cdc:	d9801a04 	addi	r6,sp,104
 4008ce0:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008ce4:	103f531e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008ce8:	d811883a 	mov	r8,sp
 4008cec:	003cd906 	br	4008054 <___vfiprintf_internal_r+0x300>
 4008cf0:	10803fcc 	andi	r2,r2,255
 4008cf4:	1080201c 	xori	r2,r2,128
 4008cf8:	10bfe004 	addi	r2,r2,-128
 4008cfc:	00c00c04 	movi	r3,48
 4008d00:	10ffe926 	beq	r2,r3,4008ca8 <___vfiprintf_internal_r+0xf54>
 4008d04:	b8ffffc5 	stb	r3,-1(r23)
 4008d08:	d8c01e17 	ldw	r3,120(sp)
 4008d0c:	b8bfffc4 	addi	r2,r23,-1
 4008d10:	102f883a 	mov	r23,r2
 4008d14:	18a9c83a 	sub	r20,r3,r2
 4008d18:	003d1106 	br	4008160 <___vfiprintf_internal_r+0x40c>
 4008d1c:	d9402017 	ldw	r5,128(sp)
 4008d20:	d9002117 	ldw	r4,132(sp)
 4008d24:	d9801a04 	addi	r6,sp,104
 4008d28:	d8c02a15 	stw	r3,168(sp)
 4008d2c:	d9c02b15 	stw	r7,172(sp)
 4008d30:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008d34:	d8c02a17 	ldw	r3,168(sp)
 4008d38:	d9c02b17 	ldw	r7,172(sp)
 4008d3c:	103f3d1e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008d40:	d9001b17 	ldw	r4,108(sp)
 4008d44:	d8801c17 	ldw	r2,112(sp)
 4008d48:	d811883a 	mov	r8,sp
 4008d4c:	21400044 	addi	r5,r4,1
 4008d50:	003d4406 	br	4008264 <___vfiprintf_internal_r+0x510>
 4008d54:	d9402017 	ldw	r5,128(sp)
 4008d58:	d9002117 	ldw	r4,132(sp)
 4008d5c:	d9801a04 	addi	r6,sp,104
 4008d60:	d8c02a15 	stw	r3,168(sp)
 4008d64:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008d68:	d8c02a17 	ldw	r3,168(sp)
 4008d6c:	103f311e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008d70:	d9001b17 	ldw	r4,108(sp)
 4008d74:	d8801c17 	ldw	r2,112(sp)
 4008d78:	d811883a 	mov	r8,sp
 4008d7c:	21400044 	addi	r5,r4,1
 4008d80:	003ef406 	br	4008954 <___vfiprintf_internal_r+0xc00>
 4008d84:	1000bd1e 	bne	r2,zero,400907c <___vfiprintf_internal_r+0x1328>
 4008d88:	01400044 	movi	r5,1
 4008d8c:	0009883a 	mov	r4,zero
 4008d90:	d811883a 	mov	r8,sp
 4008d94:	003ef106 	br	400895c <___vfiprintf_internal_r+0xc08>
 4008d98:	d9402017 	ldw	r5,128(sp)
 4008d9c:	d9002117 	ldw	r4,132(sp)
 4008da0:	d9801a04 	addi	r6,sp,104
 4008da4:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008da8:	103f221e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008dac:	d9401b17 	ldw	r5,108(sp)
 4008db0:	d8801c17 	ldw	r2,112(sp)
 4008db4:	d811883a 	mov	r8,sp
 4008db8:	29400044 	addi	r5,r5,1
 4008dbc:	003d6206 	br	4008348 <___vfiprintf_internal_r+0x5f4>
 4008dc0:	01410074 	movhi	r5,1025
 4008dc4:	297ebb04 	addi	r5,r5,-1300
 4008dc8:	d9402615 	stw	r5,152(sp)
 4008dcc:	d8c02215 	stw	r3,136(sp)
 4008dd0:	1023883a 	mov	r17,r2
 4008dd4:	9d04b03a 	or	r2,r19,r20
 4008dd8:	103fa51e 	bne	r2,zero,4008c70 <___vfiprintf_internal_r+0xf1c>
 4008ddc:	002b883a 	mov	r21,zero
 4008de0:	00800084 	movi	r2,2
 4008de4:	003e4a06 	br	4008710 <___vfiprintf_internal_r+0x9bc>
 4008de8:	01410074 	movhi	r5,1025
 4008dec:	297ebb04 	addi	r5,r5,-1300
 4008df0:	002b883a 	mov	r21,zero
 4008df4:	d9402615 	stw	r5,152(sp)
 4008df8:	003f9e06 	br	4008c74 <___vfiprintf_internal_r+0xf20>
 4008dfc:	d9402217 	ldw	r5,136(sp)
 4008e00:	d8001d85 	stb	zero,118(sp)
 4008e04:	0029883a 	mov	r20,zero
 4008e08:	28800104 	addi	r2,r5,4
 4008e0c:	2cc00017 	ldw	r19,0(r5)
 4008e10:	803e3a16 	blt	r16,zero,40086fc <___vfiprintf_internal_r+0x9a8>
 4008e14:	00ffdfc4 	movi	r3,-129
 4008e18:	d8802215 	stw	r2,136(sp)
 4008e1c:	88e2703a 	and	r17,r17,r3
 4008e20:	002b883a 	mov	r21,zero
 4008e24:	983e9b26 	beq	r19,zero,4008894 <___vfiprintf_internal_r+0xb40>
 4008e28:	00800244 	movi	r2,9
 4008e2c:	14fdc936 	bltu	r2,r19,4008554 <___vfiprintf_internal_r+0x800>
 4008e30:	003e9a06 	br	400889c <___vfiprintf_internal_r+0xb48>
 4008e34:	00800c04 	movi	r2,48
 4008e38:	d8c01d45 	stb	r3,117(sp)
 4008e3c:	d8801d05 	stb	r2,116(sp)
 4008e40:	d8001d85 	stb	zero,118(sp)
 4008e44:	88c00094 	ori	r3,r17,2
 4008e48:	80009c16 	blt	r16,zero,40090bc <___vfiprintf_internal_r+0x1368>
 4008e4c:	00bfdfc4 	movi	r2,-129
 4008e50:	88a2703a 	and	r17,r17,r2
 4008e54:	8c400094 	ori	r17,r17,2
 4008e58:	002b883a 	mov	r21,zero
 4008e5c:	003f8506 	br	4008c74 <___vfiprintf_internal_r+0xf20>
 4008e60:	b029883a 	mov	r20,r22
 4008e64:	003c0b06 	br	4007e94 <___vfiprintf_internal_r+0x140>
 4008e68:	04e7c83a 	sub	r19,zero,r19
 4008e6c:	05400b44 	movi	r21,45
 4008e70:	9804c03a 	cmpne	r2,r19,zero
 4008e74:	0529c83a 	sub	r20,zero,r20
 4008e78:	dd401d85 	stb	r21,118(sp)
 4008e7c:	a0a9c83a 	sub	r20,r20,r2
 4008e80:	80009716 	blt	r16,zero,40090e0 <___vfiprintf_internal_r+0x138c>
 4008e84:	00bfdfc4 	movi	r2,-129
 4008e88:	88a2703a 	and	r17,r17,r2
 4008e8c:	003db006 	br	4008550 <___vfiprintf_internal_r+0x7fc>
 4008e90:	b0c00007 	ldb	r3,0(r22)
 4008e94:	003c0c06 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 4008e98:	8880100c 	andi	r2,r17,64
 4008e9c:	d8001d85 	stb	zero,118(sp)
 4008ea0:	1000461e 	bne	r2,zero,4008fbc <___vfiprintf_internal_r+0x1268>
 4008ea4:	d9002217 	ldw	r4,136(sp)
 4008ea8:	0029883a 	mov	r20,zero
 4008eac:	20800104 	addi	r2,r4,4
 4008eb0:	24c00017 	ldw	r19,0(r4)
 4008eb4:	803df80e 	bge	r16,zero,4008698 <___vfiprintf_internal_r+0x944>
 4008eb8:	9d06b03a 	or	r3,r19,r20
 4008ebc:	d8802215 	stw	r2,136(sp)
 4008ec0:	183d5e1e 	bne	r3,zero,400843c <___vfiprintf_internal_r+0x6e8>
 4008ec4:	002b883a 	mov	r21,zero
 4008ec8:	0005883a 	mov	r2,zero
 4008ecc:	003e1006 	br	4008710 <___vfiprintf_internal_r+0x9bc>
 4008ed0:	8880040c 	andi	r2,r17,16
 4008ed4:	1000321e 	bne	r2,zero,4008fa0 <___vfiprintf_internal_r+0x124c>
 4008ed8:	8c40100c 	andi	r17,r17,64
 4008edc:	88008d26 	beq	r17,zero,4009114 <___vfiprintf_internal_r+0x13c0>
 4008ee0:	d9402217 	ldw	r5,136(sp)
 4008ee4:	d8c02417 	ldw	r3,144(sp)
 4008ee8:	28800017 	ldw	r2,0(r5)
 4008eec:	29400104 	addi	r5,r5,4
 4008ef0:	d9402215 	stw	r5,136(sp)
 4008ef4:	10c0000d 	sth	r3,0(r2)
 4008ef8:	003bca06 	br	4007e24 <___vfiprintf_internal_r+0xd0>
 4008efc:	8880100c 	andi	r2,r17,64
 4008f00:	10003a26 	beq	r2,zero,4008fec <___vfiprintf_internal_r+0x1298>
 4008f04:	d8802217 	ldw	r2,136(sp)
 4008f08:	14c0000f 	ldh	r19,0(r2)
 4008f0c:	10800104 	addi	r2,r2,4
 4008f10:	d8802215 	stw	r2,136(sp)
 4008f14:	9829d7fa 	srai	r20,r19,31
 4008f18:	a005883a 	mov	r2,r20
 4008f1c:	003d8506 	br	4008534 <___vfiprintf_internal_r+0x7e0>
 4008f20:	8880100c 	andi	r2,r17,64
 4008f24:	10002b26 	beq	r2,zero,4008fd4 <___vfiprintf_internal_r+0x1280>
 4008f28:	d8802217 	ldw	r2,136(sp)
 4008f2c:	0029883a 	mov	r20,zero
 4008f30:	14c0000b 	ldhu	r19,0(r2)
 4008f34:	10800104 	addi	r2,r2,4
 4008f38:	d8802215 	stw	r2,136(sp)
 4008f3c:	003d5d06 	br	40084b4 <___vfiprintf_internal_r+0x760>
 4008f40:	d9402017 	ldw	r5,128(sp)
 4008f44:	d9002117 	ldw	r4,132(sp)
 4008f48:	d9801a04 	addi	r6,sp,104
 4008f4c:	d8c02a15 	stw	r3,168(sp)
 4008f50:	d9c02b15 	stw	r7,172(sp)
 4008f54:	4007c400 	call	4007c40 <__sprint_r.part.0>
 4008f58:	d8c02a17 	ldw	r3,168(sp)
 4008f5c:	d9c02b17 	ldw	r7,172(sp)
 4008f60:	103eb41e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4008f64:	d9001b17 	ldw	r4,108(sp)
 4008f68:	d8801c17 	ldw	r2,112(sp)
 4008f6c:	d811883a 	mov	r8,sp
 4008f70:	21400044 	addi	r5,r4,1
 4008f74:	003e6706 	br	4008914 <___vfiprintf_internal_r+0xbc0>
 4008f78:	00bfffc4 	movi	r2,-1
 4008f7c:	003c4a06 	br	40080a8 <___vfiprintf_internal_r+0x354>
 4008f80:	9805883a 	mov	r2,r19
 4008f84:	003ee806 	br	4008b28 <___vfiprintf_internal_r+0xdd4>
 4008f88:	d8c02217 	ldw	r3,136(sp)
 4008f8c:	0029883a 	mov	r20,zero
 4008f90:	18800104 	addi	r2,r3,4
 4008f94:	1cc0000b 	ldhu	r19,0(r3)
 4008f98:	803f9e0e 	bge	r16,zero,4008e14 <___vfiprintf_internal_r+0x10c0>
 4008f9c:	003dd706 	br	40086fc <___vfiprintf_internal_r+0x9a8>
 4008fa0:	d8c02217 	ldw	r3,136(sp)
 4008fa4:	d9002417 	ldw	r4,144(sp)
 4008fa8:	18800017 	ldw	r2,0(r3)
 4008fac:	18c00104 	addi	r3,r3,4
 4008fb0:	d8c02215 	stw	r3,136(sp)
 4008fb4:	11000015 	stw	r4,0(r2)
 4008fb8:	003b9a06 	br	4007e24 <___vfiprintf_internal_r+0xd0>
 4008fbc:	d8c02217 	ldw	r3,136(sp)
 4008fc0:	0029883a 	mov	r20,zero
 4008fc4:	18800104 	addi	r2,r3,4
 4008fc8:	1cc0000b 	ldhu	r19,0(r3)
 4008fcc:	803db20e 	bge	r16,zero,4008698 <___vfiprintf_internal_r+0x944>
 4008fd0:	003fb906 	br	4008eb8 <___vfiprintf_internal_r+0x1164>
 4008fd4:	d9002217 	ldw	r4,136(sp)
 4008fd8:	0029883a 	mov	r20,zero
 4008fdc:	24c00017 	ldw	r19,0(r4)
 4008fe0:	21000104 	addi	r4,r4,4
 4008fe4:	d9002215 	stw	r4,136(sp)
 4008fe8:	003d3206 	br	40084b4 <___vfiprintf_internal_r+0x760>
 4008fec:	d8c02217 	ldw	r3,136(sp)
 4008ff0:	1cc00017 	ldw	r19,0(r3)
 4008ff4:	18c00104 	addi	r3,r3,4
 4008ff8:	d8c02215 	stw	r3,136(sp)
 4008ffc:	9829d7fa 	srai	r20,r19,31
 4009000:	a005883a 	mov	r2,r20
 4009004:	003d4b06 	br	4008534 <___vfiprintf_internal_r+0x7e0>
 4009008:	0009883a 	mov	r4,zero
 400900c:	01400044 	movi	r5,1
 4009010:	d811883a 	mov	r8,sp
 4009014:	003e4f06 	br	4008954 <___vfiprintf_internal_r+0xc00>
 4009018:	d8c02215 	stw	r3,136(sp)
 400901c:	002b883a 	mov	r21,zero
 4009020:	003db806 	br	4008704 <___vfiprintf_internal_r+0x9b0>
 4009024:	d811883a 	mov	r8,sp
 4009028:	003e9606 	br	4008a84 <___vfiprintf_internal_r+0xd30>
 400902c:	01010074 	movhi	r4,1025
 4009030:	213f1c04 	addi	r4,r4,-912
 4009034:	d9002315 	stw	r4,140(sp)
 4009038:	003e6306 	br	40089c8 <___vfiprintf_internal_r+0xc74>
 400903c:	b0c00043 	ldbu	r3,1(r22)
 4009040:	8c400814 	ori	r17,r17,32
 4009044:	b5800044 	addi	r22,r22,1
 4009048:	18c03fcc 	andi	r3,r3,255
 400904c:	18c0201c 	xori	r3,r3,128
 4009050:	18ffe004 	addi	r3,r3,-128
 4009054:	003b9c06 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 4009058:	b809883a 	mov	r4,r23
 400905c:	da002a15 	stw	r8,168(sp)
 4009060:	40004c40 	call	40004c4 <strlen>
 4009064:	1029883a 	mov	r20,r2
 4009068:	dd401d83 	ldbu	r21,118(sp)
 400906c:	df002215 	stw	fp,136(sp)
 4009070:	0021883a 	mov	r16,zero
 4009074:	da002a17 	ldw	r8,168(sp)
 4009078:	003c3906 	br	4008160 <___vfiprintf_internal_r+0x40c>
 400907c:	d9402017 	ldw	r5,128(sp)
 4009080:	d9002117 	ldw	r4,132(sp)
 4009084:	d9801a04 	addi	r6,sp,104
 4009088:	4007c400 	call	4007c40 <__sprint_r.part.0>
 400908c:	103e691e 	bne	r2,zero,4008a34 <___vfiprintf_internal_r+0xce0>
 4009090:	d9001b17 	ldw	r4,108(sp)
 4009094:	d8801c17 	ldw	r2,112(sp)
 4009098:	d811883a 	mov	r8,sp
 400909c:	21400044 	addi	r5,r4,1
 40090a0:	003e2e06 	br	400895c <___vfiprintf_internal_r+0xc08>
 40090a4:	01010074 	movhi	r4,1025
 40090a8:	213f2004 	addi	r4,r4,-896
 40090ac:	d9002315 	stw	r4,140(sp)
 40090b0:	d9001b17 	ldw	r4,108(sp)
 40090b4:	21000044 	addi	r4,r4,1
 40090b8:	003c5e06 	br	4008234 <___vfiprintf_internal_r+0x4e0>
 40090bc:	002b883a 	mov	r21,zero
 40090c0:	00800084 	movi	r2,2
 40090c4:	10803fcc 	andi	r2,r2,255
 40090c8:	01000044 	movi	r4,1
 40090cc:	11002b26 	beq	r2,r4,400917c <___vfiprintf_internal_r+0x1428>
 40090d0:	01000084 	movi	r4,2
 40090d4:	11002b1e 	bne	r2,r4,4009184 <___vfiprintf_internal_r+0x1430>
 40090d8:	1823883a 	mov	r17,r3
 40090dc:	003ee506 	br	4008c74 <___vfiprintf_internal_r+0xf20>
 40090e0:	8807883a 	mov	r3,r17
 40090e4:	00800044 	movi	r2,1
 40090e8:	003ff606 	br	40090c4 <___vfiprintf_internal_r+0x1370>
 40090ec:	00800184 	movi	r2,6
 40090f0:	1400012e 	bgeu	r2,r16,40090f8 <___vfiprintf_internal_r+0x13a4>
 40090f4:	1021883a 	mov	r16,r2
 40090f8:	8029883a 	mov	r20,r16
 40090fc:	8027883a 	mov	r19,r16
 4009100:	80002216 	blt	r16,zero,400918c <___vfiprintf_internal_r+0x1438>
 4009104:	05c10074 	movhi	r23,1025
 4009108:	df002215 	stw	fp,136(sp)
 400910c:	bdfec004 	addi	r23,r23,-1280
 4009110:	003cfb06 	br	4008500 <___vfiprintf_internal_r+0x7ac>
 4009114:	d9002217 	ldw	r4,136(sp)
 4009118:	d9402417 	ldw	r5,144(sp)
 400911c:	20800017 	ldw	r2,0(r4)
 4009120:	21000104 	addi	r4,r4,4
 4009124:	d9002215 	stw	r4,136(sp)
 4009128:	11400015 	stw	r5,0(r2)
 400912c:	003b3d06 	br	4007e24 <___vfiprintf_internal_r+0xd0>
 4009130:	01410074 	movhi	r5,1025
 4009134:	297f2004 	addi	r5,r5,-896
 4009138:	d9402315 	stw	r5,140(sp)
 400913c:	d9401b17 	ldw	r5,108(sp)
 4009140:	29400044 	addi	r5,r5,1
 4009144:	003e6d06 	br	4008afc <___vfiprintf_internal_r+0xda8>
 4009148:	8029883a 	mov	r20,r16
 400914c:	dd401d83 	ldbu	r21,118(sp)
 4009150:	df002215 	stw	fp,136(sp)
 4009154:	0021883a 	mov	r16,zero
 4009158:	003c0106 	br	4008160 <___vfiprintf_internal_r+0x40c>
 400915c:	00c10074 	movhi	r3,1025
 4009160:	18ff1c04 	addi	r3,r3,-912
 4009164:	d8c02315 	stw	r3,140(sp)
 4009168:	280d883a 	mov	r6,r5
 400916c:	003c6906 	br	4008314 <___vfiprintf_internal_r+0x5c0>
 4009170:	802d883a 	mov	r22,r16
 4009174:	0021883a 	mov	r16,zero
 4009178:	003b5406 	br	4007ecc <___vfiprintf_internal_r+0x178>
 400917c:	1823883a 	mov	r17,r3
 4009180:	003cf306 	br	4008550 <___vfiprintf_internal_r+0x7fc>
 4009184:	1823883a 	mov	r17,r3
 4009188:	003cad06 	br	4008440 <___vfiprintf_internal_r+0x6ec>
 400918c:	0027883a 	mov	r19,zero
 4009190:	003fdc06 	br	4009104 <___vfiprintf_internal_r+0x13b0>
 4009194:	d9402217 	ldw	r5,136(sp)
 4009198:	8005883a 	mov	r2,r16
 400919c:	b0c00043 	ldbu	r3,1(r22)
 40091a0:	2c000017 	ldw	r16,0(r5)
 40091a4:	29000104 	addi	r4,r5,4
 40091a8:	d9002215 	stw	r4,136(sp)
 40091ac:	102d883a 	mov	r22,r2
 40091b0:	803fa50e 	bge	r16,zero,4009048 <___vfiprintf_internal_r+0x12f4>
 40091b4:	18c03fcc 	andi	r3,r3,255
 40091b8:	18c0201c 	xori	r3,r3,128
 40091bc:	043fffc4 	movi	r16,-1
 40091c0:	18ffe004 	addi	r3,r3,-128
 40091c4:	003b4006 	br	4007ec8 <___vfiprintf_internal_r+0x174>
 40091c8:	d9402303 	ldbu	r5,140(sp)
 40091cc:	d9401d85 	stb	r5,118(sp)
 40091d0:	003cae06 	br	400848c <___vfiprintf_internal_r+0x738>
 40091d4:	d8c02303 	ldbu	r3,140(sp)
 40091d8:	d8c01d85 	stb	r3,118(sp)
 40091dc:	003d1406 	br	4008630 <___vfiprintf_internal_r+0x8dc>
 40091e0:	d8c02303 	ldbu	r3,140(sp)
 40091e4:	d8c01d85 	stb	r3,118(sp)
 40091e8:	003cca06 	br	4008514 <___vfiprintf_internal_r+0x7c0>
 40091ec:	8880004c 	andi	r2,r17,1
 40091f0:	002b883a 	mov	r21,zero
 40091f4:	10000526 	beq	r2,zero,400920c <___vfiprintf_internal_r+0x14b8>
 40091f8:	00800c04 	movi	r2,48
 40091fc:	d88019c5 	stb	r2,103(sp)
 4009200:	dd002817 	ldw	r20,160(sp)
 4009204:	ddc019c4 	addi	r23,sp,103
 4009208:	003bd506 	br	4008160 <___vfiprintf_internal_r+0x40c>
 400920c:	0029883a 	mov	r20,zero
 4009210:	ddc01a04 	addi	r23,sp,104
 4009214:	003bd206 	br	4008160 <___vfiprintf_internal_r+0x40c>
 4009218:	d9002303 	ldbu	r4,140(sp)
 400921c:	d9001d85 	stb	r4,118(sp)
 4009220:	003da606 	br	40088bc <___vfiprintf_internal_r+0xb68>
 4009224:	d8c02303 	ldbu	r3,140(sp)
 4009228:	d8c01d85 	stb	r3,118(sp)
 400922c:	003c7606 	br	4008408 <___vfiprintf_internal_r+0x6b4>
 4009230:	d8c02303 	ldbu	r3,140(sp)
 4009234:	d8c01d85 	stb	r3,118(sp)
 4009238:	003c6506 	br	40083d0 <___vfiprintf_internal_r+0x67c>
 400923c:	d9002303 	ldbu	r4,140(sp)
 4009240:	d9001d85 	stb	r4,118(sp)
 4009244:	003d3d06 	br	400873c <___vfiprintf_internal_r+0x9e8>
 4009248:	d8c02303 	ldbu	r3,140(sp)
 400924c:	d8c01d85 	stb	r3,118(sp)
 4009250:	003d1d06 	br	40086c8 <___vfiprintf_internal_r+0x974>
 4009254:	d8c02303 	ldbu	r3,140(sp)
 4009258:	d8c01d85 	stb	r3,118(sp)
 400925c:	003d0306 	br	400866c <___vfiprintf_internal_r+0x918>

04009260 <__vfiprintf_internal>:
 4009260:	00810074 	movhi	r2,1025
 4009264:	10861c04 	addi	r2,r2,6256
 4009268:	300f883a 	mov	r7,r6
 400926c:	280d883a 	mov	r6,r5
 4009270:	200b883a 	mov	r5,r4
 4009274:	11000017 	ldw	r4,0(r2)
 4009278:	4007d541 	jmpi	4007d54 <___vfiprintf_internal_r>

0400927c <__sbprintf>:
 400927c:	2880030b 	ldhu	r2,12(r5)
 4009280:	2ac01917 	ldw	r11,100(r5)
 4009284:	2a80038b 	ldhu	r10,14(r5)
 4009288:	2a400717 	ldw	r9,28(r5)
 400928c:	2a000917 	ldw	r8,36(r5)
 4009290:	defee204 	addi	sp,sp,-1144
 4009294:	00c10004 	movi	r3,1024
 4009298:	dc011a15 	stw	r16,1128(sp)
 400929c:	10bfff4c 	andi	r2,r2,65533
 40092a0:	2821883a 	mov	r16,r5
 40092a4:	d8cb883a 	add	r5,sp,r3
 40092a8:	dc811c15 	stw	r18,1136(sp)
 40092ac:	dc411b15 	stw	r17,1132(sp)
 40092b0:	dfc11d15 	stw	ra,1140(sp)
 40092b4:	2025883a 	mov	r18,r4
 40092b8:	d881030d 	sth	r2,1036(sp)
 40092bc:	dac11915 	stw	r11,1124(sp)
 40092c0:	da81038d 	sth	r10,1038(sp)
 40092c4:	da410715 	stw	r9,1052(sp)
 40092c8:	da010915 	stw	r8,1060(sp)
 40092cc:	dec10015 	stw	sp,1024(sp)
 40092d0:	dec10415 	stw	sp,1040(sp)
 40092d4:	d8c10215 	stw	r3,1032(sp)
 40092d8:	d8c10515 	stw	r3,1044(sp)
 40092dc:	d8010615 	stw	zero,1048(sp)
 40092e0:	4007d540 	call	4007d54 <___vfiprintf_internal_r>
 40092e4:	1023883a 	mov	r17,r2
 40092e8:	10000416 	blt	r2,zero,40092fc <__sbprintf+0x80>
 40092ec:	d9410004 	addi	r5,sp,1024
 40092f0:	9009883a 	mov	r4,r18
 40092f4:	40045300 	call	4004530 <_fflush_r>
 40092f8:	10000d1e 	bne	r2,zero,4009330 <__sbprintf+0xb4>
 40092fc:	d881030b 	ldhu	r2,1036(sp)
 4009300:	1080100c 	andi	r2,r2,64
 4009304:	10000326 	beq	r2,zero,4009314 <__sbprintf+0x98>
 4009308:	8080030b 	ldhu	r2,12(r16)
 400930c:	10801014 	ori	r2,r2,64
 4009310:	8080030d 	sth	r2,12(r16)
 4009314:	8805883a 	mov	r2,r17
 4009318:	dfc11d17 	ldw	ra,1140(sp)
 400931c:	dc811c17 	ldw	r18,1136(sp)
 4009320:	dc411b17 	ldw	r17,1132(sp)
 4009324:	dc011a17 	ldw	r16,1128(sp)
 4009328:	dec11e04 	addi	sp,sp,1144
 400932c:	f800283a 	ret
 4009330:	047fffc4 	movi	r17,-1
 4009334:	003ff106 	br	40092fc <__sbprintf+0x80>

04009338 <_write_r>:
 4009338:	defffd04 	addi	sp,sp,-12
 400933c:	2805883a 	mov	r2,r5
 4009340:	dc000015 	stw	r16,0(sp)
 4009344:	04010074 	movhi	r16,1025
 4009348:	dc400115 	stw	r17,4(sp)
 400934c:	300b883a 	mov	r5,r6
 4009350:	840ced04 	addi	r16,r16,13236
 4009354:	2023883a 	mov	r17,r4
 4009358:	380d883a 	mov	r6,r7
 400935c:	1009883a 	mov	r4,r2
 4009360:	dfc00215 	stw	ra,8(sp)
 4009364:	80000015 	stw	zero,0(r16)
 4009368:	400db940 	call	400db94 <write>
 400936c:	00ffffc4 	movi	r3,-1
 4009370:	10c00526 	beq	r2,r3,4009388 <_write_r+0x50>
 4009374:	dfc00217 	ldw	ra,8(sp)
 4009378:	dc400117 	ldw	r17,4(sp)
 400937c:	dc000017 	ldw	r16,0(sp)
 4009380:	dec00304 	addi	sp,sp,12
 4009384:	f800283a 	ret
 4009388:	80c00017 	ldw	r3,0(r16)
 400938c:	183ff926 	beq	r3,zero,4009374 <_write_r+0x3c>
 4009390:	88c00015 	stw	r3,0(r17)
 4009394:	003ff706 	br	4009374 <_write_r+0x3c>

04009398 <_close_r>:
 4009398:	defffd04 	addi	sp,sp,-12
 400939c:	dc000015 	stw	r16,0(sp)
 40093a0:	04010074 	movhi	r16,1025
 40093a4:	dc400115 	stw	r17,4(sp)
 40093a8:	840ced04 	addi	r16,r16,13236
 40093ac:	2023883a 	mov	r17,r4
 40093b0:	2809883a 	mov	r4,r5
 40093b4:	dfc00215 	stw	ra,8(sp)
 40093b8:	80000015 	stw	zero,0(r16)
 40093bc:	400d3000 	call	400d300 <close>
 40093c0:	00ffffc4 	movi	r3,-1
 40093c4:	10c00526 	beq	r2,r3,40093dc <_close_r+0x44>
 40093c8:	dfc00217 	ldw	ra,8(sp)
 40093cc:	dc400117 	ldw	r17,4(sp)
 40093d0:	dc000017 	ldw	r16,0(sp)
 40093d4:	dec00304 	addi	sp,sp,12
 40093d8:	f800283a 	ret
 40093dc:	80c00017 	ldw	r3,0(r16)
 40093e0:	183ff926 	beq	r3,zero,40093c8 <_close_r+0x30>
 40093e4:	88c00015 	stw	r3,0(r17)
 40093e8:	003ff706 	br	40093c8 <_close_r+0x30>

040093ec <_calloc_r>:
 40093ec:	defffe04 	addi	sp,sp,-8
 40093f0:	2805883a 	mov	r2,r5
 40093f4:	dc000015 	stw	r16,0(sp)
 40093f8:	300b883a 	mov	r5,r6
 40093fc:	2021883a 	mov	r16,r4
 4009400:	1009883a 	mov	r4,r2
 4009404:	dfc00115 	stw	ra,4(sp)
 4009408:	400a9f80 	call	400a9f8 <__mulsi3>
 400940c:	100b883a 	mov	r5,r2
 4009410:	8009883a 	mov	r4,r16
 4009414:	40056880 	call	4005688 <_malloc_r>
 4009418:	10002926 	beq	r2,zero,40094c0 <_calloc_r+0xd4>
 400941c:	11bfff17 	ldw	r6,-4(r2)
 4009420:	1021883a 	mov	r16,r2
 4009424:	00bfff04 	movi	r2,-4
 4009428:	308c703a 	and	r6,r6,r2
 400942c:	00c00904 	movi	r3,36
 4009430:	308d883a 	add	r6,r6,r2
 4009434:	19801636 	bltu	r3,r6,4009490 <_calloc_r+0xa4>
 4009438:	008004c4 	movi	r2,19
 400943c:	11800b2e 	bgeu	r2,r6,400946c <_calloc_r+0x80>
 4009440:	80000015 	stw	zero,0(r16)
 4009444:	80000115 	stw	zero,4(r16)
 4009448:	008006c4 	movi	r2,27
 400944c:	11801a2e 	bgeu	r2,r6,40094b8 <_calloc_r+0xcc>
 4009450:	80000215 	stw	zero,8(r16)
 4009454:	80000315 	stw	zero,12(r16)
 4009458:	30c0151e 	bne	r6,r3,40094b0 <_calloc_r+0xc4>
 400945c:	80000415 	stw	zero,16(r16)
 4009460:	80800604 	addi	r2,r16,24
 4009464:	80000515 	stw	zero,20(r16)
 4009468:	00000106 	br	4009470 <_calloc_r+0x84>
 400946c:	8005883a 	mov	r2,r16
 4009470:	10000015 	stw	zero,0(r2)
 4009474:	10000115 	stw	zero,4(r2)
 4009478:	10000215 	stw	zero,8(r2)
 400947c:	8005883a 	mov	r2,r16
 4009480:	dfc00117 	ldw	ra,4(sp)
 4009484:	dc000017 	ldw	r16,0(sp)
 4009488:	dec00204 	addi	sp,sp,8
 400948c:	f800283a 	ret
 4009490:	000b883a 	mov	r5,zero
 4009494:	8009883a 	mov	r4,r16
 4009498:	400621c0 	call	400621c <memset>
 400949c:	8005883a 	mov	r2,r16
 40094a0:	dfc00117 	ldw	ra,4(sp)
 40094a4:	dc000017 	ldw	r16,0(sp)
 40094a8:	dec00204 	addi	sp,sp,8
 40094ac:	f800283a 	ret
 40094b0:	80800404 	addi	r2,r16,16
 40094b4:	003fee06 	br	4009470 <_calloc_r+0x84>
 40094b8:	80800204 	addi	r2,r16,8
 40094bc:	003fec06 	br	4009470 <_calloc_r+0x84>
 40094c0:	0005883a 	mov	r2,zero
 40094c4:	003fee06 	br	4009480 <_calloc_r+0x94>

040094c8 <_fclose_r>:
 40094c8:	28003926 	beq	r5,zero,40095b0 <_fclose_r+0xe8>
 40094cc:	defffc04 	addi	sp,sp,-16
 40094d0:	dc400115 	stw	r17,4(sp)
 40094d4:	dc000015 	stw	r16,0(sp)
 40094d8:	dfc00315 	stw	ra,12(sp)
 40094dc:	dc800215 	stw	r18,8(sp)
 40094e0:	2023883a 	mov	r17,r4
 40094e4:	2821883a 	mov	r16,r5
 40094e8:	20000226 	beq	r4,zero,40094f4 <_fclose_r+0x2c>
 40094ec:	20800e17 	ldw	r2,56(r4)
 40094f0:	10002726 	beq	r2,zero,4009590 <_fclose_r+0xc8>
 40094f4:	8080030f 	ldh	r2,12(r16)
 40094f8:	1000071e 	bne	r2,zero,4009518 <_fclose_r+0x50>
 40094fc:	0005883a 	mov	r2,zero
 4009500:	dfc00317 	ldw	ra,12(sp)
 4009504:	dc800217 	ldw	r18,8(sp)
 4009508:	dc400117 	ldw	r17,4(sp)
 400950c:	dc000017 	ldw	r16,0(sp)
 4009510:	dec00404 	addi	sp,sp,16
 4009514:	f800283a 	ret
 4009518:	800b883a 	mov	r5,r16
 400951c:	8809883a 	mov	r4,r17
 4009520:	40043140 	call	4004314 <__sflush_r>
 4009524:	1025883a 	mov	r18,r2
 4009528:	80800b17 	ldw	r2,44(r16)
 400952c:	10000426 	beq	r2,zero,4009540 <_fclose_r+0x78>
 4009530:	81400717 	ldw	r5,28(r16)
 4009534:	8809883a 	mov	r4,r17
 4009538:	103ee83a 	callr	r2
 400953c:	10001616 	blt	r2,zero,4009598 <_fclose_r+0xd0>
 4009540:	8080030b 	ldhu	r2,12(r16)
 4009544:	1080200c 	andi	r2,r2,128
 4009548:	1000151e 	bne	r2,zero,40095a0 <_fclose_r+0xd8>
 400954c:	81400c17 	ldw	r5,48(r16)
 4009550:	28000526 	beq	r5,zero,4009568 <_fclose_r+0xa0>
 4009554:	80801004 	addi	r2,r16,64
 4009558:	28800226 	beq	r5,r2,4009564 <_fclose_r+0x9c>
 400955c:	8809883a 	mov	r4,r17
 4009560:	4004a900 	call	4004a90 <_free_r>
 4009564:	80000c15 	stw	zero,48(r16)
 4009568:	81401117 	ldw	r5,68(r16)
 400956c:	28000326 	beq	r5,zero,400957c <_fclose_r+0xb4>
 4009570:	8809883a 	mov	r4,r17
 4009574:	4004a900 	call	4004a90 <_free_r>
 4009578:	80001115 	stw	zero,68(r16)
 400957c:	400492c0 	call	400492c <__sfp_lock_acquire>
 4009580:	8000030d 	sth	zero,12(r16)
 4009584:	40049300 	call	4004930 <__sfp_lock_release>
 4009588:	9005883a 	mov	r2,r18
 400958c:	003fdc06 	br	4009500 <_fclose_r+0x38>
 4009590:	400491c0 	call	400491c <__sinit>
 4009594:	003fd706 	br	40094f4 <_fclose_r+0x2c>
 4009598:	04bfffc4 	movi	r18,-1
 400959c:	003fe806 	br	4009540 <_fclose_r+0x78>
 40095a0:	81400417 	ldw	r5,16(r16)
 40095a4:	8809883a 	mov	r4,r17
 40095a8:	4004a900 	call	4004a90 <_free_r>
 40095ac:	003fe706 	br	400954c <_fclose_r+0x84>
 40095b0:	0005883a 	mov	r2,zero
 40095b4:	f800283a 	ret

040095b8 <fclose>:
 40095b8:	00810074 	movhi	r2,1025
 40095bc:	10861c04 	addi	r2,r2,6256
 40095c0:	200b883a 	mov	r5,r4
 40095c4:	11000017 	ldw	r4,0(r2)
 40095c8:	40094c81 	jmpi	40094c8 <_fclose_r>

040095cc <__fputwc>:
 40095cc:	defff804 	addi	sp,sp,-32
 40095d0:	dcc00415 	stw	r19,16(sp)
 40095d4:	dc800315 	stw	r18,12(sp)
 40095d8:	dc000115 	stw	r16,4(sp)
 40095dc:	dfc00715 	stw	ra,28(sp)
 40095e0:	dd400615 	stw	r21,24(sp)
 40095e4:	dd000515 	stw	r20,20(sp)
 40095e8:	dc400215 	stw	r17,8(sp)
 40095ec:	2027883a 	mov	r19,r4
 40095f0:	2825883a 	mov	r18,r5
 40095f4:	3021883a 	mov	r16,r6
 40095f8:	40054780 	call	4005478 <__locale_mb_cur_max>
 40095fc:	00c00044 	movi	r3,1
 4009600:	10c03e26 	beq	r2,r3,40096fc <__fputwc+0x130>
 4009604:	81c01704 	addi	r7,r16,92
 4009608:	900d883a 	mov	r6,r18
 400960c:	d80b883a 	mov	r5,sp
 4009610:	9809883a 	mov	r4,r19
 4009614:	4009a9c0 	call	4009a9c <_wcrtomb_r>
 4009618:	1029883a 	mov	r20,r2
 400961c:	00bfffc4 	movi	r2,-1
 4009620:	a0802026 	beq	r20,r2,40096a4 <__fputwc+0xd8>
 4009624:	d9400003 	ldbu	r5,0(sp)
 4009628:	a0001c26 	beq	r20,zero,400969c <__fputwc+0xd0>
 400962c:	0023883a 	mov	r17,zero
 4009630:	05400284 	movi	r21,10
 4009634:	00000906 	br	400965c <__fputwc+0x90>
 4009638:	80800017 	ldw	r2,0(r16)
 400963c:	11400005 	stb	r5,0(r2)
 4009640:	80c00017 	ldw	r3,0(r16)
 4009644:	18c00044 	addi	r3,r3,1
 4009648:	80c00015 	stw	r3,0(r16)
 400964c:	8c400044 	addi	r17,r17,1
 4009650:	dc45883a 	add	r2,sp,r17
 4009654:	8d00112e 	bgeu	r17,r20,400969c <__fputwc+0xd0>
 4009658:	11400003 	ldbu	r5,0(r2)
 400965c:	80c00217 	ldw	r3,8(r16)
 4009660:	18ffffc4 	addi	r3,r3,-1
 4009664:	80c00215 	stw	r3,8(r16)
 4009668:	183ff30e 	bge	r3,zero,4009638 <__fputwc+0x6c>
 400966c:	80800617 	ldw	r2,24(r16)
 4009670:	18801916 	blt	r3,r2,40096d8 <__fputwc+0x10c>
 4009674:	80800017 	ldw	r2,0(r16)
 4009678:	11400005 	stb	r5,0(r2)
 400967c:	80800017 	ldw	r2,0(r16)
 4009680:	10c00003 	ldbu	r3,0(r2)
 4009684:	10800044 	addi	r2,r2,1
 4009688:	1d402326 	beq	r3,r21,4009718 <__fputwc+0x14c>
 400968c:	80800015 	stw	r2,0(r16)
 4009690:	8c400044 	addi	r17,r17,1
 4009694:	dc45883a 	add	r2,sp,r17
 4009698:	8d3fef36 	bltu	r17,r20,4009658 <__fputwc+0x8c>
 400969c:	9005883a 	mov	r2,r18
 40096a0:	00000406 	br	40096b4 <__fputwc+0xe8>
 40096a4:	80c0030b 	ldhu	r3,12(r16)
 40096a8:	a005883a 	mov	r2,r20
 40096ac:	18c01014 	ori	r3,r3,64
 40096b0:	80c0030d 	sth	r3,12(r16)
 40096b4:	dfc00717 	ldw	ra,28(sp)
 40096b8:	dd400617 	ldw	r21,24(sp)
 40096bc:	dd000517 	ldw	r20,20(sp)
 40096c0:	dcc00417 	ldw	r19,16(sp)
 40096c4:	dc800317 	ldw	r18,12(sp)
 40096c8:	dc400217 	ldw	r17,8(sp)
 40096cc:	dc000117 	ldw	r16,4(sp)
 40096d0:	dec00804 	addi	sp,sp,32
 40096d4:	f800283a 	ret
 40096d8:	800d883a 	mov	r6,r16
 40096dc:	29403fcc 	andi	r5,r5,255
 40096e0:	9809883a 	mov	r4,r19
 40096e4:	40099440 	call	4009944 <__swbuf_r>
 40096e8:	10bfffe0 	cmpeqi	r2,r2,-1
 40096ec:	10803fcc 	andi	r2,r2,255
 40096f0:	103fd626 	beq	r2,zero,400964c <__fputwc+0x80>
 40096f4:	00bfffc4 	movi	r2,-1
 40096f8:	003fee06 	br	40096b4 <__fputwc+0xe8>
 40096fc:	90ffffc4 	addi	r3,r18,-1
 4009700:	01003f84 	movi	r4,254
 4009704:	20ffbf36 	bltu	r4,r3,4009604 <__fputwc+0x38>
 4009708:	900b883a 	mov	r5,r18
 400970c:	dc800005 	stb	r18,0(sp)
 4009710:	1029883a 	mov	r20,r2
 4009714:	003fc506 	br	400962c <__fputwc+0x60>
 4009718:	800d883a 	mov	r6,r16
 400971c:	a80b883a 	mov	r5,r21
 4009720:	9809883a 	mov	r4,r19
 4009724:	40099440 	call	4009944 <__swbuf_r>
 4009728:	10bfffe0 	cmpeqi	r2,r2,-1
 400972c:	003fef06 	br	40096ec <__fputwc+0x120>

04009730 <_fputwc_r>:
 4009730:	3080030b 	ldhu	r2,12(r6)
 4009734:	10c8000c 	andi	r3,r2,8192
 4009738:	1800051e 	bne	r3,zero,4009750 <_fputwc_r+0x20>
 400973c:	30c01917 	ldw	r3,100(r6)
 4009740:	10880014 	ori	r2,r2,8192
 4009744:	3080030d 	sth	r2,12(r6)
 4009748:	18880014 	ori	r2,r3,8192
 400974c:	30801915 	stw	r2,100(r6)
 4009750:	40095cc1 	jmpi	40095cc <__fputwc>

04009754 <fputwc>:
 4009754:	00810074 	movhi	r2,1025
 4009758:	defffc04 	addi	sp,sp,-16
 400975c:	10861c04 	addi	r2,r2,6256
 4009760:	dc000115 	stw	r16,4(sp)
 4009764:	14000017 	ldw	r16,0(r2)
 4009768:	dc400215 	stw	r17,8(sp)
 400976c:	dfc00315 	stw	ra,12(sp)
 4009770:	2023883a 	mov	r17,r4
 4009774:	80000226 	beq	r16,zero,4009780 <fputwc+0x2c>
 4009778:	80800e17 	ldw	r2,56(r16)
 400977c:	10001026 	beq	r2,zero,40097c0 <fputwc+0x6c>
 4009780:	2880030b 	ldhu	r2,12(r5)
 4009784:	10c8000c 	andi	r3,r2,8192
 4009788:	1800051e 	bne	r3,zero,40097a0 <fputwc+0x4c>
 400978c:	28c01917 	ldw	r3,100(r5)
 4009790:	10880014 	ori	r2,r2,8192
 4009794:	2880030d 	sth	r2,12(r5)
 4009798:	18880014 	ori	r2,r3,8192
 400979c:	28801915 	stw	r2,100(r5)
 40097a0:	280d883a 	mov	r6,r5
 40097a4:	8009883a 	mov	r4,r16
 40097a8:	880b883a 	mov	r5,r17
 40097ac:	dfc00317 	ldw	ra,12(sp)
 40097b0:	dc400217 	ldw	r17,8(sp)
 40097b4:	dc000117 	ldw	r16,4(sp)
 40097b8:	dec00404 	addi	sp,sp,16
 40097bc:	40095cc1 	jmpi	40095cc <__fputwc>
 40097c0:	8009883a 	mov	r4,r16
 40097c4:	d9400015 	stw	r5,0(sp)
 40097c8:	400491c0 	call	400491c <__sinit>
 40097cc:	d9400017 	ldw	r5,0(sp)
 40097d0:	003feb06 	br	4009780 <fputwc+0x2c>

040097d4 <_fstat_r>:
 40097d4:	defffd04 	addi	sp,sp,-12
 40097d8:	2805883a 	mov	r2,r5
 40097dc:	dc000015 	stw	r16,0(sp)
 40097e0:	04010074 	movhi	r16,1025
 40097e4:	dc400115 	stw	r17,4(sp)
 40097e8:	840ced04 	addi	r16,r16,13236
 40097ec:	2023883a 	mov	r17,r4
 40097f0:	300b883a 	mov	r5,r6
 40097f4:	1009883a 	mov	r4,r2
 40097f8:	dfc00215 	stw	ra,8(sp)
 40097fc:	80000015 	stw	zero,0(r16)
 4009800:	400d4400 	call	400d440 <fstat>
 4009804:	00ffffc4 	movi	r3,-1
 4009808:	10c00526 	beq	r2,r3,4009820 <_fstat_r+0x4c>
 400980c:	dfc00217 	ldw	ra,8(sp)
 4009810:	dc400117 	ldw	r17,4(sp)
 4009814:	dc000017 	ldw	r16,0(sp)
 4009818:	dec00304 	addi	sp,sp,12
 400981c:	f800283a 	ret
 4009820:	80c00017 	ldw	r3,0(r16)
 4009824:	183ff926 	beq	r3,zero,400980c <_fstat_r+0x38>
 4009828:	88c00015 	stw	r3,0(r17)
 400982c:	003ff706 	br	400980c <_fstat_r+0x38>

04009830 <_isatty_r>:
 4009830:	defffd04 	addi	sp,sp,-12
 4009834:	dc000015 	stw	r16,0(sp)
 4009838:	04010074 	movhi	r16,1025
 400983c:	dc400115 	stw	r17,4(sp)
 4009840:	840ced04 	addi	r16,r16,13236
 4009844:	2023883a 	mov	r17,r4
 4009848:	2809883a 	mov	r4,r5
 400984c:	dfc00215 	stw	ra,8(sp)
 4009850:	80000015 	stw	zero,0(r16)
 4009854:	400d5340 	call	400d534 <isatty>
 4009858:	00ffffc4 	movi	r3,-1
 400985c:	10c00526 	beq	r2,r3,4009874 <_isatty_r+0x44>
 4009860:	dfc00217 	ldw	ra,8(sp)
 4009864:	dc400117 	ldw	r17,4(sp)
 4009868:	dc000017 	ldw	r16,0(sp)
 400986c:	dec00304 	addi	sp,sp,12
 4009870:	f800283a 	ret
 4009874:	80c00017 	ldw	r3,0(r16)
 4009878:	183ff926 	beq	r3,zero,4009860 <_isatty_r+0x30>
 400987c:	88c00015 	stw	r3,0(r17)
 4009880:	003ff706 	br	4009860 <_isatty_r+0x30>

04009884 <_lseek_r>:
 4009884:	defffd04 	addi	sp,sp,-12
 4009888:	2805883a 	mov	r2,r5
 400988c:	dc000015 	stw	r16,0(sp)
 4009890:	04010074 	movhi	r16,1025
 4009894:	dc400115 	stw	r17,4(sp)
 4009898:	300b883a 	mov	r5,r6
 400989c:	840ced04 	addi	r16,r16,13236
 40098a0:	2023883a 	mov	r17,r4
 40098a4:	380d883a 	mov	r6,r7
 40098a8:	1009883a 	mov	r4,r2
 40098ac:	dfc00215 	stw	ra,8(sp)
 40098b0:	80000015 	stw	zero,0(r16)
 40098b4:	400d7080 	call	400d708 <lseek>
 40098b8:	00ffffc4 	movi	r3,-1
 40098bc:	10c00526 	beq	r2,r3,40098d4 <_lseek_r+0x50>
 40098c0:	dfc00217 	ldw	ra,8(sp)
 40098c4:	dc400117 	ldw	r17,4(sp)
 40098c8:	dc000017 	ldw	r16,0(sp)
 40098cc:	dec00304 	addi	sp,sp,12
 40098d0:	f800283a 	ret
 40098d4:	80c00017 	ldw	r3,0(r16)
 40098d8:	183ff926 	beq	r3,zero,40098c0 <_lseek_r+0x3c>
 40098dc:	88c00015 	stw	r3,0(r17)
 40098e0:	003ff706 	br	40098c0 <_lseek_r+0x3c>

040098e4 <_read_r>:
 40098e4:	defffd04 	addi	sp,sp,-12
 40098e8:	2805883a 	mov	r2,r5
 40098ec:	dc000015 	stw	r16,0(sp)
 40098f0:	04010074 	movhi	r16,1025
 40098f4:	dc400115 	stw	r17,4(sp)
 40098f8:	300b883a 	mov	r5,r6
 40098fc:	840ced04 	addi	r16,r16,13236
 4009900:	2023883a 	mov	r17,r4
 4009904:	380d883a 	mov	r6,r7
 4009908:	1009883a 	mov	r4,r2
 400990c:	dfc00215 	stw	ra,8(sp)
 4009910:	80000015 	stw	zero,0(r16)
 4009914:	400d9200 	call	400d920 <read>
 4009918:	00ffffc4 	movi	r3,-1
 400991c:	10c00526 	beq	r2,r3,4009934 <_read_r+0x50>
 4009920:	dfc00217 	ldw	ra,8(sp)
 4009924:	dc400117 	ldw	r17,4(sp)
 4009928:	dc000017 	ldw	r16,0(sp)
 400992c:	dec00304 	addi	sp,sp,12
 4009930:	f800283a 	ret
 4009934:	80c00017 	ldw	r3,0(r16)
 4009938:	183ff926 	beq	r3,zero,4009920 <_read_r+0x3c>
 400993c:	88c00015 	stw	r3,0(r17)
 4009940:	003ff706 	br	4009920 <_read_r+0x3c>

04009944 <__swbuf_r>:
 4009944:	defffb04 	addi	sp,sp,-20
 4009948:	dcc00315 	stw	r19,12(sp)
 400994c:	dc800215 	stw	r18,8(sp)
 4009950:	dc000015 	stw	r16,0(sp)
 4009954:	dfc00415 	stw	ra,16(sp)
 4009958:	dc400115 	stw	r17,4(sp)
 400995c:	2025883a 	mov	r18,r4
 4009960:	2827883a 	mov	r19,r5
 4009964:	3021883a 	mov	r16,r6
 4009968:	20000226 	beq	r4,zero,4009974 <__swbuf_r+0x30>
 400996c:	20800e17 	ldw	r2,56(r4)
 4009970:	10004226 	beq	r2,zero,4009a7c <__swbuf_r+0x138>
 4009974:	80800617 	ldw	r2,24(r16)
 4009978:	8100030b 	ldhu	r4,12(r16)
 400997c:	80800215 	stw	r2,8(r16)
 4009980:	2080020c 	andi	r2,r4,8
 4009984:	10003626 	beq	r2,zero,4009a60 <__swbuf_r+0x11c>
 4009988:	80c00417 	ldw	r3,16(r16)
 400998c:	18003426 	beq	r3,zero,4009a60 <__swbuf_r+0x11c>
 4009990:	2088000c 	andi	r2,r4,8192
 4009994:	9c403fcc 	andi	r17,r19,255
 4009998:	10001a26 	beq	r2,zero,4009a04 <__swbuf_r+0xc0>
 400999c:	80800017 	ldw	r2,0(r16)
 40099a0:	81000517 	ldw	r4,20(r16)
 40099a4:	10c7c83a 	sub	r3,r2,r3
 40099a8:	1900200e 	bge	r3,r4,4009a2c <__swbuf_r+0xe8>
 40099ac:	18c00044 	addi	r3,r3,1
 40099b0:	81000217 	ldw	r4,8(r16)
 40099b4:	11400044 	addi	r5,r2,1
 40099b8:	81400015 	stw	r5,0(r16)
 40099bc:	213fffc4 	addi	r4,r4,-1
 40099c0:	81000215 	stw	r4,8(r16)
 40099c4:	14c00005 	stb	r19,0(r2)
 40099c8:	80800517 	ldw	r2,20(r16)
 40099cc:	10c01e26 	beq	r2,r3,4009a48 <__swbuf_r+0x104>
 40099d0:	8080030b 	ldhu	r2,12(r16)
 40099d4:	1080004c 	andi	r2,r2,1
 40099d8:	10000226 	beq	r2,zero,40099e4 <__swbuf_r+0xa0>
 40099dc:	00800284 	movi	r2,10
 40099e0:	88801926 	beq	r17,r2,4009a48 <__swbuf_r+0x104>
 40099e4:	8805883a 	mov	r2,r17
 40099e8:	dfc00417 	ldw	ra,16(sp)
 40099ec:	dcc00317 	ldw	r19,12(sp)
 40099f0:	dc800217 	ldw	r18,8(sp)
 40099f4:	dc400117 	ldw	r17,4(sp)
 40099f8:	dc000017 	ldw	r16,0(sp)
 40099fc:	dec00504 	addi	sp,sp,20
 4009a00:	f800283a 	ret
 4009a04:	81401917 	ldw	r5,100(r16)
 4009a08:	00b7ffc4 	movi	r2,-8193
 4009a0c:	21080014 	ori	r4,r4,8192
 4009a10:	2884703a 	and	r2,r5,r2
 4009a14:	80801915 	stw	r2,100(r16)
 4009a18:	80800017 	ldw	r2,0(r16)
 4009a1c:	8100030d 	sth	r4,12(r16)
 4009a20:	81000517 	ldw	r4,20(r16)
 4009a24:	10c7c83a 	sub	r3,r2,r3
 4009a28:	193fe016 	blt	r3,r4,40099ac <__swbuf_r+0x68>
 4009a2c:	800b883a 	mov	r5,r16
 4009a30:	9009883a 	mov	r4,r18
 4009a34:	40045300 	call	4004530 <_fflush_r>
 4009a38:	1000071e 	bne	r2,zero,4009a58 <__swbuf_r+0x114>
 4009a3c:	80800017 	ldw	r2,0(r16)
 4009a40:	00c00044 	movi	r3,1
 4009a44:	003fda06 	br	40099b0 <__swbuf_r+0x6c>
 4009a48:	800b883a 	mov	r5,r16
 4009a4c:	9009883a 	mov	r4,r18
 4009a50:	40045300 	call	4004530 <_fflush_r>
 4009a54:	103fe326 	beq	r2,zero,40099e4 <__swbuf_r+0xa0>
 4009a58:	00bfffc4 	movi	r2,-1
 4009a5c:	003fe206 	br	40099e8 <__swbuf_r+0xa4>
 4009a60:	800b883a 	mov	r5,r16
 4009a64:	9009883a 	mov	r4,r18
 4009a68:	40029100 	call	4002910 <__swsetup_r>
 4009a6c:	103ffa1e 	bne	r2,zero,4009a58 <__swbuf_r+0x114>
 4009a70:	8100030b 	ldhu	r4,12(r16)
 4009a74:	80c00417 	ldw	r3,16(r16)
 4009a78:	003fc506 	br	4009990 <__swbuf_r+0x4c>
 4009a7c:	400491c0 	call	400491c <__sinit>
 4009a80:	003fbc06 	br	4009974 <__swbuf_r+0x30>

04009a84 <__swbuf>:
 4009a84:	00810074 	movhi	r2,1025
 4009a88:	10861c04 	addi	r2,r2,6256
 4009a8c:	280d883a 	mov	r6,r5
 4009a90:	200b883a 	mov	r5,r4
 4009a94:	11000017 	ldw	r4,0(r2)
 4009a98:	40099441 	jmpi	4009944 <__swbuf_r>

04009a9c <_wcrtomb_r>:
 4009a9c:	defff604 	addi	sp,sp,-40
 4009aa0:	00810074 	movhi	r2,1025
 4009aa4:	dc800815 	stw	r18,32(sp)
 4009aa8:	dc400715 	stw	r17,28(sp)
 4009aac:	dc000615 	stw	r16,24(sp)
 4009ab0:	10862004 	addi	r2,r2,6272
 4009ab4:	dfc00915 	stw	ra,36(sp)
 4009ab8:	2021883a 	mov	r16,r4
 4009abc:	3823883a 	mov	r17,r7
 4009ac0:	14800017 	ldw	r18,0(r2)
 4009ac4:	28001426 	beq	r5,zero,4009b18 <_wcrtomb_r+0x7c>
 4009ac8:	d9400415 	stw	r5,16(sp)
 4009acc:	d9800515 	stw	r6,20(sp)
 4009ad0:	400546c0 	call	400546c <__locale_charset>
 4009ad4:	d9800517 	ldw	r6,20(sp)
 4009ad8:	d9400417 	ldw	r5,16(sp)
 4009adc:	100f883a 	mov	r7,r2
 4009ae0:	dc400015 	stw	r17,0(sp)
 4009ae4:	8009883a 	mov	r4,r16
 4009ae8:	903ee83a 	callr	r18
 4009aec:	00ffffc4 	movi	r3,-1
 4009af0:	10c0031e 	bne	r2,r3,4009b00 <_wcrtomb_r+0x64>
 4009af4:	88000015 	stw	zero,0(r17)
 4009af8:	00c02284 	movi	r3,138
 4009afc:	80c00015 	stw	r3,0(r16)
 4009b00:	dfc00917 	ldw	ra,36(sp)
 4009b04:	dc800817 	ldw	r18,32(sp)
 4009b08:	dc400717 	ldw	r17,28(sp)
 4009b0c:	dc000617 	ldw	r16,24(sp)
 4009b10:	dec00a04 	addi	sp,sp,40
 4009b14:	f800283a 	ret
 4009b18:	400546c0 	call	400546c <__locale_charset>
 4009b1c:	100f883a 	mov	r7,r2
 4009b20:	dc400015 	stw	r17,0(sp)
 4009b24:	000d883a 	mov	r6,zero
 4009b28:	d9400104 	addi	r5,sp,4
 4009b2c:	8009883a 	mov	r4,r16
 4009b30:	903ee83a 	callr	r18
 4009b34:	003fed06 	br	4009aec <_wcrtomb_r+0x50>

04009b38 <wcrtomb>:
 4009b38:	defff604 	addi	sp,sp,-40
 4009b3c:	00810074 	movhi	r2,1025
 4009b40:	dc800615 	stw	r18,24(sp)
 4009b44:	dc400515 	stw	r17,20(sp)
 4009b48:	10861c04 	addi	r2,r2,6256
 4009b4c:	dfc00915 	stw	ra,36(sp)
 4009b50:	dd000815 	stw	r20,32(sp)
 4009b54:	dcc00715 	stw	r19,28(sp)
 4009b58:	dc000415 	stw	r16,16(sp)
 4009b5c:	3025883a 	mov	r18,r6
 4009b60:	14400017 	ldw	r17,0(r2)
 4009b64:	20001926 	beq	r4,zero,4009bcc <wcrtomb+0x94>
 4009b68:	00810074 	movhi	r2,1025
 4009b6c:	10862004 	addi	r2,r2,6272
 4009b70:	15000017 	ldw	r20,0(r2)
 4009b74:	2021883a 	mov	r16,r4
 4009b78:	2827883a 	mov	r19,r5
 4009b7c:	400546c0 	call	400546c <__locale_charset>
 4009b80:	100f883a 	mov	r7,r2
 4009b84:	dc800015 	stw	r18,0(sp)
 4009b88:	980d883a 	mov	r6,r19
 4009b8c:	800b883a 	mov	r5,r16
 4009b90:	8809883a 	mov	r4,r17
 4009b94:	a03ee83a 	callr	r20
 4009b98:	00ffffc4 	movi	r3,-1
 4009b9c:	10c0031e 	bne	r2,r3,4009bac <wcrtomb+0x74>
 4009ba0:	90000015 	stw	zero,0(r18)
 4009ba4:	00c02284 	movi	r3,138
 4009ba8:	88c00015 	stw	r3,0(r17)
 4009bac:	dfc00917 	ldw	ra,36(sp)
 4009bb0:	dd000817 	ldw	r20,32(sp)
 4009bb4:	dcc00717 	ldw	r19,28(sp)
 4009bb8:	dc800617 	ldw	r18,24(sp)
 4009bbc:	dc400517 	ldw	r17,20(sp)
 4009bc0:	dc000417 	ldw	r16,16(sp)
 4009bc4:	dec00a04 	addi	sp,sp,40
 4009bc8:	f800283a 	ret
 4009bcc:	00810074 	movhi	r2,1025
 4009bd0:	10862004 	addi	r2,r2,6272
 4009bd4:	14000017 	ldw	r16,0(r2)
 4009bd8:	400546c0 	call	400546c <__locale_charset>
 4009bdc:	100f883a 	mov	r7,r2
 4009be0:	dc800015 	stw	r18,0(sp)
 4009be4:	000d883a 	mov	r6,zero
 4009be8:	d9400104 	addi	r5,sp,4
 4009bec:	8809883a 	mov	r4,r17
 4009bf0:	803ee83a 	callr	r16
 4009bf4:	003fe806 	br	4009b98 <wcrtomb+0x60>

04009bf8 <__ascii_wctomb>:
 4009bf8:	28000526 	beq	r5,zero,4009c10 <__ascii_wctomb+0x18>
 4009bfc:	00803fc4 	movi	r2,255
 4009c00:	11800536 	bltu	r2,r6,4009c18 <__ascii_wctomb+0x20>
 4009c04:	29800005 	stb	r6,0(r5)
 4009c08:	00800044 	movi	r2,1
 4009c0c:	f800283a 	ret
 4009c10:	0005883a 	mov	r2,zero
 4009c14:	f800283a 	ret
 4009c18:	00802284 	movi	r2,138
 4009c1c:	20800015 	stw	r2,0(r4)
 4009c20:	00bfffc4 	movi	r2,-1
 4009c24:	f800283a 	ret

04009c28 <_wctomb_r>:
 4009c28:	00810074 	movhi	r2,1025
 4009c2c:	defff904 	addi	sp,sp,-28
 4009c30:	10862004 	addi	r2,r2,6272
 4009c34:	dfc00615 	stw	ra,24(sp)
 4009c38:	dc400515 	stw	r17,20(sp)
 4009c3c:	dc000415 	stw	r16,16(sp)
 4009c40:	3823883a 	mov	r17,r7
 4009c44:	14000017 	ldw	r16,0(r2)
 4009c48:	d9000115 	stw	r4,4(sp)
 4009c4c:	d9400215 	stw	r5,8(sp)
 4009c50:	d9800315 	stw	r6,12(sp)
 4009c54:	400546c0 	call	400546c <__locale_charset>
 4009c58:	d9800317 	ldw	r6,12(sp)
 4009c5c:	d9400217 	ldw	r5,8(sp)
 4009c60:	d9000117 	ldw	r4,4(sp)
 4009c64:	100f883a 	mov	r7,r2
 4009c68:	dc400015 	stw	r17,0(sp)
 4009c6c:	803ee83a 	callr	r16
 4009c70:	dfc00617 	ldw	ra,24(sp)
 4009c74:	dc400517 	ldw	r17,20(sp)
 4009c78:	dc000417 	ldw	r16,16(sp)
 4009c7c:	dec00704 	addi	sp,sp,28
 4009c80:	f800283a 	ret

04009c84 <__udivdi3>:
 4009c84:	defff404 	addi	sp,sp,-48
 4009c88:	dcc00515 	stw	r19,20(sp)
 4009c8c:	dc000215 	stw	r16,8(sp)
 4009c90:	dfc00b15 	stw	ra,44(sp)
 4009c94:	df000a15 	stw	fp,40(sp)
 4009c98:	ddc00915 	stw	r23,36(sp)
 4009c9c:	dd800815 	stw	r22,32(sp)
 4009ca0:	dd400715 	stw	r21,28(sp)
 4009ca4:	dd000615 	stw	r20,24(sp)
 4009ca8:	dc800415 	stw	r18,16(sp)
 4009cac:	dc400315 	stw	r17,12(sp)
 4009cb0:	2027883a 	mov	r19,r4
 4009cb4:	2821883a 	mov	r16,r5
 4009cb8:	3800461e 	bne	r7,zero,4009dd4 <__udivdi3+0x150>
 4009cbc:	3023883a 	mov	r17,r6
 4009cc0:	2025883a 	mov	r18,r4
 4009cc4:	2980572e 	bgeu	r5,r6,4009e24 <__udivdi3+0x1a0>
 4009cc8:	00bfffd4 	movui	r2,65535
 4009ccc:	282d883a 	mov	r22,r5
 4009cd0:	1180b236 	bltu	r2,r6,4009f9c <__udivdi3+0x318>
 4009cd4:	00803fc4 	movi	r2,255
 4009cd8:	1185803a 	cmpltu	r2,r2,r6
 4009cdc:	100490fa 	slli	r2,r2,3
 4009ce0:	3086d83a 	srl	r3,r6,r2
 4009ce4:	01010074 	movhi	r4,1025
 4009ce8:	213f2404 	addi	r4,r4,-880
 4009cec:	20c7883a 	add	r3,r4,r3
 4009cf0:	18c00003 	ldbu	r3,0(r3)
 4009cf4:	1885883a 	add	r2,r3,r2
 4009cf8:	00c00804 	movi	r3,32
 4009cfc:	1887c83a 	sub	r3,r3,r2
 4009d00:	18000526 	beq	r3,zero,4009d18 <__udivdi3+0x94>
 4009d04:	80e0983a 	sll	r16,r16,r3
 4009d08:	9884d83a 	srl	r2,r19,r2
 4009d0c:	30e2983a 	sll	r17,r6,r3
 4009d10:	98e4983a 	sll	r18,r19,r3
 4009d14:	142cb03a 	or	r22,r2,r16
 4009d18:	882ad43a 	srli	r21,r17,16
 4009d1c:	b009883a 	mov	r4,r22
 4009d20:	8d3fffcc 	andi	r20,r17,65535
 4009d24:	a80b883a 	mov	r5,r21
 4009d28:	400a9a00 	call	400a9a0 <__umodsi3>
 4009d2c:	b009883a 	mov	r4,r22
 4009d30:	a80b883a 	mov	r5,r21
 4009d34:	1027883a 	mov	r19,r2
 4009d38:	400a93c0 	call	400a93c <__udivsi3>
 4009d3c:	100b883a 	mov	r5,r2
 4009d40:	a009883a 	mov	r4,r20
 4009d44:	102d883a 	mov	r22,r2
 4009d48:	400a9f80 	call	400a9f8 <__mulsi3>
 4009d4c:	9826943a 	slli	r19,r19,16
 4009d50:	9006d43a 	srli	r3,r18,16
 4009d54:	1cc6b03a 	or	r3,r3,r19
 4009d58:	1880052e 	bgeu	r3,r2,4009d70 <__udivdi3+0xec>
 4009d5c:	1c47883a 	add	r3,r3,r17
 4009d60:	b13fffc4 	addi	r4,r22,-1
 4009d64:	1c400136 	bltu	r3,r17,4009d6c <__udivdi3+0xe8>
 4009d68:	18814236 	bltu	r3,r2,400a274 <__udivdi3+0x5f0>
 4009d6c:	202d883a 	mov	r22,r4
 4009d70:	18a1c83a 	sub	r16,r3,r2
 4009d74:	8009883a 	mov	r4,r16
 4009d78:	a80b883a 	mov	r5,r21
 4009d7c:	400a9a00 	call	400a9a0 <__umodsi3>
 4009d80:	1027883a 	mov	r19,r2
 4009d84:	8009883a 	mov	r4,r16
 4009d88:	a80b883a 	mov	r5,r21
 4009d8c:	9826943a 	slli	r19,r19,16
 4009d90:	400a93c0 	call	400a93c <__udivsi3>
 4009d94:	100b883a 	mov	r5,r2
 4009d98:	a009883a 	mov	r4,r20
 4009d9c:	94bfffcc 	andi	r18,r18,65535
 4009da0:	1021883a 	mov	r16,r2
 4009da4:	94e4b03a 	or	r18,r18,r19
 4009da8:	400a9f80 	call	400a9f8 <__mulsi3>
 4009dac:	9080052e 	bgeu	r18,r2,4009dc4 <__udivdi3+0x140>
 4009db0:	8ca5883a 	add	r18,r17,r18
 4009db4:	80ffffc4 	addi	r3,r16,-1
 4009db8:	94410c36 	bltu	r18,r17,400a1ec <__udivdi3+0x568>
 4009dbc:	90810b2e 	bgeu	r18,r2,400a1ec <__udivdi3+0x568>
 4009dc0:	843fff84 	addi	r16,r16,-2
 4009dc4:	b004943a 	slli	r2,r22,16
 4009dc8:	0007883a 	mov	r3,zero
 4009dcc:	1404b03a 	or	r2,r2,r16
 4009dd0:	00005e06 	br	4009f4c <__udivdi3+0x2c8>
 4009dd4:	29c05b36 	bltu	r5,r7,4009f44 <__udivdi3+0x2c0>
 4009dd8:	00bfffd4 	movui	r2,65535
 4009ddc:	11c0672e 	bgeu	r2,r7,4009f7c <__udivdi3+0x2f8>
 4009de0:	00804034 	movhi	r2,256
 4009de4:	10bfffc4 	addi	r2,r2,-1
 4009de8:	11c10a36 	bltu	r2,r7,400a214 <__udivdi3+0x590>
 4009dec:	00800404 	movi	r2,16
 4009df0:	3886d83a 	srl	r3,r7,r2
 4009df4:	01010074 	movhi	r4,1025
 4009df8:	213f2404 	addi	r4,r4,-880
 4009dfc:	20c7883a 	add	r3,r4,r3
 4009e00:	18c00003 	ldbu	r3,0(r3)
 4009e04:	05c00804 	movi	r23,32
 4009e08:	1885883a 	add	r2,r3,r2
 4009e0c:	b8afc83a 	sub	r23,r23,r2
 4009e10:	b800671e 	bne	r23,zero,4009fb0 <__udivdi3+0x32c>
 4009e14:	3c010536 	bltu	r7,r16,400a22c <__udivdi3+0x5a8>
 4009e18:	9985403a 	cmpgeu	r2,r19,r6
 4009e1c:	0007883a 	mov	r3,zero
 4009e20:	00004a06 	br	4009f4c <__udivdi3+0x2c8>
 4009e24:	3000041e 	bne	r6,zero,4009e38 <__udivdi3+0x1b4>
 4009e28:	000b883a 	mov	r5,zero
 4009e2c:	01000044 	movi	r4,1
 4009e30:	400a93c0 	call	400a93c <__udivsi3>
 4009e34:	1023883a 	mov	r17,r2
 4009e38:	00bfffd4 	movui	r2,65535
 4009e3c:	1440532e 	bgeu	r2,r17,4009f8c <__udivdi3+0x308>
 4009e40:	00804034 	movhi	r2,256
 4009e44:	10bfffc4 	addi	r2,r2,-1
 4009e48:	1440f436 	bltu	r2,r17,400a21c <__udivdi3+0x598>
 4009e4c:	00800404 	movi	r2,16
 4009e50:	8886d83a 	srl	r3,r17,r2
 4009e54:	01010074 	movhi	r4,1025
 4009e58:	213f2404 	addi	r4,r4,-880
 4009e5c:	20c7883a 	add	r3,r4,r3
 4009e60:	18c00003 	ldbu	r3,0(r3)
 4009e64:	1885883a 	add	r2,r3,r2
 4009e68:	00c00804 	movi	r3,32
 4009e6c:	1887c83a 	sub	r3,r3,r2
 4009e70:	1800a51e 	bne	r3,zero,400a108 <__udivdi3+0x484>
 4009e74:	882ad43a 	srli	r21,r17,16
 4009e78:	8461c83a 	sub	r16,r16,r17
 4009e7c:	8d3fffcc 	andi	r20,r17,65535
 4009e80:	00c00044 	movi	r3,1
 4009e84:	a80b883a 	mov	r5,r21
 4009e88:	8009883a 	mov	r4,r16
 4009e8c:	d8c00115 	stw	r3,4(sp)
 4009e90:	400a9a00 	call	400a9a0 <__umodsi3>
 4009e94:	a80b883a 	mov	r5,r21
 4009e98:	8009883a 	mov	r4,r16
 4009e9c:	1027883a 	mov	r19,r2
 4009ea0:	400a93c0 	call	400a93c <__udivsi3>
 4009ea4:	a00b883a 	mov	r5,r20
 4009ea8:	1009883a 	mov	r4,r2
 4009eac:	102d883a 	mov	r22,r2
 4009eb0:	400a9f80 	call	400a9f8 <__mulsi3>
 4009eb4:	9826943a 	slli	r19,r19,16
 4009eb8:	900ed43a 	srli	r7,r18,16
 4009ebc:	d8c00117 	ldw	r3,4(sp)
 4009ec0:	3cceb03a 	or	r7,r7,r19
 4009ec4:	3880052e 	bgeu	r7,r2,4009edc <__udivdi3+0x258>
 4009ec8:	3c4f883a 	add	r7,r7,r17
 4009ecc:	b13fffc4 	addi	r4,r22,-1
 4009ed0:	3c400136 	bltu	r7,r17,4009ed8 <__udivdi3+0x254>
 4009ed4:	3880e436 	bltu	r7,r2,400a268 <__udivdi3+0x5e4>
 4009ed8:	202d883a 	mov	r22,r4
 4009edc:	38a1c83a 	sub	r16,r7,r2
 4009ee0:	8009883a 	mov	r4,r16
 4009ee4:	a80b883a 	mov	r5,r21
 4009ee8:	d8c00115 	stw	r3,4(sp)
 4009eec:	400a9a00 	call	400a9a0 <__umodsi3>
 4009ef0:	1027883a 	mov	r19,r2
 4009ef4:	8009883a 	mov	r4,r16
 4009ef8:	a80b883a 	mov	r5,r21
 4009efc:	9826943a 	slli	r19,r19,16
 4009f00:	400a93c0 	call	400a93c <__udivsi3>
 4009f04:	a00b883a 	mov	r5,r20
 4009f08:	1009883a 	mov	r4,r2
 4009f0c:	94bfffcc 	andi	r18,r18,65535
 4009f10:	1021883a 	mov	r16,r2
 4009f14:	94e4b03a 	or	r18,r18,r19
 4009f18:	400a9f80 	call	400a9f8 <__mulsi3>
 4009f1c:	d8c00117 	ldw	r3,4(sp)
 4009f20:	9080052e 	bgeu	r18,r2,4009f38 <__udivdi3+0x2b4>
 4009f24:	8ca5883a 	add	r18,r17,r18
 4009f28:	813fffc4 	addi	r4,r16,-1
 4009f2c:	9440ad36 	bltu	r18,r17,400a1e4 <__udivdi3+0x560>
 4009f30:	9080ac2e 	bgeu	r18,r2,400a1e4 <__udivdi3+0x560>
 4009f34:	843fff84 	addi	r16,r16,-2
 4009f38:	b004943a 	slli	r2,r22,16
 4009f3c:	1404b03a 	or	r2,r2,r16
 4009f40:	00000206 	br	4009f4c <__udivdi3+0x2c8>
 4009f44:	0007883a 	mov	r3,zero
 4009f48:	0005883a 	mov	r2,zero
 4009f4c:	dfc00b17 	ldw	ra,44(sp)
 4009f50:	df000a17 	ldw	fp,40(sp)
 4009f54:	ddc00917 	ldw	r23,36(sp)
 4009f58:	dd800817 	ldw	r22,32(sp)
 4009f5c:	dd400717 	ldw	r21,28(sp)
 4009f60:	dd000617 	ldw	r20,24(sp)
 4009f64:	dcc00517 	ldw	r19,20(sp)
 4009f68:	dc800417 	ldw	r18,16(sp)
 4009f6c:	dc400317 	ldw	r17,12(sp)
 4009f70:	dc000217 	ldw	r16,8(sp)
 4009f74:	dec00c04 	addi	sp,sp,48
 4009f78:	f800283a 	ret
 4009f7c:	00803fc4 	movi	r2,255
 4009f80:	11c5803a 	cmpltu	r2,r2,r7
 4009f84:	100490fa 	slli	r2,r2,3
 4009f88:	003f9906 	br	4009df0 <__udivdi3+0x16c>
 4009f8c:	00803fc4 	movi	r2,255
 4009f90:	1445803a 	cmpltu	r2,r2,r17
 4009f94:	100490fa 	slli	r2,r2,3
 4009f98:	003fad06 	br	4009e50 <__udivdi3+0x1cc>
 4009f9c:	00804034 	movhi	r2,256
 4009fa0:	10bfffc4 	addi	r2,r2,-1
 4009fa4:	11809f36 	bltu	r2,r6,400a224 <__udivdi3+0x5a0>
 4009fa8:	00800404 	movi	r2,16
 4009fac:	003f4c06 	br	4009ce0 <__udivdi3+0x5c>
 4009fb0:	3dce983a 	sll	r7,r7,r23
 4009fb4:	30b8d83a 	srl	fp,r6,r2
 4009fb8:	80a2d83a 	srl	r17,r16,r2
 4009fbc:	35cc983a 	sll	r6,r6,r23
 4009fc0:	3f38b03a 	or	fp,r7,fp
 4009fc4:	e024d43a 	srli	r18,fp,16
 4009fc8:	9884d83a 	srl	r2,r19,r2
 4009fcc:	85e0983a 	sll	r16,r16,r23
 4009fd0:	8809883a 	mov	r4,r17
 4009fd4:	900b883a 	mov	r5,r18
 4009fd8:	d9800015 	stw	r6,0(sp)
 4009fdc:	1420b03a 	or	r16,r2,r16
 4009fe0:	400a9a00 	call	400a9a0 <__umodsi3>
 4009fe4:	900b883a 	mov	r5,r18
 4009fe8:	8809883a 	mov	r4,r17
 4009fec:	1029883a 	mov	r20,r2
 4009ff0:	e5bfffcc 	andi	r22,fp,65535
 4009ff4:	400a93c0 	call	400a93c <__udivsi3>
 4009ff8:	100b883a 	mov	r5,r2
 4009ffc:	b009883a 	mov	r4,r22
 400a000:	102b883a 	mov	r21,r2
 400a004:	400a9f80 	call	400a9f8 <__mulsi3>
 400a008:	a028943a 	slli	r20,r20,16
 400a00c:	8006d43a 	srli	r3,r16,16
 400a010:	1d06b03a 	or	r3,r3,r20
 400a014:	1880042e 	bgeu	r3,r2,400a028 <__udivdi3+0x3a4>
 400a018:	1f07883a 	add	r3,r3,fp
 400a01c:	a93fffc4 	addi	r4,r21,-1
 400a020:	1f00892e 	bgeu	r3,fp,400a248 <__udivdi3+0x5c4>
 400a024:	202b883a 	mov	r21,r4
 400a028:	18a3c83a 	sub	r17,r3,r2
 400a02c:	8809883a 	mov	r4,r17
 400a030:	900b883a 	mov	r5,r18
 400a034:	400a9a00 	call	400a9a0 <__umodsi3>
 400a038:	1029883a 	mov	r20,r2
 400a03c:	8809883a 	mov	r4,r17
 400a040:	900b883a 	mov	r5,r18
 400a044:	a028943a 	slli	r20,r20,16
 400a048:	400a93c0 	call	400a93c <__udivsi3>
 400a04c:	100b883a 	mov	r5,r2
 400a050:	b009883a 	mov	r4,r22
 400a054:	843fffcc 	andi	r16,r16,65535
 400a058:	1023883a 	mov	r17,r2
 400a05c:	8520b03a 	or	r16,r16,r20
 400a060:	400a9f80 	call	400a9f8 <__mulsi3>
 400a064:	8080042e 	bgeu	r16,r2,400a078 <__udivdi3+0x3f4>
 400a068:	8721883a 	add	r16,r16,fp
 400a06c:	88ffffc4 	addi	r3,r17,-1
 400a070:	8700712e 	bgeu	r16,fp,400a238 <__udivdi3+0x5b4>
 400a074:	1823883a 	mov	r17,r3
 400a078:	a80e943a 	slli	r7,r21,16
 400a07c:	d8c00017 	ldw	r3,0(sp)
 400a080:	80a1c83a 	sub	r16,r16,r2
 400a084:	3c64b03a 	or	r18,r7,r17
 400a088:	1d3fffcc 	andi	r20,r3,65535
 400a08c:	9022d43a 	srli	r17,r18,16
 400a090:	95bfffcc 	andi	r22,r18,65535
 400a094:	a00b883a 	mov	r5,r20
 400a098:	b009883a 	mov	r4,r22
 400a09c:	182ad43a 	srli	r21,r3,16
 400a0a0:	400a9f80 	call	400a9f8 <__mulsi3>
 400a0a4:	a00b883a 	mov	r5,r20
 400a0a8:	8809883a 	mov	r4,r17
 400a0ac:	1039883a 	mov	fp,r2
 400a0b0:	400a9f80 	call	400a9f8 <__mulsi3>
 400a0b4:	8809883a 	mov	r4,r17
 400a0b8:	a80b883a 	mov	r5,r21
 400a0bc:	1029883a 	mov	r20,r2
 400a0c0:	400a9f80 	call	400a9f8 <__mulsi3>
 400a0c4:	a80b883a 	mov	r5,r21
 400a0c8:	b009883a 	mov	r4,r22
 400a0cc:	1023883a 	mov	r17,r2
 400a0d0:	400a9f80 	call	400a9f8 <__mulsi3>
 400a0d4:	e006d43a 	srli	r3,fp,16
 400a0d8:	1505883a 	add	r2,r2,r20
 400a0dc:	1887883a 	add	r3,r3,r2
 400a0e0:	1d00022e 	bgeu	r3,r20,400a0ec <__udivdi3+0x468>
 400a0e4:	00800074 	movhi	r2,1
 400a0e8:	88a3883a 	add	r17,r17,r2
 400a0ec:	1804d43a 	srli	r2,r3,16
 400a0f0:	1463883a 	add	r17,r2,r17
 400a0f4:	84404436 	bltu	r16,r17,400a208 <__udivdi3+0x584>
 400a0f8:	84403e26 	beq	r16,r17,400a1f4 <__udivdi3+0x570>
 400a0fc:	9005883a 	mov	r2,r18
 400a100:	0007883a 	mov	r3,zero
 400a104:	003f9106 	br	4009f4c <__udivdi3+0x2c8>
 400a108:	88e2983a 	sll	r17,r17,r3
 400a10c:	80aed83a 	srl	r23,r16,r2
 400a110:	80e0983a 	sll	r16,r16,r3
 400a114:	882ad43a 	srli	r21,r17,16
 400a118:	9884d83a 	srl	r2,r19,r2
 400a11c:	b809883a 	mov	r4,r23
 400a120:	a80b883a 	mov	r5,r21
 400a124:	98e4983a 	sll	r18,r19,r3
 400a128:	142cb03a 	or	r22,r2,r16
 400a12c:	400a9a00 	call	400a9a0 <__umodsi3>
 400a130:	b809883a 	mov	r4,r23
 400a134:	a80b883a 	mov	r5,r21
 400a138:	1027883a 	mov	r19,r2
 400a13c:	8d3fffcc 	andi	r20,r17,65535
 400a140:	400a93c0 	call	400a93c <__udivsi3>
 400a144:	a009883a 	mov	r4,r20
 400a148:	100b883a 	mov	r5,r2
 400a14c:	102f883a 	mov	r23,r2
 400a150:	400a9f80 	call	400a9f8 <__mulsi3>
 400a154:	9826943a 	slli	r19,r19,16
 400a158:	b008d43a 	srli	r4,r22,16
 400a15c:	24c8b03a 	or	r4,r4,r19
 400a160:	2080062e 	bgeu	r4,r2,400a17c <__udivdi3+0x4f8>
 400a164:	2449883a 	add	r4,r4,r17
 400a168:	b8ffffc4 	addi	r3,r23,-1
 400a16c:	24403c36 	bltu	r4,r17,400a260 <__udivdi3+0x5dc>
 400a170:	20803b2e 	bgeu	r4,r2,400a260 <__udivdi3+0x5dc>
 400a174:	bdffff84 	addi	r23,r23,-2
 400a178:	2449883a 	add	r4,r4,r17
 400a17c:	20a1c83a 	sub	r16,r4,r2
 400a180:	a80b883a 	mov	r5,r21
 400a184:	8009883a 	mov	r4,r16
 400a188:	400a9a00 	call	400a9a0 <__umodsi3>
 400a18c:	a80b883a 	mov	r5,r21
 400a190:	8009883a 	mov	r4,r16
 400a194:	1027883a 	mov	r19,r2
 400a198:	400a93c0 	call	400a93c <__udivsi3>
 400a19c:	a009883a 	mov	r4,r20
 400a1a0:	100b883a 	mov	r5,r2
 400a1a4:	9826943a 	slli	r19,r19,16
 400a1a8:	1039883a 	mov	fp,r2
 400a1ac:	400a9f80 	call	400a9f8 <__mulsi3>
 400a1b0:	b13fffcc 	andi	r4,r22,65535
 400a1b4:	24c8b03a 	or	r4,r4,r19
 400a1b8:	2080062e 	bgeu	r4,r2,400a1d4 <__udivdi3+0x550>
 400a1bc:	2449883a 	add	r4,r4,r17
 400a1c0:	e0ffffc4 	addi	r3,fp,-1
 400a1c4:	24402436 	bltu	r4,r17,400a258 <__udivdi3+0x5d4>
 400a1c8:	2080232e 	bgeu	r4,r2,400a258 <__udivdi3+0x5d4>
 400a1cc:	e73fff84 	addi	fp,fp,-2
 400a1d0:	2449883a 	add	r4,r4,r17
 400a1d4:	b82e943a 	slli	r23,r23,16
 400a1d8:	20a1c83a 	sub	r16,r4,r2
 400a1dc:	bf06b03a 	or	r3,r23,fp
 400a1e0:	003f2806 	br	4009e84 <__udivdi3+0x200>
 400a1e4:	2021883a 	mov	r16,r4
 400a1e8:	003f5306 	br	4009f38 <__udivdi3+0x2b4>
 400a1ec:	1821883a 	mov	r16,r3
 400a1f0:	003ef406 	br	4009dc4 <__udivdi3+0x140>
 400a1f4:	1806943a 	slli	r3,r3,16
 400a1f8:	9de6983a 	sll	r19,r19,r23
 400a1fc:	e73fffcc 	andi	fp,fp,65535
 400a200:	1f07883a 	add	r3,r3,fp
 400a204:	98ffbd2e 	bgeu	r19,r3,400a0fc <__udivdi3+0x478>
 400a208:	90bfffc4 	addi	r2,r18,-1
 400a20c:	0007883a 	mov	r3,zero
 400a210:	003f4e06 	br	4009f4c <__udivdi3+0x2c8>
 400a214:	00800604 	movi	r2,24
 400a218:	003ef506 	br	4009df0 <__udivdi3+0x16c>
 400a21c:	00800604 	movi	r2,24
 400a220:	003f0b06 	br	4009e50 <__udivdi3+0x1cc>
 400a224:	00800604 	movi	r2,24
 400a228:	003ead06 	br	4009ce0 <__udivdi3+0x5c>
 400a22c:	0007883a 	mov	r3,zero
 400a230:	00800044 	movi	r2,1
 400a234:	003f4506 	br	4009f4c <__udivdi3+0x2c8>
 400a238:	80bf8e2e 	bgeu	r16,r2,400a074 <__udivdi3+0x3f0>
 400a23c:	8c7fff84 	addi	r17,r17,-2
 400a240:	8721883a 	add	r16,r16,fp
 400a244:	003f8c06 	br	400a078 <__udivdi3+0x3f4>
 400a248:	18bf762e 	bgeu	r3,r2,400a024 <__udivdi3+0x3a0>
 400a24c:	ad7fff84 	addi	r21,r21,-2
 400a250:	1f07883a 	add	r3,r3,fp
 400a254:	003f7406 	br	400a028 <__udivdi3+0x3a4>
 400a258:	1839883a 	mov	fp,r3
 400a25c:	003fdd06 	br	400a1d4 <__udivdi3+0x550>
 400a260:	182f883a 	mov	r23,r3
 400a264:	003fc506 	br	400a17c <__udivdi3+0x4f8>
 400a268:	b5bfff84 	addi	r22,r22,-2
 400a26c:	3c4f883a 	add	r7,r7,r17
 400a270:	003f1a06 	br	4009edc <__udivdi3+0x258>
 400a274:	b5bfff84 	addi	r22,r22,-2
 400a278:	1c47883a 	add	r3,r3,r17
 400a27c:	003ebc06 	br	4009d70 <__udivdi3+0xec>

0400a280 <__umoddi3>:
 400a280:	defff304 	addi	sp,sp,-52
 400a284:	df000b15 	stw	fp,44(sp)
 400a288:	dc400415 	stw	r17,16(sp)
 400a28c:	dc000315 	stw	r16,12(sp)
 400a290:	dfc00c15 	stw	ra,48(sp)
 400a294:	ddc00a15 	stw	r23,40(sp)
 400a298:	dd800915 	stw	r22,36(sp)
 400a29c:	dd400815 	stw	r21,32(sp)
 400a2a0:	dd000715 	stw	r20,28(sp)
 400a2a4:	dcc00615 	stw	r19,24(sp)
 400a2a8:	dc800515 	stw	r18,20(sp)
 400a2ac:	2021883a 	mov	r16,r4
 400a2b0:	2823883a 	mov	r17,r5
 400a2b4:	2839883a 	mov	fp,r5
 400a2b8:	3800401e 	bne	r7,zero,400a3bc <__umoddi3+0x13c>
 400a2bc:	3027883a 	mov	r19,r6
 400a2c0:	2029883a 	mov	r20,r4
 400a2c4:	2980552e 	bgeu	r5,r6,400a41c <__umoddi3+0x19c>
 400a2c8:	00bfffd4 	movui	r2,65535
 400a2cc:	1180a236 	bltu	r2,r6,400a558 <__umoddi3+0x2d8>
 400a2d0:	01003fc4 	movi	r4,255
 400a2d4:	2189803a 	cmpltu	r4,r4,r6
 400a2d8:	200890fa 	slli	r4,r4,3
 400a2dc:	3104d83a 	srl	r2,r6,r4
 400a2e0:	00c10074 	movhi	r3,1025
 400a2e4:	18ff2404 	addi	r3,r3,-880
 400a2e8:	1885883a 	add	r2,r3,r2
 400a2ec:	10c00003 	ldbu	r3,0(r2)
 400a2f0:	00800804 	movi	r2,32
 400a2f4:	1909883a 	add	r4,r3,r4
 400a2f8:	1125c83a 	sub	r18,r2,r4
 400a2fc:	90000526 	beq	r18,zero,400a314 <__umoddi3+0x94>
 400a300:	8ca2983a 	sll	r17,r17,r18
 400a304:	8108d83a 	srl	r4,r16,r4
 400a308:	34a6983a 	sll	r19,r6,r18
 400a30c:	84a8983a 	sll	r20,r16,r18
 400a310:	2478b03a 	or	fp,r4,r17
 400a314:	982cd43a 	srli	r22,r19,16
 400a318:	e009883a 	mov	r4,fp
 400a31c:	9dffffcc 	andi	r23,r19,65535
 400a320:	b00b883a 	mov	r5,r22
 400a324:	400a9a00 	call	400a9a0 <__umodsi3>
 400a328:	b00b883a 	mov	r5,r22
 400a32c:	e009883a 	mov	r4,fp
 400a330:	102b883a 	mov	r21,r2
 400a334:	400a93c0 	call	400a93c <__udivsi3>
 400a338:	100b883a 	mov	r5,r2
 400a33c:	b809883a 	mov	r4,r23
 400a340:	400a9f80 	call	400a9f8 <__mulsi3>
 400a344:	a82a943a 	slli	r21,r21,16
 400a348:	a006d43a 	srli	r3,r20,16
 400a34c:	1d46b03a 	or	r3,r3,r21
 400a350:	1880032e 	bgeu	r3,r2,400a360 <__umoddi3+0xe0>
 400a354:	1cc7883a 	add	r3,r3,r19
 400a358:	1cc00136 	bltu	r3,r19,400a360 <__umoddi3+0xe0>
 400a35c:	18813136 	bltu	r3,r2,400a824 <__umoddi3+0x5a4>
 400a360:	18a1c83a 	sub	r16,r3,r2
 400a364:	b00b883a 	mov	r5,r22
 400a368:	8009883a 	mov	r4,r16
 400a36c:	400a9a00 	call	400a9a0 <__umodsi3>
 400a370:	b00b883a 	mov	r5,r22
 400a374:	8009883a 	mov	r4,r16
 400a378:	1023883a 	mov	r17,r2
 400a37c:	400a93c0 	call	400a93c <__udivsi3>
 400a380:	100b883a 	mov	r5,r2
 400a384:	b809883a 	mov	r4,r23
 400a388:	8822943a 	slli	r17,r17,16
 400a38c:	400a9f80 	call	400a9f8 <__mulsi3>
 400a390:	a0ffffcc 	andi	r3,r20,65535
 400a394:	1c46b03a 	or	r3,r3,r17
 400a398:	1880042e 	bgeu	r3,r2,400a3ac <__umoddi3+0x12c>
 400a39c:	1cc7883a 	add	r3,r3,r19
 400a3a0:	1cc00236 	bltu	r3,r19,400a3ac <__umoddi3+0x12c>
 400a3a4:	1880012e 	bgeu	r3,r2,400a3ac <__umoddi3+0x12c>
 400a3a8:	1cc7883a 	add	r3,r3,r19
 400a3ac:	1885c83a 	sub	r2,r3,r2
 400a3b0:	1484d83a 	srl	r2,r2,r18
 400a3b4:	0007883a 	mov	r3,zero
 400a3b8:	00005306 	br	400a508 <__umoddi3+0x288>
 400a3bc:	29c05036 	bltu	r5,r7,400a500 <__umoddi3+0x280>
 400a3c0:	00bfffd4 	movui	r2,65535
 400a3c4:	11c05c2e 	bgeu	r2,r7,400a538 <__umoddi3+0x2b8>
 400a3c8:	00804034 	movhi	r2,256
 400a3cc:	10bfffc4 	addi	r2,r2,-1
 400a3d0:	11c10636 	bltu	r2,r7,400a7ec <__umoddi3+0x56c>
 400a3d4:	01000404 	movi	r4,16
 400a3d8:	3904d83a 	srl	r2,r7,r4
 400a3dc:	00c10074 	movhi	r3,1025
 400a3e0:	18ff2404 	addi	r3,r3,-880
 400a3e4:	1885883a 	add	r2,r3,r2
 400a3e8:	14c00003 	ldbu	r19,0(r2)
 400a3ec:	00c00804 	movi	r3,32
 400a3f0:	9927883a 	add	r19,r19,r4
 400a3f4:	1ce9c83a 	sub	r20,r3,r19
 400a3f8:	a0005c1e 	bne	r20,zero,400a56c <__umoddi3+0x2ec>
 400a3fc:	3c400136 	bltu	r7,r17,400a404 <__umoddi3+0x184>
 400a400:	81810a36 	bltu	r16,r6,400a82c <__umoddi3+0x5ac>
 400a404:	8185c83a 	sub	r2,r16,r6
 400a408:	89e3c83a 	sub	r17,r17,r7
 400a40c:	8089803a 	cmpltu	r4,r16,r2
 400a410:	8939c83a 	sub	fp,r17,r4
 400a414:	e007883a 	mov	r3,fp
 400a418:	00003b06 	br	400a508 <__umoddi3+0x288>
 400a41c:	3000041e 	bne	r6,zero,400a430 <__umoddi3+0x1b0>
 400a420:	000b883a 	mov	r5,zero
 400a424:	01000044 	movi	r4,1
 400a428:	400a93c0 	call	400a93c <__udivsi3>
 400a42c:	1027883a 	mov	r19,r2
 400a430:	00bfffd4 	movui	r2,65535
 400a434:	14c0442e 	bgeu	r2,r19,400a548 <__umoddi3+0x2c8>
 400a438:	00804034 	movhi	r2,256
 400a43c:	10bfffc4 	addi	r2,r2,-1
 400a440:	14c0ec36 	bltu	r2,r19,400a7f4 <__umoddi3+0x574>
 400a444:	00800404 	movi	r2,16
 400a448:	9886d83a 	srl	r3,r19,r2
 400a44c:	01010074 	movhi	r4,1025
 400a450:	213f2404 	addi	r4,r4,-880
 400a454:	20c7883a 	add	r3,r4,r3
 400a458:	18c00003 	ldbu	r3,0(r3)
 400a45c:	1887883a 	add	r3,r3,r2
 400a460:	00800804 	movi	r2,32
 400a464:	10e5c83a 	sub	r18,r2,r3
 400a468:	9000ab1e 	bne	r18,zero,400a718 <__umoddi3+0x498>
 400a46c:	982cd43a 	srli	r22,r19,16
 400a470:	8ce3c83a 	sub	r17,r17,r19
 400a474:	9dffffcc 	andi	r23,r19,65535
 400a478:	b00b883a 	mov	r5,r22
 400a47c:	8809883a 	mov	r4,r17
 400a480:	400a9a00 	call	400a9a0 <__umodsi3>
 400a484:	b00b883a 	mov	r5,r22
 400a488:	8809883a 	mov	r4,r17
 400a48c:	102b883a 	mov	r21,r2
 400a490:	400a93c0 	call	400a93c <__udivsi3>
 400a494:	b80b883a 	mov	r5,r23
 400a498:	1009883a 	mov	r4,r2
 400a49c:	400a9f80 	call	400a9f8 <__mulsi3>
 400a4a0:	a82a943a 	slli	r21,r21,16
 400a4a4:	a006d43a 	srli	r3,r20,16
 400a4a8:	1d46b03a 	or	r3,r3,r21
 400a4ac:	1880042e 	bgeu	r3,r2,400a4c0 <__umoddi3+0x240>
 400a4b0:	1cc7883a 	add	r3,r3,r19
 400a4b4:	1cc00236 	bltu	r3,r19,400a4c0 <__umoddi3+0x240>
 400a4b8:	1880012e 	bgeu	r3,r2,400a4c0 <__umoddi3+0x240>
 400a4bc:	1cc7883a 	add	r3,r3,r19
 400a4c0:	18a1c83a 	sub	r16,r3,r2
 400a4c4:	b00b883a 	mov	r5,r22
 400a4c8:	8009883a 	mov	r4,r16
 400a4cc:	400a9a00 	call	400a9a0 <__umodsi3>
 400a4d0:	1023883a 	mov	r17,r2
 400a4d4:	b00b883a 	mov	r5,r22
 400a4d8:	8009883a 	mov	r4,r16
 400a4dc:	400a93c0 	call	400a93c <__udivsi3>
 400a4e0:	8822943a 	slli	r17,r17,16
 400a4e4:	b80b883a 	mov	r5,r23
 400a4e8:	1009883a 	mov	r4,r2
 400a4ec:	400a9f80 	call	400a9f8 <__mulsi3>
 400a4f0:	a53fffcc 	andi	r20,r20,65535
 400a4f4:	a446b03a 	or	r3,r20,r17
 400a4f8:	18bfac2e 	bgeu	r3,r2,400a3ac <__umoddi3+0x12c>
 400a4fc:	003fa706 	br	400a39c <__umoddi3+0x11c>
 400a500:	2005883a 	mov	r2,r4
 400a504:	2807883a 	mov	r3,r5
 400a508:	dfc00c17 	ldw	ra,48(sp)
 400a50c:	df000b17 	ldw	fp,44(sp)
 400a510:	ddc00a17 	ldw	r23,40(sp)
 400a514:	dd800917 	ldw	r22,36(sp)
 400a518:	dd400817 	ldw	r21,32(sp)
 400a51c:	dd000717 	ldw	r20,28(sp)
 400a520:	dcc00617 	ldw	r19,24(sp)
 400a524:	dc800517 	ldw	r18,20(sp)
 400a528:	dc400417 	ldw	r17,16(sp)
 400a52c:	dc000317 	ldw	r16,12(sp)
 400a530:	dec00d04 	addi	sp,sp,52
 400a534:	f800283a 	ret
 400a538:	04c03fc4 	movi	r19,255
 400a53c:	99c9803a 	cmpltu	r4,r19,r7
 400a540:	200890fa 	slli	r4,r4,3
 400a544:	003fa406 	br	400a3d8 <__umoddi3+0x158>
 400a548:	00803fc4 	movi	r2,255
 400a54c:	14c5803a 	cmpltu	r2,r2,r19
 400a550:	100490fa 	slli	r2,r2,3
 400a554:	003fbc06 	br	400a448 <__umoddi3+0x1c8>
 400a558:	00804034 	movhi	r2,256
 400a55c:	10bfffc4 	addi	r2,r2,-1
 400a560:	1180a636 	bltu	r2,r6,400a7fc <__umoddi3+0x57c>
 400a564:	01000404 	movi	r4,16
 400a568:	003f5c06 	br	400a2dc <__umoddi3+0x5c>
 400a56c:	3d0e983a 	sll	r7,r7,r20
 400a570:	34ead83a 	srl	r21,r6,r19
 400a574:	8cc6d83a 	srl	r3,r17,r19
 400a578:	8d10983a 	sll	r8,r17,r20
 400a57c:	3d6ab03a 	or	r21,r7,r21
 400a580:	a82cd43a 	srli	r22,r21,16
 400a584:	84e2d83a 	srl	r17,r16,r19
 400a588:	1809883a 	mov	r4,r3
 400a58c:	b00b883a 	mov	r5,r22
 400a590:	8a22b03a 	or	r17,r17,r8
 400a594:	3524983a 	sll	r18,r6,r20
 400a598:	dc400015 	stw	r17,0(sp)
 400a59c:	d8c00115 	stw	r3,4(sp)
 400a5a0:	400a9a00 	call	400a9a0 <__umodsi3>
 400a5a4:	d8c00117 	ldw	r3,4(sp)
 400a5a8:	b00b883a 	mov	r5,r22
 400a5ac:	1039883a 	mov	fp,r2
 400a5b0:	1809883a 	mov	r4,r3
 400a5b4:	400a93c0 	call	400a93c <__udivsi3>
 400a5b8:	adffffcc 	andi	r23,r21,65535
 400a5bc:	100b883a 	mov	r5,r2
 400a5c0:	b809883a 	mov	r4,r23
 400a5c4:	1023883a 	mov	r17,r2
 400a5c8:	400a9f80 	call	400a9f8 <__mulsi3>
 400a5cc:	d9400017 	ldw	r5,0(sp)
 400a5d0:	e008943a 	slli	r4,fp,16
 400a5d4:	8520983a 	sll	r16,r16,r20
 400a5d8:	2806d43a 	srli	r3,r5,16
 400a5dc:	1906b03a 	or	r3,r3,r4
 400a5e0:	1880042e 	bgeu	r3,r2,400a5f4 <__umoddi3+0x374>
 400a5e4:	1d47883a 	add	r3,r3,r21
 400a5e8:	893fffc4 	addi	r4,r17,-1
 400a5ec:	1d40892e 	bgeu	r3,r21,400a814 <__umoddi3+0x594>
 400a5f0:	2023883a 	mov	r17,r4
 400a5f4:	18b9c83a 	sub	fp,r3,r2
 400a5f8:	b00b883a 	mov	r5,r22
 400a5fc:	e009883a 	mov	r4,fp
 400a600:	400a9a00 	call	400a9a0 <__umodsi3>
 400a604:	b00b883a 	mov	r5,r22
 400a608:	e009883a 	mov	r4,fp
 400a60c:	d8800215 	stw	r2,8(sp)
 400a610:	400a93c0 	call	400a93c <__udivsi3>
 400a614:	100b883a 	mov	r5,r2
 400a618:	b809883a 	mov	r4,r23
 400a61c:	102d883a 	mov	r22,r2
 400a620:	400a9f80 	call	400a9f8 <__mulsi3>
 400a624:	d9800217 	ldw	r6,8(sp)
 400a628:	d8c00017 	ldw	r3,0(sp)
 400a62c:	300c943a 	slli	r6,r6,16
 400a630:	1a3fffcc 	andi	r8,r3,65535
 400a634:	4190b03a 	or	r8,r8,r6
 400a638:	4080042e 	bgeu	r8,r2,400a64c <__umoddi3+0x3cc>
 400a63c:	4551883a 	add	r8,r8,r21
 400a640:	b0ffffc4 	addi	r3,r22,-1
 400a644:	45406f2e 	bgeu	r8,r21,400a804 <__umoddi3+0x584>
 400a648:	182d883a 	mov	r22,r3
 400a64c:	880e943a 	slli	r7,r17,16
 400a650:	9006d43a 	srli	r3,r18,16
 400a654:	91bfffcc 	andi	r6,r18,65535
 400a658:	3dacb03a 	or	r22,r7,r22
 400a65c:	b02ed43a 	srli	r23,r22,16
 400a660:	b5bfffcc 	andi	r22,r22,65535
 400a664:	300b883a 	mov	r5,r6
 400a668:	b009883a 	mov	r4,r22
 400a66c:	40a3c83a 	sub	r17,r8,r2
 400a670:	d8c00115 	stw	r3,4(sp)
 400a674:	d9800215 	stw	r6,8(sp)
 400a678:	400a9f80 	call	400a9f8 <__mulsi3>
 400a67c:	d9800217 	ldw	r6,8(sp)
 400a680:	b809883a 	mov	r4,r23
 400a684:	1039883a 	mov	fp,r2
 400a688:	300b883a 	mov	r5,r6
 400a68c:	400a9f80 	call	400a9f8 <__mulsi3>
 400a690:	d8c00117 	ldw	r3,4(sp)
 400a694:	b809883a 	mov	r4,r23
 400a698:	d8800215 	stw	r2,8(sp)
 400a69c:	180b883a 	mov	r5,r3
 400a6a0:	400a9f80 	call	400a9f8 <__mulsi3>
 400a6a4:	d8c00117 	ldw	r3,4(sp)
 400a6a8:	b009883a 	mov	r4,r22
 400a6ac:	102f883a 	mov	r23,r2
 400a6b0:	180b883a 	mov	r5,r3
 400a6b4:	400a9f80 	call	400a9f8 <__mulsi3>
 400a6b8:	d9800217 	ldw	r6,8(sp)
 400a6bc:	e006d43a 	srli	r3,fp,16
 400a6c0:	1185883a 	add	r2,r2,r6
 400a6c4:	1885883a 	add	r2,r3,r2
 400a6c8:	1180022e 	bgeu	r2,r6,400a6d4 <__umoddi3+0x454>
 400a6cc:	00c00074 	movhi	r3,1
 400a6d0:	b8ef883a 	add	r23,r23,r3
 400a6d4:	1006d43a 	srli	r3,r2,16
 400a6d8:	1004943a 	slli	r2,r2,16
 400a6dc:	e73fffcc 	andi	fp,fp,65535
 400a6e0:	1dc7883a 	add	r3,r3,r23
 400a6e4:	1739883a 	add	fp,r2,fp
 400a6e8:	88c03a36 	bltu	r17,r3,400a7d4 <__umoddi3+0x554>
 400a6ec:	88c05126 	beq	r17,r3,400a834 <__umoddi3+0x5b4>
 400a6f0:	88c9c83a 	sub	r4,r17,r3
 400a6f4:	e00f883a 	mov	r7,fp
 400a6f8:	81cfc83a 	sub	r7,r16,r7
 400a6fc:	81c7803a 	cmpltu	r3,r16,r7
 400a700:	20c7c83a 	sub	r3,r4,r3
 400a704:	1cc4983a 	sll	r2,r3,r19
 400a708:	3d0ed83a 	srl	r7,r7,r20
 400a70c:	1d06d83a 	srl	r3,r3,r20
 400a710:	11c4b03a 	or	r2,r2,r7
 400a714:	003f7c06 	br	400a508 <__umoddi3+0x288>
 400a718:	9ca6983a 	sll	r19,r19,r18
 400a71c:	88f8d83a 	srl	fp,r17,r3
 400a720:	80c4d83a 	srl	r2,r16,r3
 400a724:	982cd43a 	srli	r22,r19,16
 400a728:	8ca2983a 	sll	r17,r17,r18
 400a72c:	e009883a 	mov	r4,fp
 400a730:	b00b883a 	mov	r5,r22
 400a734:	146ab03a 	or	r21,r2,r17
 400a738:	400a9a00 	call	400a9a0 <__umodsi3>
 400a73c:	b00b883a 	mov	r5,r22
 400a740:	e009883a 	mov	r4,fp
 400a744:	1029883a 	mov	r20,r2
 400a748:	9dffffcc 	andi	r23,r19,65535
 400a74c:	400a93c0 	call	400a93c <__udivsi3>
 400a750:	b809883a 	mov	r4,r23
 400a754:	100b883a 	mov	r5,r2
 400a758:	400a9f80 	call	400a9f8 <__mulsi3>
 400a75c:	a008943a 	slli	r4,r20,16
 400a760:	a806d43a 	srli	r3,r21,16
 400a764:	84a8983a 	sll	r20,r16,r18
 400a768:	1906b03a 	or	r3,r3,r4
 400a76c:	1880042e 	bgeu	r3,r2,400a780 <__umoddi3+0x500>
 400a770:	1cc7883a 	add	r3,r3,r19
 400a774:	1cc00236 	bltu	r3,r19,400a780 <__umoddi3+0x500>
 400a778:	1880012e 	bgeu	r3,r2,400a780 <__umoddi3+0x500>
 400a77c:	1cc7883a 	add	r3,r3,r19
 400a780:	18a3c83a 	sub	r17,r3,r2
 400a784:	b00b883a 	mov	r5,r22
 400a788:	8809883a 	mov	r4,r17
 400a78c:	400a9a00 	call	400a9a0 <__umodsi3>
 400a790:	b00b883a 	mov	r5,r22
 400a794:	8809883a 	mov	r4,r17
 400a798:	1021883a 	mov	r16,r2
 400a79c:	400a93c0 	call	400a93c <__udivsi3>
 400a7a0:	100b883a 	mov	r5,r2
 400a7a4:	b809883a 	mov	r4,r23
 400a7a8:	8020943a 	slli	r16,r16,16
 400a7ac:	400a9f80 	call	400a9f8 <__mulsi3>
 400a7b0:	a8ffffcc 	andi	r3,r21,65535
 400a7b4:	1c06b03a 	or	r3,r3,r16
 400a7b8:	1880042e 	bgeu	r3,r2,400a7cc <__umoddi3+0x54c>
 400a7bc:	1cc7883a 	add	r3,r3,r19
 400a7c0:	1cc00236 	bltu	r3,r19,400a7cc <__umoddi3+0x54c>
 400a7c4:	1880012e 	bgeu	r3,r2,400a7cc <__umoddi3+0x54c>
 400a7c8:	1cc7883a 	add	r3,r3,r19
 400a7cc:	18a3c83a 	sub	r17,r3,r2
 400a7d0:	003f2906 	br	400a478 <__umoddi3+0x1f8>
 400a7d4:	e48fc83a 	sub	r7,fp,r18
 400a7d8:	1d49c83a 	sub	r4,r3,r21
 400a7dc:	e1f9803a 	cmpltu	fp,fp,r7
 400a7e0:	2739c83a 	sub	fp,r4,fp
 400a7e4:	8f09c83a 	sub	r4,r17,fp
 400a7e8:	003fc306 	br	400a6f8 <__umoddi3+0x478>
 400a7ec:	01000604 	movi	r4,24
 400a7f0:	003ef906 	br	400a3d8 <__umoddi3+0x158>
 400a7f4:	00800604 	movi	r2,24
 400a7f8:	003f1306 	br	400a448 <__umoddi3+0x1c8>
 400a7fc:	01000604 	movi	r4,24
 400a800:	003eb606 	br	400a2dc <__umoddi3+0x5c>
 400a804:	40bf902e 	bgeu	r8,r2,400a648 <__umoddi3+0x3c8>
 400a808:	b5bfff84 	addi	r22,r22,-2
 400a80c:	4551883a 	add	r8,r8,r21
 400a810:	003f8e06 	br	400a64c <__umoddi3+0x3cc>
 400a814:	18bf762e 	bgeu	r3,r2,400a5f0 <__umoddi3+0x370>
 400a818:	8c7fff84 	addi	r17,r17,-2
 400a81c:	1d47883a 	add	r3,r3,r21
 400a820:	003f7406 	br	400a5f4 <__umoddi3+0x374>
 400a824:	1cc7883a 	add	r3,r3,r19
 400a828:	003ecd06 	br	400a360 <__umoddi3+0xe0>
 400a82c:	8005883a 	mov	r2,r16
 400a830:	003ef806 	br	400a414 <__umoddi3+0x194>
 400a834:	873fe736 	bltu	r16,fp,400a7d4 <__umoddi3+0x554>
 400a838:	e00f883a 	mov	r7,fp
 400a83c:	0009883a 	mov	r4,zero
 400a840:	003fad06 	br	400a6f8 <__umoddi3+0x478>

0400a844 <__divsi3>:
 400a844:	20001b16 	blt	r4,zero,400a8b4 <__divsi3+0x70>
 400a848:	000f883a 	mov	r7,zero
 400a84c:	28001616 	blt	r5,zero,400a8a8 <__divsi3+0x64>
 400a850:	200d883a 	mov	r6,r4
 400a854:	29001a2e 	bgeu	r5,r4,400a8c0 <__divsi3+0x7c>
 400a858:	00800804 	movi	r2,32
 400a85c:	00c00044 	movi	r3,1
 400a860:	00000106 	br	400a868 <__divsi3+0x24>
 400a864:	10000d26 	beq	r2,zero,400a89c <__divsi3+0x58>
 400a868:	294b883a 	add	r5,r5,r5
 400a86c:	10bfffc4 	addi	r2,r2,-1
 400a870:	18c7883a 	add	r3,r3,r3
 400a874:	293ffb36 	bltu	r5,r4,400a864 <__divsi3+0x20>
 400a878:	0005883a 	mov	r2,zero
 400a87c:	18000726 	beq	r3,zero,400a89c <__divsi3+0x58>
 400a880:	0005883a 	mov	r2,zero
 400a884:	31400236 	bltu	r6,r5,400a890 <__divsi3+0x4c>
 400a888:	314dc83a 	sub	r6,r6,r5
 400a88c:	10c4b03a 	or	r2,r2,r3
 400a890:	1806d07a 	srli	r3,r3,1
 400a894:	280ad07a 	srli	r5,r5,1
 400a898:	183ffa1e 	bne	r3,zero,400a884 <__divsi3+0x40>
 400a89c:	38000126 	beq	r7,zero,400a8a4 <__divsi3+0x60>
 400a8a0:	0085c83a 	sub	r2,zero,r2
 400a8a4:	f800283a 	ret
 400a8a8:	014bc83a 	sub	r5,zero,r5
 400a8ac:	39c0005c 	xori	r7,r7,1
 400a8b0:	003fe706 	br	400a850 <__divsi3+0xc>
 400a8b4:	0109c83a 	sub	r4,zero,r4
 400a8b8:	01c00044 	movi	r7,1
 400a8bc:	003fe306 	br	400a84c <__divsi3+0x8>
 400a8c0:	00c00044 	movi	r3,1
 400a8c4:	003fee06 	br	400a880 <__divsi3+0x3c>

0400a8c8 <__modsi3>:
 400a8c8:	20001716 	blt	r4,zero,400a928 <__modsi3+0x60>
 400a8cc:	000f883a 	mov	r7,zero
 400a8d0:	2005883a 	mov	r2,r4
 400a8d4:	28001216 	blt	r5,zero,400a920 <__modsi3+0x58>
 400a8d8:	2900162e 	bgeu	r5,r4,400a934 <__modsi3+0x6c>
 400a8dc:	01800804 	movi	r6,32
 400a8e0:	00c00044 	movi	r3,1
 400a8e4:	00000106 	br	400a8ec <__modsi3+0x24>
 400a8e8:	30000a26 	beq	r6,zero,400a914 <__modsi3+0x4c>
 400a8ec:	294b883a 	add	r5,r5,r5
 400a8f0:	31bfffc4 	addi	r6,r6,-1
 400a8f4:	18c7883a 	add	r3,r3,r3
 400a8f8:	293ffb36 	bltu	r5,r4,400a8e8 <__modsi3+0x20>
 400a8fc:	18000526 	beq	r3,zero,400a914 <__modsi3+0x4c>
 400a900:	1806d07a 	srli	r3,r3,1
 400a904:	11400136 	bltu	r2,r5,400a90c <__modsi3+0x44>
 400a908:	1145c83a 	sub	r2,r2,r5
 400a90c:	280ad07a 	srli	r5,r5,1
 400a910:	183ffb1e 	bne	r3,zero,400a900 <__modsi3+0x38>
 400a914:	38000126 	beq	r7,zero,400a91c <__modsi3+0x54>
 400a918:	0085c83a 	sub	r2,zero,r2
 400a91c:	f800283a 	ret
 400a920:	014bc83a 	sub	r5,zero,r5
 400a924:	003fec06 	br	400a8d8 <__modsi3+0x10>
 400a928:	0109c83a 	sub	r4,zero,r4
 400a92c:	01c00044 	movi	r7,1
 400a930:	003fe706 	br	400a8d0 <__modsi3+0x8>
 400a934:	00c00044 	movi	r3,1
 400a938:	003ff106 	br	400a900 <__modsi3+0x38>

0400a93c <__udivsi3>:
 400a93c:	200d883a 	mov	r6,r4
 400a940:	2900152e 	bgeu	r5,r4,400a998 <__udivsi3+0x5c>
 400a944:	28001416 	blt	r5,zero,400a998 <__udivsi3+0x5c>
 400a948:	00800804 	movi	r2,32
 400a94c:	00c00044 	movi	r3,1
 400a950:	00000206 	br	400a95c <__udivsi3+0x20>
 400a954:	10000e26 	beq	r2,zero,400a990 <__udivsi3+0x54>
 400a958:	28000516 	blt	r5,zero,400a970 <__udivsi3+0x34>
 400a95c:	294b883a 	add	r5,r5,r5
 400a960:	10bfffc4 	addi	r2,r2,-1
 400a964:	18c7883a 	add	r3,r3,r3
 400a968:	293ffa36 	bltu	r5,r4,400a954 <__udivsi3+0x18>
 400a96c:	18000826 	beq	r3,zero,400a990 <__udivsi3+0x54>
 400a970:	0005883a 	mov	r2,zero
 400a974:	31400236 	bltu	r6,r5,400a980 <__udivsi3+0x44>
 400a978:	314dc83a 	sub	r6,r6,r5
 400a97c:	10c4b03a 	or	r2,r2,r3
 400a980:	1806d07a 	srli	r3,r3,1
 400a984:	280ad07a 	srli	r5,r5,1
 400a988:	183ffa1e 	bne	r3,zero,400a974 <__udivsi3+0x38>
 400a98c:	f800283a 	ret
 400a990:	0005883a 	mov	r2,zero
 400a994:	f800283a 	ret
 400a998:	00c00044 	movi	r3,1
 400a99c:	003ff406 	br	400a970 <__udivsi3+0x34>

0400a9a0 <__umodsi3>:
 400a9a0:	2005883a 	mov	r2,r4
 400a9a4:	2900122e 	bgeu	r5,r4,400a9f0 <__umodsi3+0x50>
 400a9a8:	28001116 	blt	r5,zero,400a9f0 <__umodsi3+0x50>
 400a9ac:	01800804 	movi	r6,32
 400a9b0:	00c00044 	movi	r3,1
 400a9b4:	00000206 	br	400a9c0 <__umodsi3+0x20>
 400a9b8:	30000c26 	beq	r6,zero,400a9ec <__umodsi3+0x4c>
 400a9bc:	28000516 	blt	r5,zero,400a9d4 <__umodsi3+0x34>
 400a9c0:	294b883a 	add	r5,r5,r5
 400a9c4:	31bfffc4 	addi	r6,r6,-1
 400a9c8:	18c7883a 	add	r3,r3,r3
 400a9cc:	293ffa36 	bltu	r5,r4,400a9b8 <__umodsi3+0x18>
 400a9d0:	18000626 	beq	r3,zero,400a9ec <__umodsi3+0x4c>
 400a9d4:	1806d07a 	srli	r3,r3,1
 400a9d8:	11400136 	bltu	r2,r5,400a9e0 <__umodsi3+0x40>
 400a9dc:	1145c83a 	sub	r2,r2,r5
 400a9e0:	280ad07a 	srli	r5,r5,1
 400a9e4:	183ffb1e 	bne	r3,zero,400a9d4 <__umodsi3+0x34>
 400a9e8:	f800283a 	ret
 400a9ec:	f800283a 	ret
 400a9f0:	00c00044 	movi	r3,1
 400a9f4:	003ff706 	br	400a9d4 <__umodsi3+0x34>

0400a9f8 <__mulsi3>:
 400a9f8:	0005883a 	mov	r2,zero
 400a9fc:	20000726 	beq	r4,zero,400aa1c <__mulsi3+0x24>
 400aa00:	20c0004c 	andi	r3,r4,1
 400aa04:	2008d07a 	srli	r4,r4,1
 400aa08:	18000126 	beq	r3,zero,400aa10 <__mulsi3+0x18>
 400aa0c:	1145883a 	add	r2,r2,r5
 400aa10:	294b883a 	add	r5,r5,r5
 400aa14:	203ffa1e 	bne	r4,zero,400aa00 <__mulsi3+0x8>
 400aa18:	f800283a 	ret
 400aa1c:	f800283a 	ret

0400aa20 <__adddf3>:
 400aa20:	02c00434 	movhi	r11,16
 400aa24:	5affffc4 	addi	r11,r11,-1
 400aa28:	2806d7fa 	srli	r3,r5,31
 400aa2c:	2ad4703a 	and	r10,r5,r11
 400aa30:	3ad2703a 	and	r9,r7,r11
 400aa34:	3804d53a 	srli	r2,r7,20
 400aa38:	3018d77a 	srli	r12,r6,29
 400aa3c:	280ad53a 	srli	r5,r5,20
 400aa40:	501490fa 	slli	r10,r10,3
 400aa44:	2010d77a 	srli	r8,r4,29
 400aa48:	481290fa 	slli	r9,r9,3
 400aa4c:	380ed7fa 	srli	r7,r7,31
 400aa50:	defffb04 	addi	sp,sp,-20
 400aa54:	dc800215 	stw	r18,8(sp)
 400aa58:	dc400115 	stw	r17,4(sp)
 400aa5c:	dc000015 	stw	r16,0(sp)
 400aa60:	dfc00415 	stw	ra,16(sp)
 400aa64:	dcc00315 	stw	r19,12(sp)
 400aa68:	1c803fcc 	andi	r18,r3,255
 400aa6c:	2c01ffcc 	andi	r16,r5,2047
 400aa70:	5210b03a 	or	r8,r10,r8
 400aa74:	202290fa 	slli	r17,r4,3
 400aa78:	1081ffcc 	andi	r2,r2,2047
 400aa7c:	4b12b03a 	or	r9,r9,r12
 400aa80:	300c90fa 	slli	r6,r6,3
 400aa84:	91c07526 	beq	r18,r7,400ac5c <__adddf3+0x23c>
 400aa88:	8087c83a 	sub	r3,r16,r2
 400aa8c:	00c0ab0e 	bge	zero,r3,400ad3c <__adddf3+0x31c>
 400aa90:	10002a1e 	bne	r2,zero,400ab3c <__adddf3+0x11c>
 400aa94:	4984b03a 	or	r2,r9,r6
 400aa98:	1000961e 	bne	r2,zero,400acf4 <__adddf3+0x2d4>
 400aa9c:	888001cc 	andi	r2,r17,7
 400aaa0:	10000726 	beq	r2,zero,400aac0 <__adddf3+0xa0>
 400aaa4:	888003cc 	andi	r2,r17,15
 400aaa8:	00c00104 	movi	r3,4
 400aaac:	10c00426 	beq	r2,r3,400aac0 <__adddf3+0xa0>
 400aab0:	88c7883a 	add	r3,r17,r3
 400aab4:	1c63803a 	cmpltu	r17,r3,r17
 400aab8:	4451883a 	add	r8,r8,r17
 400aabc:	1823883a 	mov	r17,r3
 400aac0:	4080202c 	andhi	r2,r8,128
 400aac4:	10005926 	beq	r2,zero,400ac2c <__adddf3+0x20c>
 400aac8:	84000044 	addi	r16,r16,1
 400aacc:	0081ffc4 	movi	r2,2047
 400aad0:	8080ba26 	beq	r16,r2,400adbc <__adddf3+0x39c>
 400aad4:	00bfe034 	movhi	r2,65408
 400aad8:	10bfffc4 	addi	r2,r2,-1
 400aadc:	4090703a 	and	r8,r8,r2
 400aae0:	4004977a 	slli	r2,r8,29
 400aae4:	4010927a 	slli	r8,r8,9
 400aae8:	8822d0fa 	srli	r17,r17,3
 400aaec:	8401ffcc 	andi	r16,r16,2047
 400aaf0:	4010d33a 	srli	r8,r8,12
 400aaf4:	9007883a 	mov	r3,r18
 400aaf8:	1444b03a 	or	r2,r2,r17
 400aafc:	8401ffcc 	andi	r16,r16,2047
 400ab00:	8020953a 	slli	r16,r16,20
 400ab04:	18c03fcc 	andi	r3,r3,255
 400ab08:	01000434 	movhi	r4,16
 400ab0c:	213fffc4 	addi	r4,r4,-1
 400ab10:	180697fa 	slli	r3,r3,31
 400ab14:	4110703a 	and	r8,r8,r4
 400ab18:	4410b03a 	or	r8,r8,r16
 400ab1c:	40c6b03a 	or	r3,r8,r3
 400ab20:	dfc00417 	ldw	ra,16(sp)
 400ab24:	dcc00317 	ldw	r19,12(sp)
 400ab28:	dc800217 	ldw	r18,8(sp)
 400ab2c:	dc400117 	ldw	r17,4(sp)
 400ab30:	dc000017 	ldw	r16,0(sp)
 400ab34:	dec00504 	addi	sp,sp,20
 400ab38:	f800283a 	ret
 400ab3c:	0081ffc4 	movi	r2,2047
 400ab40:	80bfd626 	beq	r16,r2,400aa9c <__adddf3+0x7c>
 400ab44:	4a402034 	orhi	r9,r9,128
 400ab48:	00800e04 	movi	r2,56
 400ab4c:	10c09f16 	blt	r2,r3,400adcc <__adddf3+0x3ac>
 400ab50:	008007c4 	movi	r2,31
 400ab54:	10c0c216 	blt	r2,r3,400ae60 <__adddf3+0x440>
 400ab58:	00800804 	movi	r2,32
 400ab5c:	10c5c83a 	sub	r2,r2,r3
 400ab60:	488a983a 	sll	r5,r9,r2
 400ab64:	30c8d83a 	srl	r4,r6,r3
 400ab68:	3084983a 	sll	r2,r6,r2
 400ab6c:	48c6d83a 	srl	r3,r9,r3
 400ab70:	290cb03a 	or	r6,r5,r4
 400ab74:	1004c03a 	cmpne	r2,r2,zero
 400ab78:	308cb03a 	or	r6,r6,r2
 400ab7c:	898dc83a 	sub	r6,r17,r6
 400ab80:	89a3803a 	cmpltu	r17,r17,r6
 400ab84:	40d1c83a 	sub	r8,r8,r3
 400ab88:	4451c83a 	sub	r8,r8,r17
 400ab8c:	3023883a 	mov	r17,r6
 400ab90:	4080202c 	andhi	r2,r8,128
 400ab94:	10002326 	beq	r2,zero,400ac24 <__adddf3+0x204>
 400ab98:	04c02034 	movhi	r19,128
 400ab9c:	9cffffc4 	addi	r19,r19,-1
 400aba0:	44e6703a 	and	r19,r8,r19
 400aba4:	98007626 	beq	r19,zero,400ad80 <__adddf3+0x360>
 400aba8:	9809883a 	mov	r4,r19
 400abac:	400d2600 	call	400d260 <__clzsi2>
 400abb0:	10fffe04 	addi	r3,r2,-8
 400abb4:	010007c4 	movi	r4,31
 400abb8:	20c07716 	blt	r4,r3,400ad98 <__adddf3+0x378>
 400abbc:	00800804 	movi	r2,32
 400abc0:	10c5c83a 	sub	r2,r2,r3
 400abc4:	8884d83a 	srl	r2,r17,r2
 400abc8:	98d0983a 	sll	r8,r19,r3
 400abcc:	88e2983a 	sll	r17,r17,r3
 400abd0:	1204b03a 	or	r2,r2,r8
 400abd4:	1c007416 	blt	r3,r16,400ada8 <__adddf3+0x388>
 400abd8:	1c21c83a 	sub	r16,r3,r16
 400abdc:	82000044 	addi	r8,r16,1
 400abe0:	00c007c4 	movi	r3,31
 400abe4:	1a009116 	blt	r3,r8,400ae2c <__adddf3+0x40c>
 400abe8:	00c00804 	movi	r3,32
 400abec:	1a07c83a 	sub	r3,r3,r8
 400abf0:	8a08d83a 	srl	r4,r17,r8
 400abf4:	88e2983a 	sll	r17,r17,r3
 400abf8:	10c6983a 	sll	r3,r2,r3
 400abfc:	1210d83a 	srl	r8,r2,r8
 400ac00:	8804c03a 	cmpne	r2,r17,zero
 400ac04:	1906b03a 	or	r3,r3,r4
 400ac08:	18a2b03a 	or	r17,r3,r2
 400ac0c:	0021883a 	mov	r16,zero
 400ac10:	003fa206 	br	400aa9c <__adddf3+0x7c>
 400ac14:	1890b03a 	or	r8,r3,r2
 400ac18:	40017d26 	beq	r8,zero,400b210 <__adddf3+0x7f0>
 400ac1c:	1011883a 	mov	r8,r2
 400ac20:	1823883a 	mov	r17,r3
 400ac24:	888001cc 	andi	r2,r17,7
 400ac28:	103f9e1e 	bne	r2,zero,400aaa4 <__adddf3+0x84>
 400ac2c:	4004977a 	slli	r2,r8,29
 400ac30:	8822d0fa 	srli	r17,r17,3
 400ac34:	4010d0fa 	srli	r8,r8,3
 400ac38:	9007883a 	mov	r3,r18
 400ac3c:	1444b03a 	or	r2,r2,r17
 400ac40:	0101ffc4 	movi	r4,2047
 400ac44:	81002426 	beq	r16,r4,400acd8 <__adddf3+0x2b8>
 400ac48:	8120703a 	and	r16,r16,r4
 400ac4c:	01000434 	movhi	r4,16
 400ac50:	213fffc4 	addi	r4,r4,-1
 400ac54:	4110703a 	and	r8,r8,r4
 400ac58:	003fa806 	br	400aafc <__adddf3+0xdc>
 400ac5c:	8089c83a 	sub	r4,r16,r2
 400ac60:	01005e0e 	bge	zero,r4,400addc <__adddf3+0x3bc>
 400ac64:	10002b26 	beq	r2,zero,400ad14 <__adddf3+0x2f4>
 400ac68:	0081ffc4 	movi	r2,2047
 400ac6c:	80bf8b26 	beq	r16,r2,400aa9c <__adddf3+0x7c>
 400ac70:	4a402034 	orhi	r9,r9,128
 400ac74:	00800e04 	movi	r2,56
 400ac78:	1100a40e 	bge	r2,r4,400af0c <__adddf3+0x4ec>
 400ac7c:	498cb03a 	or	r6,r9,r6
 400ac80:	300ac03a 	cmpne	r5,r6,zero
 400ac84:	0013883a 	mov	r9,zero
 400ac88:	2c4b883a 	add	r5,r5,r17
 400ac8c:	2c63803a 	cmpltu	r17,r5,r17
 400ac90:	4a11883a 	add	r8,r9,r8
 400ac94:	8a11883a 	add	r8,r17,r8
 400ac98:	2823883a 	mov	r17,r5
 400ac9c:	4080202c 	andhi	r2,r8,128
 400aca0:	103fe026 	beq	r2,zero,400ac24 <__adddf3+0x204>
 400aca4:	84000044 	addi	r16,r16,1
 400aca8:	0081ffc4 	movi	r2,2047
 400acac:	8080d226 	beq	r16,r2,400aff8 <__adddf3+0x5d8>
 400acb0:	00bfe034 	movhi	r2,65408
 400acb4:	10bfffc4 	addi	r2,r2,-1
 400acb8:	4090703a 	and	r8,r8,r2
 400acbc:	880ad07a 	srli	r5,r17,1
 400acc0:	400897fa 	slli	r4,r8,31
 400acc4:	88c0004c 	andi	r3,r17,1
 400acc8:	28e2b03a 	or	r17,r5,r3
 400accc:	4010d07a 	srli	r8,r8,1
 400acd0:	2462b03a 	or	r17,r4,r17
 400acd4:	003f7106 	br	400aa9c <__adddf3+0x7c>
 400acd8:	4088b03a 	or	r4,r8,r2
 400acdc:	20014526 	beq	r4,zero,400b1f4 <__adddf3+0x7d4>
 400ace0:	01000434 	movhi	r4,16
 400ace4:	42000234 	orhi	r8,r8,8
 400ace8:	213fffc4 	addi	r4,r4,-1
 400acec:	4110703a 	and	r8,r8,r4
 400acf0:	003f8206 	br	400aafc <__adddf3+0xdc>
 400acf4:	18ffffc4 	addi	r3,r3,-1
 400acf8:	1800491e 	bne	r3,zero,400ae20 <__adddf3+0x400>
 400acfc:	898bc83a 	sub	r5,r17,r6
 400ad00:	8963803a 	cmpltu	r17,r17,r5
 400ad04:	4251c83a 	sub	r8,r8,r9
 400ad08:	4451c83a 	sub	r8,r8,r17
 400ad0c:	2823883a 	mov	r17,r5
 400ad10:	003f9f06 	br	400ab90 <__adddf3+0x170>
 400ad14:	4984b03a 	or	r2,r9,r6
 400ad18:	103f6026 	beq	r2,zero,400aa9c <__adddf3+0x7c>
 400ad1c:	213fffc4 	addi	r4,r4,-1
 400ad20:	2000931e 	bne	r4,zero,400af70 <__adddf3+0x550>
 400ad24:	898d883a 	add	r6,r17,r6
 400ad28:	3463803a 	cmpltu	r17,r6,r17
 400ad2c:	4251883a 	add	r8,r8,r9
 400ad30:	8a11883a 	add	r8,r17,r8
 400ad34:	3023883a 	mov	r17,r6
 400ad38:	003fd806 	br	400ac9c <__adddf3+0x27c>
 400ad3c:	1800541e 	bne	r3,zero,400ae90 <__adddf3+0x470>
 400ad40:	80800044 	addi	r2,r16,1
 400ad44:	1081ffcc 	andi	r2,r2,2047
 400ad48:	00c00044 	movi	r3,1
 400ad4c:	1880a00e 	bge	r3,r2,400afd0 <__adddf3+0x5b0>
 400ad50:	8989c83a 	sub	r4,r17,r6
 400ad54:	8905803a 	cmpltu	r2,r17,r4
 400ad58:	4267c83a 	sub	r19,r8,r9
 400ad5c:	98a7c83a 	sub	r19,r19,r2
 400ad60:	9880202c 	andhi	r2,r19,128
 400ad64:	10006326 	beq	r2,zero,400aef4 <__adddf3+0x4d4>
 400ad68:	3463c83a 	sub	r17,r6,r17
 400ad6c:	4a07c83a 	sub	r3,r9,r8
 400ad70:	344d803a 	cmpltu	r6,r6,r17
 400ad74:	19a7c83a 	sub	r19,r3,r6
 400ad78:	3825883a 	mov	r18,r7
 400ad7c:	983f8a1e 	bne	r19,zero,400aba8 <__adddf3+0x188>
 400ad80:	8809883a 	mov	r4,r17
 400ad84:	400d2600 	call	400d260 <__clzsi2>
 400ad88:	10800804 	addi	r2,r2,32
 400ad8c:	10fffe04 	addi	r3,r2,-8
 400ad90:	010007c4 	movi	r4,31
 400ad94:	20ff890e 	bge	r4,r3,400abbc <__adddf3+0x19c>
 400ad98:	10bff604 	addi	r2,r2,-40
 400ad9c:	8884983a 	sll	r2,r17,r2
 400ada0:	0023883a 	mov	r17,zero
 400ada4:	1c3f8c0e 	bge	r3,r16,400abd8 <__adddf3+0x1b8>
 400ada8:	023fe034 	movhi	r8,65408
 400adac:	423fffc4 	addi	r8,r8,-1
 400adb0:	80e1c83a 	sub	r16,r16,r3
 400adb4:	1210703a 	and	r8,r2,r8
 400adb8:	003f3806 	br	400aa9c <__adddf3+0x7c>
 400adbc:	9007883a 	mov	r3,r18
 400adc0:	0011883a 	mov	r8,zero
 400adc4:	0005883a 	mov	r2,zero
 400adc8:	003f4c06 	br	400aafc <__adddf3+0xdc>
 400adcc:	498cb03a 	or	r6,r9,r6
 400add0:	300cc03a 	cmpne	r6,r6,zero
 400add4:	0007883a 	mov	r3,zero
 400add8:	003f6806 	br	400ab7c <__adddf3+0x15c>
 400addc:	20009c1e 	bne	r4,zero,400b050 <__adddf3+0x630>
 400ade0:	80800044 	addi	r2,r16,1
 400ade4:	1141ffcc 	andi	r5,r2,2047
 400ade8:	01000044 	movi	r4,1
 400adec:	2140670e 	bge	r4,r5,400af8c <__adddf3+0x56c>
 400adf0:	0101ffc4 	movi	r4,2047
 400adf4:	11007f26 	beq	r2,r4,400aff4 <__adddf3+0x5d4>
 400adf8:	898d883a 	add	r6,r17,r6
 400adfc:	4247883a 	add	r3,r8,r9
 400ae00:	3451803a 	cmpltu	r8,r6,r17
 400ae04:	40d1883a 	add	r8,r8,r3
 400ae08:	402297fa 	slli	r17,r8,31
 400ae0c:	300cd07a 	srli	r6,r6,1
 400ae10:	4010d07a 	srli	r8,r8,1
 400ae14:	1021883a 	mov	r16,r2
 400ae18:	89a2b03a 	or	r17,r17,r6
 400ae1c:	003f1f06 	br	400aa9c <__adddf3+0x7c>
 400ae20:	0081ffc4 	movi	r2,2047
 400ae24:	80bf481e 	bne	r16,r2,400ab48 <__adddf3+0x128>
 400ae28:	003f1c06 	br	400aa9c <__adddf3+0x7c>
 400ae2c:	843ff844 	addi	r16,r16,-31
 400ae30:	01000804 	movi	r4,32
 400ae34:	1406d83a 	srl	r3,r2,r16
 400ae38:	41005026 	beq	r8,r4,400af7c <__adddf3+0x55c>
 400ae3c:	01001004 	movi	r4,64
 400ae40:	2211c83a 	sub	r8,r4,r8
 400ae44:	1204983a 	sll	r2,r2,r8
 400ae48:	88a2b03a 	or	r17,r17,r2
 400ae4c:	8822c03a 	cmpne	r17,r17,zero
 400ae50:	1c62b03a 	or	r17,r3,r17
 400ae54:	0011883a 	mov	r8,zero
 400ae58:	0021883a 	mov	r16,zero
 400ae5c:	003f7106 	br	400ac24 <__adddf3+0x204>
 400ae60:	193ff804 	addi	r4,r3,-32
 400ae64:	00800804 	movi	r2,32
 400ae68:	4908d83a 	srl	r4,r9,r4
 400ae6c:	18804526 	beq	r3,r2,400af84 <__adddf3+0x564>
 400ae70:	00801004 	movi	r2,64
 400ae74:	10c5c83a 	sub	r2,r2,r3
 400ae78:	4886983a 	sll	r3,r9,r2
 400ae7c:	198cb03a 	or	r6,r3,r6
 400ae80:	300cc03a 	cmpne	r6,r6,zero
 400ae84:	218cb03a 	or	r6,r4,r6
 400ae88:	0007883a 	mov	r3,zero
 400ae8c:	003f3b06 	br	400ab7c <__adddf3+0x15c>
 400ae90:	80002a26 	beq	r16,zero,400af3c <__adddf3+0x51c>
 400ae94:	0101ffc4 	movi	r4,2047
 400ae98:	11006826 	beq	r2,r4,400b03c <__adddf3+0x61c>
 400ae9c:	00c7c83a 	sub	r3,zero,r3
 400aea0:	42002034 	orhi	r8,r8,128
 400aea4:	01000e04 	movi	r4,56
 400aea8:	20c07c16 	blt	r4,r3,400b09c <__adddf3+0x67c>
 400aeac:	010007c4 	movi	r4,31
 400aeb0:	20c0da16 	blt	r4,r3,400b21c <__adddf3+0x7fc>
 400aeb4:	01000804 	movi	r4,32
 400aeb8:	20c9c83a 	sub	r4,r4,r3
 400aebc:	4114983a 	sll	r10,r8,r4
 400aec0:	88cad83a 	srl	r5,r17,r3
 400aec4:	8908983a 	sll	r4,r17,r4
 400aec8:	40c6d83a 	srl	r3,r8,r3
 400aecc:	5162b03a 	or	r17,r10,r5
 400aed0:	2008c03a 	cmpne	r4,r4,zero
 400aed4:	8922b03a 	or	r17,r17,r4
 400aed8:	3463c83a 	sub	r17,r6,r17
 400aedc:	48c7c83a 	sub	r3,r9,r3
 400aee0:	344d803a 	cmpltu	r6,r6,r17
 400aee4:	1991c83a 	sub	r8,r3,r6
 400aee8:	1021883a 	mov	r16,r2
 400aeec:	3825883a 	mov	r18,r7
 400aef0:	003f2706 	br	400ab90 <__adddf3+0x170>
 400aef4:	24d0b03a 	or	r8,r4,r19
 400aef8:	40001b1e 	bne	r8,zero,400af68 <__adddf3+0x548>
 400aefc:	0005883a 	mov	r2,zero
 400af00:	0007883a 	mov	r3,zero
 400af04:	0021883a 	mov	r16,zero
 400af08:	003f4d06 	br	400ac40 <__adddf3+0x220>
 400af0c:	008007c4 	movi	r2,31
 400af10:	11003c16 	blt	r2,r4,400b004 <__adddf3+0x5e4>
 400af14:	00800804 	movi	r2,32
 400af18:	1105c83a 	sub	r2,r2,r4
 400af1c:	488e983a 	sll	r7,r9,r2
 400af20:	310ad83a 	srl	r5,r6,r4
 400af24:	3084983a 	sll	r2,r6,r2
 400af28:	4912d83a 	srl	r9,r9,r4
 400af2c:	394ab03a 	or	r5,r7,r5
 400af30:	1004c03a 	cmpne	r2,r2,zero
 400af34:	288ab03a 	or	r5,r5,r2
 400af38:	003f5306 	br	400ac88 <__adddf3+0x268>
 400af3c:	4448b03a 	or	r4,r8,r17
 400af40:	20003e26 	beq	r4,zero,400b03c <__adddf3+0x61c>
 400af44:	00c6303a 	nor	r3,zero,r3
 400af48:	18003a1e 	bne	r3,zero,400b034 <__adddf3+0x614>
 400af4c:	3463c83a 	sub	r17,r6,r17
 400af50:	4a07c83a 	sub	r3,r9,r8
 400af54:	344d803a 	cmpltu	r6,r6,r17
 400af58:	1991c83a 	sub	r8,r3,r6
 400af5c:	1021883a 	mov	r16,r2
 400af60:	3825883a 	mov	r18,r7
 400af64:	003f0a06 	br	400ab90 <__adddf3+0x170>
 400af68:	2023883a 	mov	r17,r4
 400af6c:	003f0d06 	br	400aba4 <__adddf3+0x184>
 400af70:	0081ffc4 	movi	r2,2047
 400af74:	80bf3f1e 	bne	r16,r2,400ac74 <__adddf3+0x254>
 400af78:	003ec806 	br	400aa9c <__adddf3+0x7c>
 400af7c:	0005883a 	mov	r2,zero
 400af80:	003fb106 	br	400ae48 <__adddf3+0x428>
 400af84:	0007883a 	mov	r3,zero
 400af88:	003fbc06 	br	400ae7c <__adddf3+0x45c>
 400af8c:	4444b03a 	or	r2,r8,r17
 400af90:	8000871e 	bne	r16,zero,400b1b0 <__adddf3+0x790>
 400af94:	1000ba26 	beq	r2,zero,400b280 <__adddf3+0x860>
 400af98:	4984b03a 	or	r2,r9,r6
 400af9c:	103ebf26 	beq	r2,zero,400aa9c <__adddf3+0x7c>
 400afa0:	8985883a 	add	r2,r17,r6
 400afa4:	4247883a 	add	r3,r8,r9
 400afa8:	1451803a 	cmpltu	r8,r2,r17
 400afac:	40d1883a 	add	r8,r8,r3
 400afb0:	40c0202c 	andhi	r3,r8,128
 400afb4:	1023883a 	mov	r17,r2
 400afb8:	183f1a26 	beq	r3,zero,400ac24 <__adddf3+0x204>
 400afbc:	00bfe034 	movhi	r2,65408
 400afc0:	10bfffc4 	addi	r2,r2,-1
 400afc4:	2021883a 	mov	r16,r4
 400afc8:	4090703a 	and	r8,r8,r2
 400afcc:	003eb306 	br	400aa9c <__adddf3+0x7c>
 400afd0:	4444b03a 	or	r2,r8,r17
 400afd4:	8000291e 	bne	r16,zero,400b07c <__adddf3+0x65c>
 400afd8:	10004b1e 	bne	r2,zero,400b108 <__adddf3+0x6e8>
 400afdc:	4990b03a 	or	r8,r9,r6
 400afe0:	40008b26 	beq	r8,zero,400b210 <__adddf3+0x7f0>
 400afe4:	4811883a 	mov	r8,r9
 400afe8:	3023883a 	mov	r17,r6
 400afec:	3825883a 	mov	r18,r7
 400aff0:	003eaa06 	br	400aa9c <__adddf3+0x7c>
 400aff4:	1021883a 	mov	r16,r2
 400aff8:	0011883a 	mov	r8,zero
 400affc:	0005883a 	mov	r2,zero
 400b000:	003f0f06 	br	400ac40 <__adddf3+0x220>
 400b004:	217ff804 	addi	r5,r4,-32
 400b008:	00800804 	movi	r2,32
 400b00c:	494ad83a 	srl	r5,r9,r5
 400b010:	20807d26 	beq	r4,r2,400b208 <__adddf3+0x7e8>
 400b014:	00801004 	movi	r2,64
 400b018:	1109c83a 	sub	r4,r2,r4
 400b01c:	4912983a 	sll	r9,r9,r4
 400b020:	498cb03a 	or	r6,r9,r6
 400b024:	300cc03a 	cmpne	r6,r6,zero
 400b028:	298ab03a 	or	r5,r5,r6
 400b02c:	0013883a 	mov	r9,zero
 400b030:	003f1506 	br	400ac88 <__adddf3+0x268>
 400b034:	0101ffc4 	movi	r4,2047
 400b038:	113f9a1e 	bne	r2,r4,400aea4 <__adddf3+0x484>
 400b03c:	4811883a 	mov	r8,r9
 400b040:	3023883a 	mov	r17,r6
 400b044:	1021883a 	mov	r16,r2
 400b048:	3825883a 	mov	r18,r7
 400b04c:	003e9306 	br	400aa9c <__adddf3+0x7c>
 400b050:	8000161e 	bne	r16,zero,400b0ac <__adddf3+0x68c>
 400b054:	444ab03a 	or	r5,r8,r17
 400b058:	28005126 	beq	r5,zero,400b1a0 <__adddf3+0x780>
 400b05c:	0108303a 	nor	r4,zero,r4
 400b060:	20004d1e 	bne	r4,zero,400b198 <__adddf3+0x778>
 400b064:	89a3883a 	add	r17,r17,r6
 400b068:	4253883a 	add	r9,r8,r9
 400b06c:	898d803a 	cmpltu	r6,r17,r6
 400b070:	3251883a 	add	r8,r6,r9
 400b074:	1021883a 	mov	r16,r2
 400b078:	003f0806 	br	400ac9c <__adddf3+0x27c>
 400b07c:	1000301e 	bne	r2,zero,400b140 <__adddf3+0x720>
 400b080:	4984b03a 	or	r2,r9,r6
 400b084:	10007126 	beq	r2,zero,400b24c <__adddf3+0x82c>
 400b088:	4811883a 	mov	r8,r9
 400b08c:	3023883a 	mov	r17,r6
 400b090:	3825883a 	mov	r18,r7
 400b094:	0401ffc4 	movi	r16,2047
 400b098:	003e8006 	br	400aa9c <__adddf3+0x7c>
 400b09c:	4462b03a 	or	r17,r8,r17
 400b0a0:	8822c03a 	cmpne	r17,r17,zero
 400b0a4:	0007883a 	mov	r3,zero
 400b0a8:	003f8b06 	br	400aed8 <__adddf3+0x4b8>
 400b0ac:	0141ffc4 	movi	r5,2047
 400b0b0:	11403b26 	beq	r2,r5,400b1a0 <__adddf3+0x780>
 400b0b4:	0109c83a 	sub	r4,zero,r4
 400b0b8:	42002034 	orhi	r8,r8,128
 400b0bc:	01400e04 	movi	r5,56
 400b0c0:	29006716 	blt	r5,r4,400b260 <__adddf3+0x840>
 400b0c4:	014007c4 	movi	r5,31
 400b0c8:	29007016 	blt	r5,r4,400b28c <__adddf3+0x86c>
 400b0cc:	01400804 	movi	r5,32
 400b0d0:	290bc83a 	sub	r5,r5,r4
 400b0d4:	4154983a 	sll	r10,r8,r5
 400b0d8:	890ed83a 	srl	r7,r17,r4
 400b0dc:	894a983a 	sll	r5,r17,r5
 400b0e0:	4108d83a 	srl	r4,r8,r4
 400b0e4:	51e2b03a 	or	r17,r10,r7
 400b0e8:	280ac03a 	cmpne	r5,r5,zero
 400b0ec:	8962b03a 	or	r17,r17,r5
 400b0f0:	89a3883a 	add	r17,r17,r6
 400b0f4:	2253883a 	add	r9,r4,r9
 400b0f8:	898d803a 	cmpltu	r6,r17,r6
 400b0fc:	3251883a 	add	r8,r6,r9
 400b100:	1021883a 	mov	r16,r2
 400b104:	003ee506 	br	400ac9c <__adddf3+0x27c>
 400b108:	4984b03a 	or	r2,r9,r6
 400b10c:	103e6326 	beq	r2,zero,400aa9c <__adddf3+0x7c>
 400b110:	8987c83a 	sub	r3,r17,r6
 400b114:	88c9803a 	cmpltu	r4,r17,r3
 400b118:	4245c83a 	sub	r2,r8,r9
 400b11c:	1105c83a 	sub	r2,r2,r4
 400b120:	1100202c 	andhi	r4,r2,128
 400b124:	203ebb26 	beq	r4,zero,400ac14 <__adddf3+0x1f4>
 400b128:	3463c83a 	sub	r17,r6,r17
 400b12c:	4a07c83a 	sub	r3,r9,r8
 400b130:	344d803a 	cmpltu	r6,r6,r17
 400b134:	1991c83a 	sub	r8,r3,r6
 400b138:	3825883a 	mov	r18,r7
 400b13c:	003e5706 	br	400aa9c <__adddf3+0x7c>
 400b140:	4984b03a 	or	r2,r9,r6
 400b144:	10002e26 	beq	r2,zero,400b200 <__adddf3+0x7e0>
 400b148:	4004d0fa 	srli	r2,r8,3
 400b14c:	8822d0fa 	srli	r17,r17,3
 400b150:	4010977a 	slli	r8,r8,29
 400b154:	10c0022c 	andhi	r3,r2,8
 400b158:	4462b03a 	or	r17,r8,r17
 400b15c:	18000826 	beq	r3,zero,400b180 <__adddf3+0x760>
 400b160:	4808d0fa 	srli	r4,r9,3
 400b164:	20c0022c 	andhi	r3,r4,8
 400b168:	1800051e 	bne	r3,zero,400b180 <__adddf3+0x760>
 400b16c:	300cd0fa 	srli	r6,r6,3
 400b170:	4806977a 	slli	r3,r9,29
 400b174:	2005883a 	mov	r2,r4
 400b178:	3825883a 	mov	r18,r7
 400b17c:	19a2b03a 	or	r17,r3,r6
 400b180:	8810d77a 	srli	r8,r17,29
 400b184:	100490fa 	slli	r2,r2,3
 400b188:	882290fa 	slli	r17,r17,3
 400b18c:	0401ffc4 	movi	r16,2047
 400b190:	4090b03a 	or	r8,r8,r2
 400b194:	003e4106 	br	400aa9c <__adddf3+0x7c>
 400b198:	0141ffc4 	movi	r5,2047
 400b19c:	117fc71e 	bne	r2,r5,400b0bc <__adddf3+0x69c>
 400b1a0:	4811883a 	mov	r8,r9
 400b1a4:	3023883a 	mov	r17,r6
 400b1a8:	1021883a 	mov	r16,r2
 400b1ac:	003e3b06 	br	400aa9c <__adddf3+0x7c>
 400b1b0:	10002f26 	beq	r2,zero,400b270 <__adddf3+0x850>
 400b1b4:	4984b03a 	or	r2,r9,r6
 400b1b8:	10001126 	beq	r2,zero,400b200 <__adddf3+0x7e0>
 400b1bc:	4004d0fa 	srli	r2,r8,3
 400b1c0:	8822d0fa 	srli	r17,r17,3
 400b1c4:	4010977a 	slli	r8,r8,29
 400b1c8:	10c0022c 	andhi	r3,r2,8
 400b1cc:	4462b03a 	or	r17,r8,r17
 400b1d0:	183feb26 	beq	r3,zero,400b180 <__adddf3+0x760>
 400b1d4:	4808d0fa 	srli	r4,r9,3
 400b1d8:	20c0022c 	andhi	r3,r4,8
 400b1dc:	183fe81e 	bne	r3,zero,400b180 <__adddf3+0x760>
 400b1e0:	300cd0fa 	srli	r6,r6,3
 400b1e4:	4806977a 	slli	r3,r9,29
 400b1e8:	2005883a 	mov	r2,r4
 400b1ec:	19a2b03a 	or	r17,r3,r6
 400b1f0:	003fe306 	br	400b180 <__adddf3+0x760>
 400b1f4:	0011883a 	mov	r8,zero
 400b1f8:	0005883a 	mov	r2,zero
 400b1fc:	003e3f06 	br	400aafc <__adddf3+0xdc>
 400b200:	0401ffc4 	movi	r16,2047
 400b204:	003e2506 	br	400aa9c <__adddf3+0x7c>
 400b208:	0013883a 	mov	r9,zero
 400b20c:	003f8406 	br	400b020 <__adddf3+0x600>
 400b210:	0005883a 	mov	r2,zero
 400b214:	0007883a 	mov	r3,zero
 400b218:	003e8906 	br	400ac40 <__adddf3+0x220>
 400b21c:	197ff804 	addi	r5,r3,-32
 400b220:	01000804 	movi	r4,32
 400b224:	414ad83a 	srl	r5,r8,r5
 400b228:	19002426 	beq	r3,r4,400b2bc <__adddf3+0x89c>
 400b22c:	01001004 	movi	r4,64
 400b230:	20c7c83a 	sub	r3,r4,r3
 400b234:	40c6983a 	sll	r3,r8,r3
 400b238:	1c46b03a 	or	r3,r3,r17
 400b23c:	1806c03a 	cmpne	r3,r3,zero
 400b240:	28e2b03a 	or	r17,r5,r3
 400b244:	0007883a 	mov	r3,zero
 400b248:	003f2306 	br	400aed8 <__adddf3+0x4b8>
 400b24c:	0007883a 	mov	r3,zero
 400b250:	5811883a 	mov	r8,r11
 400b254:	00bfffc4 	movi	r2,-1
 400b258:	0401ffc4 	movi	r16,2047
 400b25c:	003e7806 	br	400ac40 <__adddf3+0x220>
 400b260:	4462b03a 	or	r17,r8,r17
 400b264:	8822c03a 	cmpne	r17,r17,zero
 400b268:	0009883a 	mov	r4,zero
 400b26c:	003fa006 	br	400b0f0 <__adddf3+0x6d0>
 400b270:	4811883a 	mov	r8,r9
 400b274:	3023883a 	mov	r17,r6
 400b278:	0401ffc4 	movi	r16,2047
 400b27c:	003e0706 	br	400aa9c <__adddf3+0x7c>
 400b280:	4811883a 	mov	r8,r9
 400b284:	3023883a 	mov	r17,r6
 400b288:	003e0406 	br	400aa9c <__adddf3+0x7c>
 400b28c:	21fff804 	addi	r7,r4,-32
 400b290:	01400804 	movi	r5,32
 400b294:	41ced83a 	srl	r7,r8,r7
 400b298:	21400a26 	beq	r4,r5,400b2c4 <__adddf3+0x8a4>
 400b29c:	01401004 	movi	r5,64
 400b2a0:	2909c83a 	sub	r4,r5,r4
 400b2a4:	4108983a 	sll	r4,r8,r4
 400b2a8:	2448b03a 	or	r4,r4,r17
 400b2ac:	2008c03a 	cmpne	r4,r4,zero
 400b2b0:	3922b03a 	or	r17,r7,r4
 400b2b4:	0009883a 	mov	r4,zero
 400b2b8:	003f8d06 	br	400b0f0 <__adddf3+0x6d0>
 400b2bc:	0007883a 	mov	r3,zero
 400b2c0:	003fdd06 	br	400b238 <__adddf3+0x818>
 400b2c4:	0009883a 	mov	r4,zero
 400b2c8:	003ff706 	br	400b2a8 <__adddf3+0x888>

0400b2cc <__divdf3>:
 400b2cc:	defff004 	addi	sp,sp,-64
 400b2d0:	dc800815 	stw	r18,32(sp)
 400b2d4:	2824d53a 	srli	r18,r5,20
 400b2d8:	dd800c15 	stw	r22,48(sp)
 400b2dc:	282cd7fa 	srli	r22,r5,31
 400b2e0:	dc000615 	stw	r16,24(sp)
 400b2e4:	04000434 	movhi	r16,16
 400b2e8:	843fffc4 	addi	r16,r16,-1
 400b2ec:	dfc00f15 	stw	ra,60(sp)
 400b2f0:	df000e15 	stw	fp,56(sp)
 400b2f4:	ddc00d15 	stw	r23,52(sp)
 400b2f8:	dd400b15 	stw	r21,44(sp)
 400b2fc:	dd000a15 	stw	r20,40(sp)
 400b300:	dcc00915 	stw	r19,36(sp)
 400b304:	dc400715 	stw	r17,28(sp)
 400b308:	9481ffcc 	andi	r18,r18,2047
 400b30c:	2c20703a 	and	r16,r5,r16
 400b310:	b2003fcc 	andi	r8,r22,255
 400b314:	90006126 	beq	r18,zero,400b49c <__divdf3+0x1d0>
 400b318:	0081ffc4 	movi	r2,2047
 400b31c:	202b883a 	mov	r21,r4
 400b320:	90803726 	beq	r18,r2,400b400 <__divdf3+0x134>
 400b324:	80800434 	orhi	r2,r16,16
 400b328:	100490fa 	slli	r2,r2,3
 400b32c:	2020d77a 	srli	r16,r4,29
 400b330:	202a90fa 	slli	r21,r4,3
 400b334:	94bf0044 	addi	r18,r18,-1023
 400b338:	80a0b03a 	or	r16,r16,r2
 400b33c:	0013883a 	mov	r9,zero
 400b340:	000b883a 	mov	r5,zero
 400b344:	3806d53a 	srli	r3,r7,20
 400b348:	382ed7fa 	srli	r23,r7,31
 400b34c:	04400434 	movhi	r17,16
 400b350:	8c7fffc4 	addi	r17,r17,-1
 400b354:	18c1ffcc 	andi	r3,r3,2047
 400b358:	3029883a 	mov	r20,r6
 400b35c:	3c62703a 	and	r17,r7,r17
 400b360:	bf003fcc 	andi	fp,r23,255
 400b364:	18006e26 	beq	r3,zero,400b520 <__divdf3+0x254>
 400b368:	0081ffc4 	movi	r2,2047
 400b36c:	18806626 	beq	r3,r2,400b508 <__divdf3+0x23c>
 400b370:	88800434 	orhi	r2,r17,16
 400b374:	100490fa 	slli	r2,r2,3
 400b378:	3022d77a 	srli	r17,r6,29
 400b37c:	302890fa 	slli	r20,r6,3
 400b380:	18ff0044 	addi	r3,r3,-1023
 400b384:	88a2b03a 	or	r17,r17,r2
 400b388:	000f883a 	mov	r7,zero
 400b38c:	b5e6f03a 	xor	r19,r22,r23
 400b390:	3a4cb03a 	or	r6,r7,r9
 400b394:	008003c4 	movi	r2,15
 400b398:	9809883a 	mov	r4,r19
 400b39c:	90c7c83a 	sub	r3,r18,r3
 400b3a0:	9cc03fcc 	andi	r19,r19,255
 400b3a4:	11809636 	bltu	r2,r6,400b600 <__divdf3+0x334>
 400b3a8:	300c90ba 	slli	r6,r6,2
 400b3ac:	00810074 	movhi	r2,1025
 400b3b0:	10acf004 	addi	r2,r2,-19520
 400b3b4:	308d883a 	add	r6,r6,r2
 400b3b8:	30800017 	ldw	r2,0(r6)
 400b3bc:	1000683a 	jmp	r2
 400b3c0:	0400b600 	call	400b60 <__ram_exceptions_end+0x400930>
 400b3c4:	0400b438 	rdprs	r16,zero,720
 400b3c8:	0400b5f0 	cmpltui	r16,zero,727
 400b3cc:	0400b42c 	andhi	r16,zero,720
 400b3d0:	0400b5f0 	cmpltui	r16,zero,727
 400b3d4:	0400b5c4 	movi	r16,727
 400b3d8:	0400b5f0 	cmpltui	r16,zero,727
 400b3dc:	0400b42c 	andhi	r16,zero,720
 400b3e0:	0400b438 	rdprs	r16,zero,720
 400b3e4:	0400b438 	rdprs	r16,zero,720
 400b3e8:	0400b5c4 	movi	r16,727
 400b3ec:	0400b42c 	andhi	r16,zero,720
 400b3f0:	0400b41c 	xori	r16,zero,720
 400b3f4:	0400b41c 	xori	r16,zero,720
 400b3f8:	0400b41c 	xori	r16,zero,720
 400b3fc:	0400b988 	cmpgei	r16,zero,742
 400b400:	2404b03a 	or	r2,r4,r16
 400b404:	10006c1e 	bne	r2,zero,400b5b8 <__divdf3+0x2ec>
 400b408:	02400204 	movi	r9,8
 400b40c:	0021883a 	mov	r16,zero
 400b410:	002b883a 	mov	r21,zero
 400b414:	01400084 	movi	r5,2
 400b418:	003fca06 	br	400b344 <__divdf3+0x78>
 400b41c:	8023883a 	mov	r17,r16
 400b420:	a829883a 	mov	r20,r21
 400b424:	4039883a 	mov	fp,r8
 400b428:	280f883a 	mov	r7,r5
 400b42c:	00800084 	movi	r2,2
 400b430:	3881601e 	bne	r7,r2,400b9b4 <__divdf3+0x6e8>
 400b434:	e027883a 	mov	r19,fp
 400b438:	9900004c 	andi	r4,r19,1
 400b43c:	0081ffc4 	movi	r2,2047
 400b440:	0021883a 	mov	r16,zero
 400b444:	002b883a 	mov	r21,zero
 400b448:	1004953a 	slli	r2,r2,20
 400b44c:	20c03fcc 	andi	r3,r4,255
 400b450:	01400434 	movhi	r5,16
 400b454:	297fffc4 	addi	r5,r5,-1
 400b458:	180697fa 	slli	r3,r3,31
 400b45c:	8160703a 	and	r16,r16,r5
 400b460:	80a0b03a 	or	r16,r16,r2
 400b464:	80c6b03a 	or	r3,r16,r3
 400b468:	a805883a 	mov	r2,r21
 400b46c:	dfc00f17 	ldw	ra,60(sp)
 400b470:	df000e17 	ldw	fp,56(sp)
 400b474:	ddc00d17 	ldw	r23,52(sp)
 400b478:	dd800c17 	ldw	r22,48(sp)
 400b47c:	dd400b17 	ldw	r21,44(sp)
 400b480:	dd000a17 	ldw	r20,40(sp)
 400b484:	dcc00917 	ldw	r19,36(sp)
 400b488:	dc800817 	ldw	r18,32(sp)
 400b48c:	dc400717 	ldw	r17,28(sp)
 400b490:	dc000617 	ldw	r16,24(sp)
 400b494:	dec01004 	addi	sp,sp,64
 400b498:	f800283a 	ret
 400b49c:	2404b03a 	or	r2,r4,r16
 400b4a0:	2023883a 	mov	r17,r4
 400b4a4:	10003f26 	beq	r2,zero,400b5a4 <__divdf3+0x2d8>
 400b4a8:	80015e26 	beq	r16,zero,400ba24 <__divdf3+0x758>
 400b4ac:	8009883a 	mov	r4,r16
 400b4b0:	d9800215 	stw	r6,8(sp)
 400b4b4:	d9c00515 	stw	r7,20(sp)
 400b4b8:	da000415 	stw	r8,16(sp)
 400b4bc:	400d2600 	call	400d260 <__clzsi2>
 400b4c0:	d9800217 	ldw	r6,8(sp)
 400b4c4:	d9c00517 	ldw	r7,20(sp)
 400b4c8:	da000417 	ldw	r8,16(sp)
 400b4cc:	113ffd44 	addi	r4,r2,-11
 400b4d0:	00c00704 	movi	r3,28
 400b4d4:	19014f16 	blt	r3,r4,400ba14 <__divdf3+0x748>
 400b4d8:	00c00744 	movi	r3,29
 400b4dc:	157ffe04 	addi	r21,r2,-8
 400b4e0:	1907c83a 	sub	r3,r3,r4
 400b4e4:	8560983a 	sll	r16,r16,r21
 400b4e8:	88c6d83a 	srl	r3,r17,r3
 400b4ec:	8d6a983a 	sll	r21,r17,r21
 400b4f0:	1c20b03a 	or	r16,r3,r16
 400b4f4:	1080fcc4 	addi	r2,r2,1011
 400b4f8:	00a5c83a 	sub	r18,zero,r2
 400b4fc:	0013883a 	mov	r9,zero
 400b500:	000b883a 	mov	r5,zero
 400b504:	003f8f06 	br	400b344 <__divdf3+0x78>
 400b508:	3444b03a 	or	r2,r6,r17
 400b50c:	1000231e 	bne	r2,zero,400b59c <__divdf3+0x2d0>
 400b510:	0023883a 	mov	r17,zero
 400b514:	0029883a 	mov	r20,zero
 400b518:	01c00084 	movi	r7,2
 400b51c:	003f9b06 	br	400b38c <__divdf3+0xc0>
 400b520:	3444b03a 	or	r2,r6,r17
 400b524:	10001926 	beq	r2,zero,400b58c <__divdf3+0x2c0>
 400b528:	88014b26 	beq	r17,zero,400ba58 <__divdf3+0x78c>
 400b52c:	8809883a 	mov	r4,r17
 400b530:	d9400115 	stw	r5,4(sp)
 400b534:	d9800215 	stw	r6,8(sp)
 400b538:	da000415 	stw	r8,16(sp)
 400b53c:	da400315 	stw	r9,12(sp)
 400b540:	400d2600 	call	400d260 <__clzsi2>
 400b544:	d9400117 	ldw	r5,4(sp)
 400b548:	d9800217 	ldw	r6,8(sp)
 400b54c:	da000417 	ldw	r8,16(sp)
 400b550:	da400317 	ldw	r9,12(sp)
 400b554:	113ffd44 	addi	r4,r2,-11
 400b558:	00c00704 	movi	r3,28
 400b55c:	19013a16 	blt	r3,r4,400ba48 <__divdf3+0x77c>
 400b560:	00c00744 	movi	r3,29
 400b564:	153ffe04 	addi	r20,r2,-8
 400b568:	1907c83a 	sub	r3,r3,r4
 400b56c:	8d22983a 	sll	r17,r17,r20
 400b570:	30c6d83a 	srl	r3,r6,r3
 400b574:	3528983a 	sll	r20,r6,r20
 400b578:	1c62b03a 	or	r17,r3,r17
 400b57c:	1080fcc4 	addi	r2,r2,1011
 400b580:	0087c83a 	sub	r3,zero,r2
 400b584:	000f883a 	mov	r7,zero
 400b588:	003f8006 	br	400b38c <__divdf3+0xc0>
 400b58c:	0023883a 	mov	r17,zero
 400b590:	0029883a 	mov	r20,zero
 400b594:	01c00044 	movi	r7,1
 400b598:	003f7c06 	br	400b38c <__divdf3+0xc0>
 400b59c:	01c000c4 	movi	r7,3
 400b5a0:	003f7a06 	br	400b38c <__divdf3+0xc0>
 400b5a4:	02400104 	movi	r9,4
 400b5a8:	0021883a 	mov	r16,zero
 400b5ac:	002b883a 	mov	r21,zero
 400b5b0:	01400044 	movi	r5,1
 400b5b4:	003f6306 	br	400b344 <__divdf3+0x78>
 400b5b8:	02400304 	movi	r9,12
 400b5bc:	014000c4 	movi	r5,3
 400b5c0:	003f6006 	br	400b344 <__divdf3+0x78>
 400b5c4:	04000434 	movhi	r16,16
 400b5c8:	0009883a 	mov	r4,zero
 400b5cc:	843fffc4 	addi	r16,r16,-1
 400b5d0:	057fffc4 	movi	r21,-1
 400b5d4:	0081ffc4 	movi	r2,2047
 400b5d8:	003f9b06 	br	400b448 <__divdf3+0x17c>
 400b5dc:	00c00044 	movi	r3,1
 400b5e0:	1887c83a 	sub	r3,r3,r2
 400b5e4:	01000e04 	movi	r4,56
 400b5e8:	20c1530e 	bge	r4,r3,400bb38 <__divdf3+0x86c>
 400b5ec:	9900004c 	andi	r4,r19,1
 400b5f0:	0005883a 	mov	r2,zero
 400b5f4:	0021883a 	mov	r16,zero
 400b5f8:	002b883a 	mov	r21,zero
 400b5fc:	003f9206 	br	400b448 <__divdf3+0x17c>
 400b600:	8c012e36 	bltu	r17,r16,400babc <__divdf3+0x7f0>
 400b604:	84412c26 	beq	r16,r17,400bab8 <__divdf3+0x7ec>
 400b608:	a82f883a 	mov	r23,r21
 400b60c:	18ffffc4 	addi	r3,r3,-1
 400b610:	002b883a 	mov	r21,zero
 400b614:	a004d63a 	srli	r2,r20,24
 400b618:	8822923a 	slli	r17,r17,8
 400b61c:	a028923a 	slli	r20,r20,8
 400b620:	8009883a 	mov	r4,r16
 400b624:	88acb03a 	or	r22,r17,r2
 400b628:	dd000015 	stw	r20,0(sp)
 400b62c:	b028d43a 	srli	r20,r22,16
 400b630:	d8c00215 	stw	r3,8(sp)
 400b634:	b4bfffcc 	andi	r18,r22,65535
 400b638:	a00b883a 	mov	r5,r20
 400b63c:	400a93c0 	call	400a93c <__udivsi3>
 400b640:	100b883a 	mov	r5,r2
 400b644:	9009883a 	mov	r4,r18
 400b648:	1023883a 	mov	r17,r2
 400b64c:	400a9f80 	call	400a9f8 <__mulsi3>
 400b650:	8009883a 	mov	r4,r16
 400b654:	a00b883a 	mov	r5,r20
 400b658:	1039883a 	mov	fp,r2
 400b65c:	400a9a00 	call	400a9a0 <__umodsi3>
 400b660:	1004943a 	slli	r2,r2,16
 400b664:	b808d43a 	srli	r4,r23,16
 400b668:	d8c00217 	ldw	r3,8(sp)
 400b66c:	2084b03a 	or	r2,r4,r2
 400b670:	1700062e 	bgeu	r2,fp,400b68c <__divdf3+0x3c0>
 400b674:	1585883a 	add	r2,r2,r22
 400b678:	893fffc4 	addi	r4,r17,-1
 400b67c:	15811d36 	bltu	r2,r22,400baf4 <__divdf3+0x828>
 400b680:	17011c2e 	bgeu	r2,fp,400baf4 <__divdf3+0x828>
 400b684:	8c7fff84 	addi	r17,r17,-2
 400b688:	1585883a 	add	r2,r2,r22
 400b68c:	1739c83a 	sub	fp,r2,fp
 400b690:	a00b883a 	mov	r5,r20
 400b694:	e009883a 	mov	r4,fp
 400b698:	d8c00215 	stw	r3,8(sp)
 400b69c:	400a93c0 	call	400a93c <__udivsi3>
 400b6a0:	100b883a 	mov	r5,r2
 400b6a4:	9009883a 	mov	r4,r18
 400b6a8:	1021883a 	mov	r16,r2
 400b6ac:	400a9f80 	call	400a9f8 <__mulsi3>
 400b6b0:	a00b883a 	mov	r5,r20
 400b6b4:	e009883a 	mov	r4,fp
 400b6b8:	d8800415 	stw	r2,16(sp)
 400b6bc:	400a9a00 	call	400a9a0 <__umodsi3>
 400b6c0:	1004943a 	slli	r2,r2,16
 400b6c4:	da000417 	ldw	r8,16(sp)
 400b6c8:	bdffffcc 	andi	r23,r23,65535
 400b6cc:	b884b03a 	or	r2,r23,r2
 400b6d0:	d8c00217 	ldw	r3,8(sp)
 400b6d4:	1200062e 	bgeu	r2,r8,400b6f0 <__divdf3+0x424>
 400b6d8:	1585883a 	add	r2,r2,r22
 400b6dc:	813fffc4 	addi	r4,r16,-1
 400b6e0:	15810236 	bltu	r2,r22,400baec <__divdf3+0x820>
 400b6e4:	1201012e 	bgeu	r2,r8,400baec <__divdf3+0x820>
 400b6e8:	843fff84 	addi	r16,r16,-2
 400b6ec:	1585883a 	add	r2,r2,r22
 400b6f0:	8822943a 	slli	r17,r17,16
 400b6f4:	d9800017 	ldw	r6,0(sp)
 400b6f8:	1211c83a 	sub	r8,r2,r8
 400b6fc:	8c22b03a 	or	r17,r17,r16
 400b700:	373fffcc 	andi	fp,r6,65535
 400b704:	8abfffcc 	andi	r10,r17,65535
 400b708:	8820d43a 	srli	r16,r17,16
 400b70c:	5009883a 	mov	r4,r10
 400b710:	e00b883a 	mov	r5,fp
 400b714:	302ed43a 	srli	r23,r6,16
 400b718:	d8c00215 	stw	r3,8(sp)
 400b71c:	da000415 	stw	r8,16(sp)
 400b720:	da800115 	stw	r10,4(sp)
 400b724:	400a9f80 	call	400a9f8 <__mulsi3>
 400b728:	800b883a 	mov	r5,r16
 400b72c:	e009883a 	mov	r4,fp
 400b730:	d8800515 	stw	r2,20(sp)
 400b734:	400a9f80 	call	400a9f8 <__mulsi3>
 400b738:	8009883a 	mov	r4,r16
 400b73c:	b80b883a 	mov	r5,r23
 400b740:	d8800315 	stw	r2,12(sp)
 400b744:	400a9f80 	call	400a9f8 <__mulsi3>
 400b748:	da800117 	ldw	r10,4(sp)
 400b74c:	b80b883a 	mov	r5,r23
 400b750:	1021883a 	mov	r16,r2
 400b754:	5009883a 	mov	r4,r10
 400b758:	400a9f80 	call	400a9f8 <__mulsi3>
 400b75c:	d9c00517 	ldw	r7,20(sp)
 400b760:	da400317 	ldw	r9,12(sp)
 400b764:	d8c00217 	ldw	r3,8(sp)
 400b768:	3808d43a 	srli	r4,r7,16
 400b76c:	1245883a 	add	r2,r2,r9
 400b770:	da000417 	ldw	r8,16(sp)
 400b774:	2085883a 	add	r2,r4,r2
 400b778:	1240022e 	bgeu	r2,r9,400b784 <__divdf3+0x4b8>
 400b77c:	01000074 	movhi	r4,1
 400b780:	8121883a 	add	r16,r16,r4
 400b784:	1008d43a 	srli	r4,r2,16
 400b788:	1004943a 	slli	r2,r2,16
 400b78c:	39ffffcc 	andi	r7,r7,65535
 400b790:	2409883a 	add	r4,r4,r16
 400b794:	11c5883a 	add	r2,r2,r7
 400b798:	4100bb36 	bltu	r8,r4,400ba88 <__divdf3+0x7bc>
 400b79c:	4100d726 	beq	r8,r4,400bafc <__divdf3+0x830>
 400b7a0:	4109c83a 	sub	r4,r8,r4
 400b7a4:	a8a1c83a 	sub	r16,r21,r2
 400b7a8:	ac2b803a 	cmpltu	r21,r21,r16
 400b7ac:	256bc83a 	sub	r21,r4,r21
 400b7b0:	b540d926 	beq	r22,r21,400bb18 <__divdf3+0x84c>
 400b7b4:	a00b883a 	mov	r5,r20
 400b7b8:	a809883a 	mov	r4,r21
 400b7bc:	d8c00215 	stw	r3,8(sp)
 400b7c0:	400a93c0 	call	400a93c <__udivsi3>
 400b7c4:	100b883a 	mov	r5,r2
 400b7c8:	9009883a 	mov	r4,r18
 400b7cc:	d8800515 	stw	r2,20(sp)
 400b7d0:	400a9f80 	call	400a9f8 <__mulsi3>
 400b7d4:	a809883a 	mov	r4,r21
 400b7d8:	a00b883a 	mov	r5,r20
 400b7dc:	d8800415 	stw	r2,16(sp)
 400b7e0:	400a9a00 	call	400a9a0 <__umodsi3>
 400b7e4:	1004943a 	slli	r2,r2,16
 400b7e8:	8008d43a 	srli	r4,r16,16
 400b7ec:	da000417 	ldw	r8,16(sp)
 400b7f0:	d8c00217 	ldw	r3,8(sp)
 400b7f4:	2084b03a 	or	r2,r4,r2
 400b7f8:	d9c00517 	ldw	r7,20(sp)
 400b7fc:	1200062e 	bgeu	r2,r8,400b818 <__divdf3+0x54c>
 400b800:	1585883a 	add	r2,r2,r22
 400b804:	393fffc4 	addi	r4,r7,-1
 400b808:	1580c536 	bltu	r2,r22,400bb20 <__divdf3+0x854>
 400b80c:	1200c42e 	bgeu	r2,r8,400bb20 <__divdf3+0x854>
 400b810:	39ffff84 	addi	r7,r7,-2
 400b814:	1585883a 	add	r2,r2,r22
 400b818:	122bc83a 	sub	r21,r2,r8
 400b81c:	a00b883a 	mov	r5,r20
 400b820:	a809883a 	mov	r4,r21
 400b824:	d8c00215 	stw	r3,8(sp)
 400b828:	d9c00515 	stw	r7,20(sp)
 400b82c:	400a93c0 	call	400a93c <__udivsi3>
 400b830:	9009883a 	mov	r4,r18
 400b834:	100b883a 	mov	r5,r2
 400b838:	d8800415 	stw	r2,16(sp)
 400b83c:	400a9f80 	call	400a9f8 <__mulsi3>
 400b840:	a809883a 	mov	r4,r21
 400b844:	a00b883a 	mov	r5,r20
 400b848:	1025883a 	mov	r18,r2
 400b84c:	400a9a00 	call	400a9a0 <__umodsi3>
 400b850:	1004943a 	slli	r2,r2,16
 400b854:	813fffcc 	andi	r4,r16,65535
 400b858:	d8c00217 	ldw	r3,8(sp)
 400b85c:	20a0b03a 	or	r16,r4,r2
 400b860:	d9c00517 	ldw	r7,20(sp)
 400b864:	da000417 	ldw	r8,16(sp)
 400b868:	8480062e 	bgeu	r16,r18,400b884 <__divdf3+0x5b8>
 400b86c:	85a1883a 	add	r16,r16,r22
 400b870:	40bfffc4 	addi	r2,r8,-1
 400b874:	8580ac36 	bltu	r16,r22,400bb28 <__divdf3+0x85c>
 400b878:	8480ab2e 	bgeu	r16,r18,400bb28 <__divdf3+0x85c>
 400b87c:	423fff84 	addi	r8,r8,-2
 400b880:	85a1883a 	add	r16,r16,r22
 400b884:	3804943a 	slli	r2,r7,16
 400b888:	84a1c83a 	sub	r16,r16,r18
 400b88c:	e009883a 	mov	r4,fp
 400b890:	1228b03a 	or	r20,r2,r8
 400b894:	a1ffffcc 	andi	r7,r20,65535
 400b898:	a024d43a 	srli	r18,r20,16
 400b89c:	380b883a 	mov	r5,r7
 400b8a0:	d8c00215 	stw	r3,8(sp)
 400b8a4:	d9c00515 	stw	r7,20(sp)
 400b8a8:	400a9f80 	call	400a9f8 <__mulsi3>
 400b8ac:	900b883a 	mov	r5,r18
 400b8b0:	e009883a 	mov	r4,fp
 400b8b4:	102b883a 	mov	r21,r2
 400b8b8:	400a9f80 	call	400a9f8 <__mulsi3>
 400b8bc:	900b883a 	mov	r5,r18
 400b8c0:	b809883a 	mov	r4,r23
 400b8c4:	1039883a 	mov	fp,r2
 400b8c8:	400a9f80 	call	400a9f8 <__mulsi3>
 400b8cc:	d9c00517 	ldw	r7,20(sp)
 400b8d0:	b80b883a 	mov	r5,r23
 400b8d4:	1025883a 	mov	r18,r2
 400b8d8:	3809883a 	mov	r4,r7
 400b8dc:	400a9f80 	call	400a9f8 <__mulsi3>
 400b8e0:	a808d43a 	srli	r4,r21,16
 400b8e4:	1705883a 	add	r2,r2,fp
 400b8e8:	d8c00217 	ldw	r3,8(sp)
 400b8ec:	2085883a 	add	r2,r4,r2
 400b8f0:	1700022e 	bgeu	r2,fp,400b8fc <__divdf3+0x630>
 400b8f4:	01000074 	movhi	r4,1
 400b8f8:	9125883a 	add	r18,r18,r4
 400b8fc:	1008d43a 	srli	r4,r2,16
 400b900:	1004943a 	slli	r2,r2,16
 400b904:	ad7fffcc 	andi	r21,r21,65535
 400b908:	2489883a 	add	r4,r4,r18
 400b90c:	1545883a 	add	r2,r2,r21
 400b910:	81003836 	bltu	r16,r4,400b9f4 <__divdf3+0x728>
 400b914:	81003626 	beq	r16,r4,400b9f0 <__divdf3+0x724>
 400b918:	a5000054 	ori	r20,r20,1
 400b91c:	1880ffc4 	addi	r2,r3,1023
 400b920:	00bf2e0e 	bge	zero,r2,400b5dc <__divdf3+0x310>
 400b924:	a10001cc 	andi	r4,r20,7
 400b928:	20000726 	beq	r4,zero,400b948 <__divdf3+0x67c>
 400b92c:	a10003cc 	andi	r4,r20,15
 400b930:	01400104 	movi	r5,4
 400b934:	21400426 	beq	r4,r5,400b948 <__divdf3+0x67c>
 400b938:	a149883a 	add	r4,r20,r5
 400b93c:	2529803a 	cmpltu	r20,r4,r20
 400b940:	8d23883a 	add	r17,r17,r20
 400b944:	2029883a 	mov	r20,r4
 400b948:	8900402c 	andhi	r4,r17,256
 400b94c:	20000426 	beq	r4,zero,400b960 <__divdf3+0x694>
 400b950:	18810004 	addi	r2,r3,1024
 400b954:	00ffc034 	movhi	r3,65280
 400b958:	18ffffc4 	addi	r3,r3,-1
 400b95c:	88e2703a 	and	r17,r17,r3
 400b960:	00c1ff84 	movi	r3,2046
 400b964:	18beb416 	blt	r3,r2,400b438 <__divdf3+0x16c>
 400b968:	a028d0fa 	srli	r20,r20,3
 400b96c:	882a977a 	slli	r21,r17,29
 400b970:	8820927a 	slli	r16,r17,9
 400b974:	1081ffcc 	andi	r2,r2,2047
 400b978:	ad2ab03a 	or	r21,r21,r20
 400b97c:	8020d33a 	srli	r16,r16,12
 400b980:	9900004c 	andi	r4,r19,1
 400b984:	003eb006 	br	400b448 <__divdf3+0x17c>
 400b988:	8080022c 	andhi	r2,r16,8
 400b98c:	10001226 	beq	r2,zero,400b9d8 <__divdf3+0x70c>
 400b990:	8880022c 	andhi	r2,r17,8
 400b994:	1000101e 	bne	r2,zero,400b9d8 <__divdf3+0x70c>
 400b998:	00800434 	movhi	r2,16
 400b99c:	8c000234 	orhi	r16,r17,8
 400b9a0:	10bfffc4 	addi	r2,r2,-1
 400b9a4:	b809883a 	mov	r4,r23
 400b9a8:	80a0703a 	and	r16,r16,r2
 400b9ac:	a02b883a 	mov	r21,r20
 400b9b0:	003f0806 	br	400b5d4 <__divdf3+0x308>
 400b9b4:	008000c4 	movi	r2,3
 400b9b8:	3880b126 	beq	r7,r2,400bc80 <__divdf3+0x9b4>
 400b9bc:	00800044 	movi	r2,1
 400b9c0:	38805b1e 	bne	r7,r2,400bb30 <__divdf3+0x864>
 400b9c4:	e009883a 	mov	r4,fp
 400b9c8:	0005883a 	mov	r2,zero
 400b9cc:	0021883a 	mov	r16,zero
 400b9d0:	002b883a 	mov	r21,zero
 400b9d4:	003e9c06 	br	400b448 <__divdf3+0x17c>
 400b9d8:	00800434 	movhi	r2,16
 400b9dc:	84000234 	orhi	r16,r16,8
 400b9e0:	10bfffc4 	addi	r2,r2,-1
 400b9e4:	b009883a 	mov	r4,r22
 400b9e8:	80a0703a 	and	r16,r16,r2
 400b9ec:	003ef906 	br	400b5d4 <__divdf3+0x308>
 400b9f0:	103fca26 	beq	r2,zero,400b91c <__divdf3+0x650>
 400b9f4:	b421883a 	add	r16,r22,r16
 400b9f8:	a17fffc4 	addi	r5,r20,-1
 400b9fc:	8580422e 	bgeu	r16,r22,400bb08 <__divdf3+0x83c>
 400ba00:	2829883a 	mov	r20,r5
 400ba04:	813fc41e 	bne	r16,r4,400b918 <__divdf3+0x64c>
 400ba08:	d9800017 	ldw	r6,0(sp)
 400ba0c:	30bfc21e 	bne	r6,r2,400b918 <__divdf3+0x64c>
 400ba10:	003fc206 	br	400b91c <__divdf3+0x650>
 400ba14:	143ff604 	addi	r16,r2,-40
 400ba18:	8c20983a 	sll	r16,r17,r16
 400ba1c:	002b883a 	mov	r21,zero
 400ba20:	003eb406 	br	400b4f4 <__divdf3+0x228>
 400ba24:	d9800215 	stw	r6,8(sp)
 400ba28:	d9c00515 	stw	r7,20(sp)
 400ba2c:	da000415 	stw	r8,16(sp)
 400ba30:	400d2600 	call	400d260 <__clzsi2>
 400ba34:	10800804 	addi	r2,r2,32
 400ba38:	da000417 	ldw	r8,16(sp)
 400ba3c:	d9c00517 	ldw	r7,20(sp)
 400ba40:	d9800217 	ldw	r6,8(sp)
 400ba44:	003ea106 	br	400b4cc <__divdf3+0x200>
 400ba48:	147ff604 	addi	r17,r2,-40
 400ba4c:	3462983a 	sll	r17,r6,r17
 400ba50:	0029883a 	mov	r20,zero
 400ba54:	003ec906 	br	400b57c <__divdf3+0x2b0>
 400ba58:	3009883a 	mov	r4,r6
 400ba5c:	d9400115 	stw	r5,4(sp)
 400ba60:	d9800215 	stw	r6,8(sp)
 400ba64:	da000415 	stw	r8,16(sp)
 400ba68:	da400315 	stw	r9,12(sp)
 400ba6c:	400d2600 	call	400d260 <__clzsi2>
 400ba70:	10800804 	addi	r2,r2,32
 400ba74:	da400317 	ldw	r9,12(sp)
 400ba78:	da000417 	ldw	r8,16(sp)
 400ba7c:	d9800217 	ldw	r6,8(sp)
 400ba80:	d9400117 	ldw	r5,4(sp)
 400ba84:	003eb306 	br	400b554 <__divdf3+0x288>
 400ba88:	d9800017 	ldw	r6,0(sp)
 400ba8c:	a9ab883a 	add	r21,r21,r6
 400ba90:	a98b803a 	cmpltu	r5,r21,r6
 400ba94:	2d8b883a 	add	r5,r5,r22
 400ba98:	2a11883a 	add	r8,r5,r8
 400ba9c:	897fffc4 	addi	r5,r17,-1
 400baa0:	b2000c2e 	bgeu	r22,r8,400bad4 <__divdf3+0x808>
 400baa4:	41003f36 	bltu	r8,r4,400bba4 <__divdf3+0x8d8>
 400baa8:	22006c26 	beq	r4,r8,400bc5c <__divdf3+0x990>
 400baac:	4109c83a 	sub	r4,r8,r4
 400bab0:	2823883a 	mov	r17,r5
 400bab4:	003f3b06 	br	400b7a4 <__divdf3+0x4d8>
 400bab8:	ad3ed336 	bltu	r21,r20,400b608 <__divdf3+0x33c>
 400babc:	a804d07a 	srli	r2,r21,1
 400bac0:	802e97fa 	slli	r23,r16,31
 400bac4:	a82a97fa 	slli	r21,r21,31
 400bac8:	8020d07a 	srli	r16,r16,1
 400bacc:	b8aeb03a 	or	r23,r23,r2
 400bad0:	003ed006 	br	400b614 <__divdf3+0x348>
 400bad4:	b23ff51e 	bne	r22,r8,400baac <__divdf3+0x7e0>
 400bad8:	d9800017 	ldw	r6,0(sp)
 400badc:	a9bff12e 	bgeu	r21,r6,400baa4 <__divdf3+0x7d8>
 400bae0:	b109c83a 	sub	r4,r22,r4
 400bae4:	2823883a 	mov	r17,r5
 400bae8:	003f2e06 	br	400b7a4 <__divdf3+0x4d8>
 400baec:	2021883a 	mov	r16,r4
 400baf0:	003eff06 	br	400b6f0 <__divdf3+0x424>
 400baf4:	2023883a 	mov	r17,r4
 400baf8:	003ee406 	br	400b68c <__divdf3+0x3c0>
 400bafc:	a8bfe236 	bltu	r21,r2,400ba88 <__divdf3+0x7bc>
 400bb00:	0009883a 	mov	r4,zero
 400bb04:	003f2706 	br	400b7a4 <__divdf3+0x4d8>
 400bb08:	81002d36 	bltu	r16,r4,400bbc0 <__divdf3+0x8f4>
 400bb0c:	24005626 	beq	r4,r16,400bc68 <__divdf3+0x99c>
 400bb10:	2829883a 	mov	r20,r5
 400bb14:	003f8006 	br	400b918 <__divdf3+0x64c>
 400bb18:	053fffc4 	movi	r20,-1
 400bb1c:	003f7f06 	br	400b91c <__divdf3+0x650>
 400bb20:	200f883a 	mov	r7,r4
 400bb24:	003f3c06 	br	400b818 <__divdf3+0x54c>
 400bb28:	1011883a 	mov	r8,r2
 400bb2c:	003f5506 	br	400b884 <__divdf3+0x5b8>
 400bb30:	e027883a 	mov	r19,fp
 400bb34:	003f7906 	br	400b91c <__divdf3+0x650>
 400bb38:	010007c4 	movi	r4,31
 400bb3c:	20c02816 	blt	r4,r3,400bbe0 <__divdf3+0x914>
 400bb40:	00800804 	movi	r2,32
 400bb44:	10c5c83a 	sub	r2,r2,r3
 400bb48:	888a983a 	sll	r5,r17,r2
 400bb4c:	a0c8d83a 	srl	r4,r20,r3
 400bb50:	a084983a 	sll	r2,r20,r2
 400bb54:	88e2d83a 	srl	r17,r17,r3
 400bb58:	2906b03a 	or	r3,r5,r4
 400bb5c:	1004c03a 	cmpne	r2,r2,zero
 400bb60:	1886b03a 	or	r3,r3,r2
 400bb64:	188001cc 	andi	r2,r3,7
 400bb68:	10000726 	beq	r2,zero,400bb88 <__divdf3+0x8bc>
 400bb6c:	188003cc 	andi	r2,r3,15
 400bb70:	01000104 	movi	r4,4
 400bb74:	11000426 	beq	r2,r4,400bb88 <__divdf3+0x8bc>
 400bb78:	1805883a 	mov	r2,r3
 400bb7c:	10c00104 	addi	r3,r2,4
 400bb80:	1885803a 	cmpltu	r2,r3,r2
 400bb84:	88a3883a 	add	r17,r17,r2
 400bb88:	8880202c 	andhi	r2,r17,128
 400bb8c:	10002926 	beq	r2,zero,400bc34 <__divdf3+0x968>
 400bb90:	9900004c 	andi	r4,r19,1
 400bb94:	00800044 	movi	r2,1
 400bb98:	0021883a 	mov	r16,zero
 400bb9c:	002b883a 	mov	r21,zero
 400bba0:	003e2906 	br	400b448 <__divdf3+0x17c>
 400bba4:	d9800017 	ldw	r6,0(sp)
 400bba8:	8c7fff84 	addi	r17,r17,-2
 400bbac:	a9ab883a 	add	r21,r21,r6
 400bbb0:	a98b803a 	cmpltu	r5,r21,r6
 400bbb4:	2d8b883a 	add	r5,r5,r22
 400bbb8:	2a11883a 	add	r8,r5,r8
 400bbbc:	003ef806 	br	400b7a0 <__divdf3+0x4d4>
 400bbc0:	d9800017 	ldw	r6,0(sp)
 400bbc4:	318f883a 	add	r7,r6,r6
 400bbc8:	398b803a 	cmpltu	r5,r7,r6
 400bbcc:	2d8d883a 	add	r6,r5,r22
 400bbd0:	81a1883a 	add	r16,r16,r6
 400bbd4:	a17fff84 	addi	r5,r20,-2
 400bbd8:	d9c00015 	stw	r7,0(sp)
 400bbdc:	003f8806 	br	400ba00 <__divdf3+0x734>
 400bbe0:	013ff844 	movi	r4,-31
 400bbe4:	2085c83a 	sub	r2,r4,r2
 400bbe8:	8888d83a 	srl	r4,r17,r2
 400bbec:	00800804 	movi	r2,32
 400bbf0:	18802126 	beq	r3,r2,400bc78 <__divdf3+0x9ac>
 400bbf4:	04001004 	movi	r16,64
 400bbf8:	80c7c83a 	sub	r3,r16,r3
 400bbfc:	88e0983a 	sll	r16,r17,r3
 400bc00:	8504b03a 	or	r2,r16,r20
 400bc04:	1004c03a 	cmpne	r2,r2,zero
 400bc08:	2084b03a 	or	r2,r4,r2
 400bc0c:	144001cc 	andi	r17,r2,7
 400bc10:	88000d1e 	bne	r17,zero,400bc48 <__divdf3+0x97c>
 400bc14:	0021883a 	mov	r16,zero
 400bc18:	102ad0fa 	srli	r21,r2,3
 400bc1c:	9900004c 	andi	r4,r19,1
 400bc20:	0005883a 	mov	r2,zero
 400bc24:	ac6ab03a 	or	r21,r21,r17
 400bc28:	003e0706 	br	400b448 <__divdf3+0x17c>
 400bc2c:	1007883a 	mov	r3,r2
 400bc30:	0023883a 	mov	r17,zero
 400bc34:	8820927a 	slli	r16,r17,9
 400bc38:	1805883a 	mov	r2,r3
 400bc3c:	8822977a 	slli	r17,r17,29
 400bc40:	8020d33a 	srli	r16,r16,12
 400bc44:	003ff406 	br	400bc18 <__divdf3+0x94c>
 400bc48:	10c003cc 	andi	r3,r2,15
 400bc4c:	01000104 	movi	r4,4
 400bc50:	193ff626 	beq	r3,r4,400bc2c <__divdf3+0x960>
 400bc54:	0023883a 	mov	r17,zero
 400bc58:	003fc806 	br	400bb7c <__divdf3+0x8b0>
 400bc5c:	a8bfd136 	bltu	r21,r2,400bba4 <__divdf3+0x8d8>
 400bc60:	2823883a 	mov	r17,r5
 400bc64:	003fa606 	br	400bb00 <__divdf3+0x834>
 400bc68:	d9800017 	ldw	r6,0(sp)
 400bc6c:	30bfd436 	bltu	r6,r2,400bbc0 <__divdf3+0x8f4>
 400bc70:	2829883a 	mov	r20,r5
 400bc74:	003f6406 	br	400ba08 <__divdf3+0x73c>
 400bc78:	0021883a 	mov	r16,zero
 400bc7c:	003fe006 	br	400bc00 <__divdf3+0x934>
 400bc80:	00800434 	movhi	r2,16
 400bc84:	8c000234 	orhi	r16,r17,8
 400bc88:	10bfffc4 	addi	r2,r2,-1
 400bc8c:	e009883a 	mov	r4,fp
 400bc90:	80a0703a 	and	r16,r16,r2
 400bc94:	a02b883a 	mov	r21,r20
 400bc98:	003e4e06 	br	400b5d4 <__divdf3+0x308>

0400bc9c <__eqdf2>:
 400bc9c:	2804d53a 	srli	r2,r5,20
 400bca0:	3806d53a 	srli	r3,r7,20
 400bca4:	02000434 	movhi	r8,16
 400bca8:	423fffc4 	addi	r8,r8,-1
 400bcac:	1081ffcc 	andi	r2,r2,2047
 400bcb0:	0281ffc4 	movi	r10,2047
 400bcb4:	2a12703a 	and	r9,r5,r8
 400bcb8:	18c1ffcc 	andi	r3,r3,2047
 400bcbc:	3a10703a 	and	r8,r7,r8
 400bcc0:	280ad7fa 	srli	r5,r5,31
 400bcc4:	380ed7fa 	srli	r7,r7,31
 400bcc8:	12801026 	beq	r2,r10,400bd0c <__eqdf2+0x70>
 400bccc:	0281ffc4 	movi	r10,2047
 400bcd0:	1a800a26 	beq	r3,r10,400bcfc <__eqdf2+0x60>
 400bcd4:	10c00226 	beq	r2,r3,400bce0 <__eqdf2+0x44>
 400bcd8:	00800044 	movi	r2,1
 400bcdc:	f800283a 	ret
 400bce0:	4a3ffd1e 	bne	r9,r8,400bcd8 <__eqdf2+0x3c>
 400bce4:	21bffc1e 	bne	r4,r6,400bcd8 <__eqdf2+0x3c>
 400bce8:	29c00c26 	beq	r5,r7,400bd1c <__eqdf2+0x80>
 400bcec:	103ffa1e 	bne	r2,zero,400bcd8 <__eqdf2+0x3c>
 400bcf0:	2244b03a 	or	r2,r4,r9
 400bcf4:	1004c03a 	cmpne	r2,r2,zero
 400bcf8:	f800283a 	ret
 400bcfc:	3214b03a 	or	r10,r6,r8
 400bd00:	503ff426 	beq	r10,zero,400bcd4 <__eqdf2+0x38>
 400bd04:	00800044 	movi	r2,1
 400bd08:	f800283a 	ret
 400bd0c:	2254b03a 	or	r10,r4,r9
 400bd10:	503fee26 	beq	r10,zero,400bccc <__eqdf2+0x30>
 400bd14:	00800044 	movi	r2,1
 400bd18:	f800283a 	ret
 400bd1c:	0005883a 	mov	r2,zero
 400bd20:	f800283a 	ret

0400bd24 <__gedf2>:
 400bd24:	2804d53a 	srli	r2,r5,20
 400bd28:	3806d53a 	srli	r3,r7,20
 400bd2c:	02000434 	movhi	r8,16
 400bd30:	423fffc4 	addi	r8,r8,-1
 400bd34:	1081ffcc 	andi	r2,r2,2047
 400bd38:	0241ffc4 	movi	r9,2047
 400bd3c:	2a14703a 	and	r10,r5,r8
 400bd40:	18c1ffcc 	andi	r3,r3,2047
 400bd44:	3a10703a 	and	r8,r7,r8
 400bd48:	280ad7fa 	srli	r5,r5,31
 400bd4c:	380ed7fa 	srli	r7,r7,31
 400bd50:	12401d26 	beq	r2,r9,400bdc8 <__gedf2+0xa4>
 400bd54:	0241ffc4 	movi	r9,2047
 400bd58:	1a401226 	beq	r3,r9,400bda4 <__gedf2+0x80>
 400bd5c:	1000081e 	bne	r2,zero,400bd80 <__gedf2+0x5c>
 400bd60:	2296b03a 	or	r11,r4,r10
 400bd64:	5813003a 	cmpeq	r9,r11,zero
 400bd68:	1800091e 	bne	r3,zero,400bd90 <__gedf2+0x6c>
 400bd6c:	3218b03a 	or	r12,r6,r8
 400bd70:	6000071e 	bne	r12,zero,400bd90 <__gedf2+0x6c>
 400bd74:	0005883a 	mov	r2,zero
 400bd78:	5800101e 	bne	r11,zero,400bdbc <__gedf2+0x98>
 400bd7c:	f800283a 	ret
 400bd80:	18000c1e 	bne	r3,zero,400bdb4 <__gedf2+0x90>
 400bd84:	3212b03a 	or	r9,r6,r8
 400bd88:	48000c26 	beq	r9,zero,400bdbc <__gedf2+0x98>
 400bd8c:	0013883a 	mov	r9,zero
 400bd90:	39c03fcc 	andi	r7,r7,255
 400bd94:	48000826 	beq	r9,zero,400bdb8 <__gedf2+0x94>
 400bd98:	38000926 	beq	r7,zero,400bdc0 <__gedf2+0x9c>
 400bd9c:	00800044 	movi	r2,1
 400bda0:	f800283a 	ret
 400bda4:	3212b03a 	or	r9,r6,r8
 400bda8:	483fec26 	beq	r9,zero,400bd5c <__gedf2+0x38>
 400bdac:	00bfff84 	movi	r2,-2
 400bdb0:	f800283a 	ret
 400bdb4:	39c03fcc 	andi	r7,r7,255
 400bdb8:	29c00626 	beq	r5,r7,400bdd4 <__gedf2+0xb0>
 400bdbc:	283ff726 	beq	r5,zero,400bd9c <__gedf2+0x78>
 400bdc0:	00bfffc4 	movi	r2,-1
 400bdc4:	f800283a 	ret
 400bdc8:	2292b03a 	or	r9,r4,r10
 400bdcc:	483fe126 	beq	r9,zero,400bd54 <__gedf2+0x30>
 400bdd0:	003ff606 	br	400bdac <__gedf2+0x88>
 400bdd4:	18bff916 	blt	r3,r2,400bdbc <__gedf2+0x98>
 400bdd8:	10c00316 	blt	r2,r3,400bde8 <__gedf2+0xc4>
 400bddc:	42bff736 	bltu	r8,r10,400bdbc <__gedf2+0x98>
 400bde0:	52000326 	beq	r10,r8,400bdf0 <__gedf2+0xcc>
 400bde4:	5200042e 	bgeu	r10,r8,400bdf8 <__gedf2+0xd4>
 400bde8:	283fec1e 	bne	r5,zero,400bd9c <__gedf2+0x78>
 400bdec:	003ff406 	br	400bdc0 <__gedf2+0x9c>
 400bdf0:	313ff236 	bltu	r6,r4,400bdbc <__gedf2+0x98>
 400bdf4:	21bffc36 	bltu	r4,r6,400bde8 <__gedf2+0xc4>
 400bdf8:	0005883a 	mov	r2,zero
 400bdfc:	f800283a 	ret

0400be00 <__ledf2>:
 400be00:	2804d53a 	srli	r2,r5,20
 400be04:	3810d53a 	srli	r8,r7,20
 400be08:	00c00434 	movhi	r3,16
 400be0c:	18ffffc4 	addi	r3,r3,-1
 400be10:	1081ffcc 	andi	r2,r2,2047
 400be14:	0241ffc4 	movi	r9,2047
 400be18:	28d4703a 	and	r10,r5,r3
 400be1c:	4201ffcc 	andi	r8,r8,2047
 400be20:	38c6703a 	and	r3,r7,r3
 400be24:	280ad7fa 	srli	r5,r5,31
 400be28:	380ed7fa 	srli	r7,r7,31
 400be2c:	12401f26 	beq	r2,r9,400beac <__ledf2+0xac>
 400be30:	0241ffc4 	movi	r9,2047
 400be34:	42401426 	beq	r8,r9,400be88 <__ledf2+0x88>
 400be38:	1000091e 	bne	r2,zero,400be60 <__ledf2+0x60>
 400be3c:	2296b03a 	or	r11,r4,r10
 400be40:	5813003a 	cmpeq	r9,r11,zero
 400be44:	29403fcc 	andi	r5,r5,255
 400be48:	40000a1e 	bne	r8,zero,400be74 <__ledf2+0x74>
 400be4c:	30d8b03a 	or	r12,r6,r3
 400be50:	6000081e 	bne	r12,zero,400be74 <__ledf2+0x74>
 400be54:	0005883a 	mov	r2,zero
 400be58:	5800111e 	bne	r11,zero,400bea0 <__ledf2+0xa0>
 400be5c:	f800283a 	ret
 400be60:	29403fcc 	andi	r5,r5,255
 400be64:	40000c1e 	bne	r8,zero,400be98 <__ledf2+0x98>
 400be68:	30d2b03a 	or	r9,r6,r3
 400be6c:	48000c26 	beq	r9,zero,400bea0 <__ledf2+0xa0>
 400be70:	0013883a 	mov	r9,zero
 400be74:	39c03fcc 	andi	r7,r7,255
 400be78:	48000826 	beq	r9,zero,400be9c <__ledf2+0x9c>
 400be7c:	38001126 	beq	r7,zero,400bec4 <__ledf2+0xc4>
 400be80:	00800044 	movi	r2,1
 400be84:	f800283a 	ret
 400be88:	30d2b03a 	or	r9,r6,r3
 400be8c:	483fea26 	beq	r9,zero,400be38 <__ledf2+0x38>
 400be90:	00800084 	movi	r2,2
 400be94:	f800283a 	ret
 400be98:	39c03fcc 	andi	r7,r7,255
 400be9c:	39400726 	beq	r7,r5,400bebc <__ledf2+0xbc>
 400bea0:	2800081e 	bne	r5,zero,400bec4 <__ledf2+0xc4>
 400bea4:	00800044 	movi	r2,1
 400bea8:	f800283a 	ret
 400beac:	2292b03a 	or	r9,r4,r10
 400beb0:	483fdf26 	beq	r9,zero,400be30 <__ledf2+0x30>
 400beb4:	00800084 	movi	r2,2
 400beb8:	f800283a 	ret
 400bebc:	4080030e 	bge	r8,r2,400becc <__ledf2+0xcc>
 400bec0:	383fef26 	beq	r7,zero,400be80 <__ledf2+0x80>
 400bec4:	00bfffc4 	movi	r2,-1
 400bec8:	f800283a 	ret
 400becc:	123feb16 	blt	r2,r8,400be7c <__ledf2+0x7c>
 400bed0:	1abff336 	bltu	r3,r10,400bea0 <__ledf2+0xa0>
 400bed4:	50c00326 	beq	r10,r3,400bee4 <__ledf2+0xe4>
 400bed8:	50c0042e 	bgeu	r10,r3,400beec <__ledf2+0xec>
 400bedc:	283fe81e 	bne	r5,zero,400be80 <__ledf2+0x80>
 400bee0:	003ff806 	br	400bec4 <__ledf2+0xc4>
 400bee4:	313fee36 	bltu	r6,r4,400bea0 <__ledf2+0xa0>
 400bee8:	21bffc36 	bltu	r4,r6,400bedc <__ledf2+0xdc>
 400beec:	0005883a 	mov	r2,zero
 400bef0:	f800283a 	ret

0400bef4 <__muldf3>:
 400bef4:	deffee04 	addi	sp,sp,-72
 400bef8:	dd000c15 	stw	r20,48(sp)
 400befc:	2828d53a 	srli	r20,r5,20
 400bf00:	ddc00f15 	stw	r23,60(sp)
 400bf04:	282ed7fa 	srli	r23,r5,31
 400bf08:	dc000815 	stw	r16,32(sp)
 400bf0c:	04000434 	movhi	r16,16
 400bf10:	dcc00b15 	stw	r19,44(sp)
 400bf14:	843fffc4 	addi	r16,r16,-1
 400bf18:	dfc01115 	stw	ra,68(sp)
 400bf1c:	df001015 	stw	fp,64(sp)
 400bf20:	dd800e15 	stw	r22,56(sp)
 400bf24:	dd400d15 	stw	r21,52(sp)
 400bf28:	dc800a15 	stw	r18,40(sp)
 400bf2c:	dc400915 	stw	r17,36(sp)
 400bf30:	a501ffcc 	andi	r20,r20,2047
 400bf34:	2c20703a 	and	r16,r5,r16
 400bf38:	b827883a 	mov	r19,r23
 400bf3c:	ba403fcc 	andi	r9,r23,255
 400bf40:	a0006026 	beq	r20,zero,400c0c4 <__muldf3+0x1d0>
 400bf44:	0081ffc4 	movi	r2,2047
 400bf48:	202d883a 	mov	r22,r4
 400bf4c:	a0803626 	beq	r20,r2,400c028 <__muldf3+0x134>
 400bf50:	84000434 	orhi	r16,r16,16
 400bf54:	200ad77a 	srli	r5,r4,29
 400bf58:	800490fa 	slli	r2,r16,3
 400bf5c:	202c90fa 	slli	r22,r4,3
 400bf60:	a53f0044 	addi	r20,r20,-1023
 400bf64:	28a0b03a 	or	r16,r5,r2
 400bf68:	002b883a 	mov	r21,zero
 400bf6c:	000b883a 	mov	r5,zero
 400bf70:	3804d53a 	srli	r2,r7,20
 400bf74:	3838d7fa 	srli	fp,r7,31
 400bf78:	04400434 	movhi	r17,16
 400bf7c:	8c7fffc4 	addi	r17,r17,-1
 400bf80:	1081ffcc 	andi	r2,r2,2047
 400bf84:	3025883a 	mov	r18,r6
 400bf88:	3c62703a 	and	r17,r7,r17
 400bf8c:	e2803fcc 	andi	r10,fp,255
 400bf90:	10006d26 	beq	r2,zero,400c148 <__muldf3+0x254>
 400bf94:	00c1ffc4 	movi	r3,2047
 400bf98:	10c06526 	beq	r2,r3,400c130 <__muldf3+0x23c>
 400bf9c:	8c400434 	orhi	r17,r17,16
 400bfa0:	300ed77a 	srli	r7,r6,29
 400bfa4:	880690fa 	slli	r3,r17,3
 400bfa8:	302490fa 	slli	r18,r6,3
 400bfac:	10bf0044 	addi	r2,r2,-1023
 400bfb0:	38e2b03a 	or	r17,r7,r3
 400bfb4:	000f883a 	mov	r7,zero
 400bfb8:	a087883a 	add	r3,r20,r2
 400bfbc:	010003c4 	movi	r4,15
 400bfc0:	3d44b03a 	or	r2,r7,r21
 400bfc4:	e5ccf03a 	xor	r6,fp,r23
 400bfc8:	1a000044 	addi	r8,r3,1
 400bfcc:	20809b36 	bltu	r4,r2,400c23c <__muldf3+0x348>
 400bfd0:	100490ba 	slli	r2,r2,2
 400bfd4:	01010074 	movhi	r4,1025
 400bfd8:	212ffa04 	addi	r4,r4,-16408
 400bfdc:	1105883a 	add	r2,r2,r4
 400bfe0:	10800017 	ldw	r2,0(r2)
 400bfe4:	1000683a 	jmp	r2
 400bfe8:	0400c23c 	xorhi	r16,zero,776
 400bfec:	0400c048 	cmpgei	r16,zero,769
 400bff0:	0400c048 	cmpgei	r16,zero,769
 400bff4:	0400c044 	movi	r16,769
 400bff8:	0400c218 	cmpnei	r16,zero,776
 400bffc:	0400c218 	cmpnei	r16,zero,776
 400c000:	0400c200 	call	400c20 <__ram_exceptions_end+0x4009f0>
 400c004:	0400c044 	movi	r16,769
 400c008:	0400c218 	cmpnei	r16,zero,776
 400c00c:	0400c200 	call	400c20 <__ram_exceptions_end+0x4009f0>
 400c010:	0400c218 	cmpnei	r16,zero,776
 400c014:	0400c044 	movi	r16,769
 400c018:	0400c228 	cmpgeui	r16,zero,776
 400c01c:	0400c228 	cmpgeui	r16,zero,776
 400c020:	0400c228 	cmpgeui	r16,zero,776
 400c024:	0400c588 	cmpgei	r16,zero,790
 400c028:	2404b03a 	or	r2,r4,r16
 400c02c:	1000711e 	bne	r2,zero,400c1f4 <__muldf3+0x300>
 400c030:	05400204 	movi	r21,8
 400c034:	0021883a 	mov	r16,zero
 400c038:	002d883a 	mov	r22,zero
 400c03c:	01400084 	movi	r5,2
 400c040:	003fcb06 	br	400bf70 <__muldf3+0x7c>
 400c044:	500d883a 	mov	r6,r10
 400c048:	00800084 	movi	r2,2
 400c04c:	38805926 	beq	r7,r2,400c1b4 <__muldf3+0x2c0>
 400c050:	008000c4 	movi	r2,3
 400c054:	3881bb26 	beq	r7,r2,400c744 <__muldf3+0x850>
 400c058:	00800044 	movi	r2,1
 400c05c:	3881961e 	bne	r7,r2,400c6b8 <__muldf3+0x7c4>
 400c060:	3027883a 	mov	r19,r6
 400c064:	0005883a 	mov	r2,zero
 400c068:	0021883a 	mov	r16,zero
 400c06c:	002d883a 	mov	r22,zero
 400c070:	1004953a 	slli	r2,r2,20
 400c074:	98c03fcc 	andi	r3,r19,255
 400c078:	04400434 	movhi	r17,16
 400c07c:	8c7fffc4 	addi	r17,r17,-1
 400c080:	180697fa 	slli	r3,r3,31
 400c084:	8460703a 	and	r16,r16,r17
 400c088:	80a0b03a 	or	r16,r16,r2
 400c08c:	80c6b03a 	or	r3,r16,r3
 400c090:	b005883a 	mov	r2,r22
 400c094:	dfc01117 	ldw	ra,68(sp)
 400c098:	df001017 	ldw	fp,64(sp)
 400c09c:	ddc00f17 	ldw	r23,60(sp)
 400c0a0:	dd800e17 	ldw	r22,56(sp)
 400c0a4:	dd400d17 	ldw	r21,52(sp)
 400c0a8:	dd000c17 	ldw	r20,48(sp)
 400c0ac:	dcc00b17 	ldw	r19,44(sp)
 400c0b0:	dc800a17 	ldw	r18,40(sp)
 400c0b4:	dc400917 	ldw	r17,36(sp)
 400c0b8:	dc000817 	ldw	r16,32(sp)
 400c0bc:	dec01204 	addi	sp,sp,72
 400c0c0:	f800283a 	ret
 400c0c4:	2404b03a 	or	r2,r4,r16
 400c0c8:	202b883a 	mov	r21,r4
 400c0cc:	10004426 	beq	r2,zero,400c1e0 <__muldf3+0x2ec>
 400c0d0:	80015126 	beq	r16,zero,400c618 <__muldf3+0x724>
 400c0d4:	8009883a 	mov	r4,r16
 400c0d8:	d9800715 	stw	r6,28(sp)
 400c0dc:	d9c00215 	stw	r7,8(sp)
 400c0e0:	da400415 	stw	r9,16(sp)
 400c0e4:	400d2600 	call	400d260 <__clzsi2>
 400c0e8:	d9800717 	ldw	r6,28(sp)
 400c0ec:	d9c00217 	ldw	r7,8(sp)
 400c0f0:	da400417 	ldw	r9,16(sp)
 400c0f4:	113ffd44 	addi	r4,r2,-11
 400c0f8:	00c00704 	movi	r3,28
 400c0fc:	19014216 	blt	r3,r4,400c608 <__muldf3+0x714>
 400c100:	00c00744 	movi	r3,29
 400c104:	15bffe04 	addi	r22,r2,-8
 400c108:	1907c83a 	sub	r3,r3,r4
 400c10c:	85a0983a 	sll	r16,r16,r22
 400c110:	a8c6d83a 	srl	r3,r21,r3
 400c114:	adac983a 	sll	r22,r21,r22
 400c118:	1c20b03a 	or	r16,r3,r16
 400c11c:	1080fcc4 	addi	r2,r2,1011
 400c120:	00a9c83a 	sub	r20,zero,r2
 400c124:	002b883a 	mov	r21,zero
 400c128:	000b883a 	mov	r5,zero
 400c12c:	003f9006 	br	400bf70 <__muldf3+0x7c>
 400c130:	3446b03a 	or	r3,r6,r17
 400c134:	1800281e 	bne	r3,zero,400c1d8 <__muldf3+0x2e4>
 400c138:	0023883a 	mov	r17,zero
 400c13c:	0025883a 	mov	r18,zero
 400c140:	01c00084 	movi	r7,2
 400c144:	003f9c06 	br	400bfb8 <__muldf3+0xc4>
 400c148:	3446b03a 	or	r3,r6,r17
 400c14c:	18001e26 	beq	r3,zero,400c1c8 <__muldf3+0x2d4>
 400c150:	88012126 	beq	r17,zero,400c5d8 <__muldf3+0x6e4>
 400c154:	8809883a 	mov	r4,r17
 400c158:	d9400215 	stw	r5,8(sp)
 400c15c:	d9800715 	stw	r6,28(sp)
 400c160:	da400415 	stw	r9,16(sp)
 400c164:	da800315 	stw	r10,12(sp)
 400c168:	400d2600 	call	400d260 <__clzsi2>
 400c16c:	d9400217 	ldw	r5,8(sp)
 400c170:	d9800717 	ldw	r6,28(sp)
 400c174:	da400417 	ldw	r9,16(sp)
 400c178:	da800317 	ldw	r10,12(sp)
 400c17c:	113ffd44 	addi	r4,r2,-11
 400c180:	00c00704 	movi	r3,28
 400c184:	19011016 	blt	r3,r4,400c5c8 <__muldf3+0x6d4>
 400c188:	00c00744 	movi	r3,29
 400c18c:	14bffe04 	addi	r18,r2,-8
 400c190:	1907c83a 	sub	r3,r3,r4
 400c194:	8ca2983a 	sll	r17,r17,r18
 400c198:	30c6d83a 	srl	r3,r6,r3
 400c19c:	34a4983a 	sll	r18,r6,r18
 400c1a0:	1c62b03a 	or	r17,r3,r17
 400c1a4:	1080fcc4 	addi	r2,r2,1011
 400c1a8:	0085c83a 	sub	r2,zero,r2
 400c1ac:	000f883a 	mov	r7,zero
 400c1b0:	003f8106 	br	400bfb8 <__muldf3+0xc4>
 400c1b4:	3027883a 	mov	r19,r6
 400c1b8:	0081ffc4 	movi	r2,2047
 400c1bc:	0021883a 	mov	r16,zero
 400c1c0:	002d883a 	mov	r22,zero
 400c1c4:	003faa06 	br	400c070 <__muldf3+0x17c>
 400c1c8:	0023883a 	mov	r17,zero
 400c1cc:	0025883a 	mov	r18,zero
 400c1d0:	01c00044 	movi	r7,1
 400c1d4:	003f7806 	br	400bfb8 <__muldf3+0xc4>
 400c1d8:	01c000c4 	movi	r7,3
 400c1dc:	003f7606 	br	400bfb8 <__muldf3+0xc4>
 400c1e0:	05400104 	movi	r21,4
 400c1e4:	0021883a 	mov	r16,zero
 400c1e8:	002d883a 	mov	r22,zero
 400c1ec:	01400044 	movi	r5,1
 400c1f0:	003f5f06 	br	400bf70 <__muldf3+0x7c>
 400c1f4:	05400304 	movi	r21,12
 400c1f8:	014000c4 	movi	r5,3
 400c1fc:	003f5c06 	br	400bf70 <__muldf3+0x7c>
 400c200:	04000434 	movhi	r16,16
 400c204:	0027883a 	mov	r19,zero
 400c208:	843fffc4 	addi	r16,r16,-1
 400c20c:	05bfffc4 	movi	r22,-1
 400c210:	0081ffc4 	movi	r2,2047
 400c214:	003f9606 	br	400c070 <__muldf3+0x17c>
 400c218:	8023883a 	mov	r17,r16
 400c21c:	b025883a 	mov	r18,r22
 400c220:	280f883a 	mov	r7,r5
 400c224:	003f8806 	br	400c048 <__muldf3+0x154>
 400c228:	8023883a 	mov	r17,r16
 400c22c:	b025883a 	mov	r18,r22
 400c230:	480d883a 	mov	r6,r9
 400c234:	280f883a 	mov	r7,r5
 400c238:	003f8306 	br	400c048 <__muldf3+0x154>
 400c23c:	b026d43a 	srli	r19,r22,16
 400c240:	902ed43a 	srli	r23,r18,16
 400c244:	b5bfffcc 	andi	r22,r22,65535
 400c248:	94bfffcc 	andi	r18,r18,65535
 400c24c:	b00b883a 	mov	r5,r22
 400c250:	9009883a 	mov	r4,r18
 400c254:	d8c00515 	stw	r3,20(sp)
 400c258:	d9800715 	stw	r6,28(sp)
 400c25c:	da000615 	stw	r8,24(sp)
 400c260:	400a9f80 	call	400a9f8 <__mulsi3>
 400c264:	980b883a 	mov	r5,r19
 400c268:	9009883a 	mov	r4,r18
 400c26c:	1029883a 	mov	r20,r2
 400c270:	400a9f80 	call	400a9f8 <__mulsi3>
 400c274:	b80b883a 	mov	r5,r23
 400c278:	9809883a 	mov	r4,r19
 400c27c:	102b883a 	mov	r21,r2
 400c280:	400a9f80 	call	400a9f8 <__mulsi3>
 400c284:	b809883a 	mov	r4,r23
 400c288:	b00b883a 	mov	r5,r22
 400c28c:	1039883a 	mov	fp,r2
 400c290:	400a9f80 	call	400a9f8 <__mulsi3>
 400c294:	a008d43a 	srli	r4,r20,16
 400c298:	1545883a 	add	r2,r2,r21
 400c29c:	d8c00517 	ldw	r3,20(sp)
 400c2a0:	2085883a 	add	r2,r4,r2
 400c2a4:	d9800717 	ldw	r6,28(sp)
 400c2a8:	da000617 	ldw	r8,24(sp)
 400c2ac:	1540022e 	bgeu	r2,r21,400c2b8 <__muldf3+0x3c4>
 400c2b0:	01000074 	movhi	r4,1
 400c2b4:	e139883a 	add	fp,fp,r4
 400c2b8:	100e943a 	slli	r7,r2,16
 400c2bc:	1004d43a 	srli	r2,r2,16
 400c2c0:	882ad43a 	srli	r21,r17,16
 400c2c4:	a53fffcc 	andi	r20,r20,65535
 400c2c8:	8c7fffcc 	andi	r17,r17,65535
 400c2cc:	3d29883a 	add	r20,r7,r20
 400c2d0:	b00b883a 	mov	r5,r22
 400c2d4:	8809883a 	mov	r4,r17
 400c2d8:	d8c00515 	stw	r3,20(sp)
 400c2dc:	d9800715 	stw	r6,28(sp)
 400c2e0:	da000615 	stw	r8,24(sp)
 400c2e4:	dd000115 	stw	r20,4(sp)
 400c2e8:	d8800015 	stw	r2,0(sp)
 400c2ec:	400a9f80 	call	400a9f8 <__mulsi3>
 400c2f0:	980b883a 	mov	r5,r19
 400c2f4:	8809883a 	mov	r4,r17
 400c2f8:	d8800215 	stw	r2,8(sp)
 400c2fc:	400a9f80 	call	400a9f8 <__mulsi3>
 400c300:	9809883a 	mov	r4,r19
 400c304:	a80b883a 	mov	r5,r21
 400c308:	1029883a 	mov	r20,r2
 400c30c:	400a9f80 	call	400a9f8 <__mulsi3>
 400c310:	b00b883a 	mov	r5,r22
 400c314:	a809883a 	mov	r4,r21
 400c318:	d8800415 	stw	r2,16(sp)
 400c31c:	400a9f80 	call	400a9f8 <__mulsi3>
 400c320:	d9c00217 	ldw	r7,8(sp)
 400c324:	1505883a 	add	r2,r2,r20
 400c328:	d8c00517 	ldw	r3,20(sp)
 400c32c:	3826d43a 	srli	r19,r7,16
 400c330:	d9800717 	ldw	r6,28(sp)
 400c334:	da000617 	ldw	r8,24(sp)
 400c338:	9885883a 	add	r2,r19,r2
 400c33c:	da400417 	ldw	r9,16(sp)
 400c340:	1500022e 	bgeu	r2,r20,400c34c <__muldf3+0x458>
 400c344:	01000074 	movhi	r4,1
 400c348:	4913883a 	add	r9,r9,r4
 400c34c:	1028d43a 	srli	r20,r2,16
 400c350:	1004943a 	slli	r2,r2,16
 400c354:	802cd43a 	srli	r22,r16,16
 400c358:	843fffcc 	andi	r16,r16,65535
 400c35c:	3cffffcc 	andi	r19,r7,65535
 400c360:	9009883a 	mov	r4,r18
 400c364:	800b883a 	mov	r5,r16
 400c368:	a269883a 	add	r20,r20,r9
 400c36c:	d8c00515 	stw	r3,20(sp)
 400c370:	d9800715 	stw	r6,28(sp)
 400c374:	da000615 	stw	r8,24(sp)
 400c378:	14e7883a 	add	r19,r2,r19
 400c37c:	400a9f80 	call	400a9f8 <__mulsi3>
 400c380:	9009883a 	mov	r4,r18
 400c384:	b00b883a 	mov	r5,r22
 400c388:	d8800315 	stw	r2,12(sp)
 400c38c:	400a9f80 	call	400a9f8 <__mulsi3>
 400c390:	b809883a 	mov	r4,r23
 400c394:	b00b883a 	mov	r5,r22
 400c398:	d8800215 	stw	r2,8(sp)
 400c39c:	400a9f80 	call	400a9f8 <__mulsi3>
 400c3a0:	b80b883a 	mov	r5,r23
 400c3a4:	8009883a 	mov	r4,r16
 400c3a8:	d8800415 	stw	r2,16(sp)
 400c3ac:	400a9f80 	call	400a9f8 <__mulsi3>
 400c3b0:	da800317 	ldw	r10,12(sp)
 400c3b4:	d9c00217 	ldw	r7,8(sp)
 400c3b8:	d9000017 	ldw	r4,0(sp)
 400c3bc:	502ed43a 	srli	r23,r10,16
 400c3c0:	11c5883a 	add	r2,r2,r7
 400c3c4:	24e5883a 	add	r18,r4,r19
 400c3c8:	b885883a 	add	r2,r23,r2
 400c3cc:	d8c00517 	ldw	r3,20(sp)
 400c3d0:	d9800717 	ldw	r6,28(sp)
 400c3d4:	da000617 	ldw	r8,24(sp)
 400c3d8:	da400417 	ldw	r9,16(sp)
 400c3dc:	11c0022e 	bgeu	r2,r7,400c3e8 <__muldf3+0x4f4>
 400c3e0:	01000074 	movhi	r4,1
 400c3e4:	4913883a 	add	r9,r9,r4
 400c3e8:	100ed43a 	srli	r7,r2,16
 400c3ec:	1004943a 	slli	r2,r2,16
 400c3f0:	55ffffcc 	andi	r23,r10,65535
 400c3f4:	3a53883a 	add	r9,r7,r9
 400c3f8:	8809883a 	mov	r4,r17
 400c3fc:	800b883a 	mov	r5,r16
 400c400:	d8c00515 	stw	r3,20(sp)
 400c404:	d9800715 	stw	r6,28(sp)
 400c408:	da000615 	stw	r8,24(sp)
 400c40c:	da400415 	stw	r9,16(sp)
 400c410:	15ef883a 	add	r23,r2,r23
 400c414:	400a9f80 	call	400a9f8 <__mulsi3>
 400c418:	8809883a 	mov	r4,r17
 400c41c:	b00b883a 	mov	r5,r22
 400c420:	d8800215 	stw	r2,8(sp)
 400c424:	400a9f80 	call	400a9f8 <__mulsi3>
 400c428:	b00b883a 	mov	r5,r22
 400c42c:	a809883a 	mov	r4,r21
 400c430:	d8800315 	stw	r2,12(sp)
 400c434:	400a9f80 	call	400a9f8 <__mulsi3>
 400c438:	8009883a 	mov	r4,r16
 400c43c:	a80b883a 	mov	r5,r21
 400c440:	1023883a 	mov	r17,r2
 400c444:	400a9f80 	call	400a9f8 <__mulsi3>
 400c448:	d9c00217 	ldw	r7,8(sp)
 400c44c:	da800317 	ldw	r10,12(sp)
 400c450:	d8c00517 	ldw	r3,20(sp)
 400c454:	3808d43a 	srli	r4,r7,16
 400c458:	1285883a 	add	r2,r2,r10
 400c45c:	d9800717 	ldw	r6,28(sp)
 400c460:	2085883a 	add	r2,r4,r2
 400c464:	da000617 	ldw	r8,24(sp)
 400c468:	da400417 	ldw	r9,16(sp)
 400c46c:	1280022e 	bgeu	r2,r10,400c478 <__muldf3+0x584>
 400c470:	01000074 	movhi	r4,1
 400c474:	8923883a 	add	r17,r17,r4
 400c478:	1008943a 	slli	r4,r2,16
 400c47c:	39ffffcc 	andi	r7,r7,65535
 400c480:	e4b9883a 	add	fp,fp,r18
 400c484:	21cf883a 	add	r7,r4,r7
 400c488:	e4e7803a 	cmpltu	r19,fp,r19
 400c48c:	3d0f883a 	add	r7,r7,r20
 400c490:	bf39883a 	add	fp,r23,fp
 400c494:	99c9883a 	add	r4,r19,r7
 400c498:	e5ef803a 	cmpltu	r23,fp,r23
 400c49c:	490b883a 	add	r5,r9,r4
 400c4a0:	1004d43a 	srli	r2,r2,16
 400c4a4:	b965883a 	add	r18,r23,r5
 400c4a8:	24c9803a 	cmpltu	r4,r4,r19
 400c4ac:	3d29803a 	cmpltu	r20,r7,r20
 400c4b0:	a128b03a 	or	r20,r20,r4
 400c4b4:	95ef803a 	cmpltu	r23,r18,r23
 400c4b8:	2a53803a 	cmpltu	r9,r5,r9
 400c4bc:	a0a9883a 	add	r20,r20,r2
 400c4c0:	4deeb03a 	or	r23,r9,r23
 400c4c4:	a5ef883a 	add	r23,r20,r23
 400c4c8:	bc63883a 	add	r17,r23,r17
 400c4cc:	e004927a 	slli	r2,fp,9
 400c4d0:	d9000117 	ldw	r4,4(sp)
 400c4d4:	882e927a 	slli	r23,r17,9
 400c4d8:	9022d5fa 	srli	r17,r18,23
 400c4dc:	e038d5fa 	srli	fp,fp,23
 400c4e0:	1104b03a 	or	r2,r2,r4
 400c4e4:	9024927a 	slli	r18,r18,9
 400c4e8:	1004c03a 	cmpne	r2,r2,zero
 400c4ec:	bc62b03a 	or	r17,r23,r17
 400c4f0:	1738b03a 	or	fp,r2,fp
 400c4f4:	8880402c 	andhi	r2,r17,256
 400c4f8:	e4a4b03a 	or	r18,fp,r18
 400c4fc:	10000726 	beq	r2,zero,400c51c <__muldf3+0x628>
 400c500:	9006d07a 	srli	r3,r18,1
 400c504:	880497fa 	slli	r2,r17,31
 400c508:	9480004c 	andi	r18,r18,1
 400c50c:	8822d07a 	srli	r17,r17,1
 400c510:	1ca4b03a 	or	r18,r3,r18
 400c514:	14a4b03a 	or	r18,r2,r18
 400c518:	4007883a 	mov	r3,r8
 400c51c:	1880ffc4 	addi	r2,r3,1023
 400c520:	0080460e 	bge	zero,r2,400c63c <__muldf3+0x748>
 400c524:	910001cc 	andi	r4,r18,7
 400c528:	20000726 	beq	r4,zero,400c548 <__muldf3+0x654>
 400c52c:	910003cc 	andi	r4,r18,15
 400c530:	01400104 	movi	r5,4
 400c534:	21400426 	beq	r4,r5,400c548 <__muldf3+0x654>
 400c538:	9149883a 	add	r4,r18,r5
 400c53c:	24a5803a 	cmpltu	r18,r4,r18
 400c540:	8ca3883a 	add	r17,r17,r18
 400c544:	2025883a 	mov	r18,r4
 400c548:	8900402c 	andhi	r4,r17,256
 400c54c:	20000426 	beq	r4,zero,400c560 <__muldf3+0x66c>
 400c550:	18810004 	addi	r2,r3,1024
 400c554:	00ffc034 	movhi	r3,65280
 400c558:	18ffffc4 	addi	r3,r3,-1
 400c55c:	88e2703a 	and	r17,r17,r3
 400c560:	00c1ff84 	movi	r3,2046
 400c564:	18bf1316 	blt	r3,r2,400c1b4 <__muldf3+0x2c0>
 400c568:	882c977a 	slli	r22,r17,29
 400c56c:	9024d0fa 	srli	r18,r18,3
 400c570:	8822927a 	slli	r17,r17,9
 400c574:	1081ffcc 	andi	r2,r2,2047
 400c578:	b4acb03a 	or	r22,r22,r18
 400c57c:	8820d33a 	srli	r16,r17,12
 400c580:	3027883a 	mov	r19,r6
 400c584:	003eba06 	br	400c070 <__muldf3+0x17c>
 400c588:	8080022c 	andhi	r2,r16,8
 400c58c:	10000926 	beq	r2,zero,400c5b4 <__muldf3+0x6c0>
 400c590:	8880022c 	andhi	r2,r17,8
 400c594:	1000071e 	bne	r2,zero,400c5b4 <__muldf3+0x6c0>
 400c598:	00800434 	movhi	r2,16
 400c59c:	8c000234 	orhi	r16,r17,8
 400c5a0:	10bfffc4 	addi	r2,r2,-1
 400c5a4:	e027883a 	mov	r19,fp
 400c5a8:	80a0703a 	and	r16,r16,r2
 400c5ac:	902d883a 	mov	r22,r18
 400c5b0:	003f1706 	br	400c210 <__muldf3+0x31c>
 400c5b4:	00800434 	movhi	r2,16
 400c5b8:	84000234 	orhi	r16,r16,8
 400c5bc:	10bfffc4 	addi	r2,r2,-1
 400c5c0:	80a0703a 	and	r16,r16,r2
 400c5c4:	003f1206 	br	400c210 <__muldf3+0x31c>
 400c5c8:	147ff604 	addi	r17,r2,-40
 400c5cc:	3462983a 	sll	r17,r6,r17
 400c5d0:	0025883a 	mov	r18,zero
 400c5d4:	003ef306 	br	400c1a4 <__muldf3+0x2b0>
 400c5d8:	3009883a 	mov	r4,r6
 400c5dc:	d9400215 	stw	r5,8(sp)
 400c5e0:	d9800715 	stw	r6,28(sp)
 400c5e4:	da400415 	stw	r9,16(sp)
 400c5e8:	da800315 	stw	r10,12(sp)
 400c5ec:	400d2600 	call	400d260 <__clzsi2>
 400c5f0:	10800804 	addi	r2,r2,32
 400c5f4:	da800317 	ldw	r10,12(sp)
 400c5f8:	da400417 	ldw	r9,16(sp)
 400c5fc:	d9800717 	ldw	r6,28(sp)
 400c600:	d9400217 	ldw	r5,8(sp)
 400c604:	003edd06 	br	400c17c <__muldf3+0x288>
 400c608:	143ff604 	addi	r16,r2,-40
 400c60c:	ac20983a 	sll	r16,r21,r16
 400c610:	002d883a 	mov	r22,zero
 400c614:	003ec106 	br	400c11c <__muldf3+0x228>
 400c618:	d9800715 	stw	r6,28(sp)
 400c61c:	d9c00215 	stw	r7,8(sp)
 400c620:	da400415 	stw	r9,16(sp)
 400c624:	400d2600 	call	400d260 <__clzsi2>
 400c628:	10800804 	addi	r2,r2,32
 400c62c:	da400417 	ldw	r9,16(sp)
 400c630:	d9c00217 	ldw	r7,8(sp)
 400c634:	d9800717 	ldw	r6,28(sp)
 400c638:	003eae06 	br	400c0f4 <__muldf3+0x200>
 400c63c:	00c00044 	movi	r3,1
 400c640:	1887c83a 	sub	r3,r3,r2
 400c644:	01000e04 	movi	r4,56
 400c648:	20fe8516 	blt	r4,r3,400c060 <__muldf3+0x16c>
 400c64c:	010007c4 	movi	r4,31
 400c650:	20c01b16 	blt	r4,r3,400c6c0 <__muldf3+0x7cc>
 400c654:	00800804 	movi	r2,32
 400c658:	10c5c83a 	sub	r2,r2,r3
 400c65c:	888a983a 	sll	r5,r17,r2
 400c660:	90c8d83a 	srl	r4,r18,r3
 400c664:	9084983a 	sll	r2,r18,r2
 400c668:	88e2d83a 	srl	r17,r17,r3
 400c66c:	2906b03a 	or	r3,r5,r4
 400c670:	1004c03a 	cmpne	r2,r2,zero
 400c674:	1886b03a 	or	r3,r3,r2
 400c678:	188001cc 	andi	r2,r3,7
 400c67c:	10000726 	beq	r2,zero,400c69c <__muldf3+0x7a8>
 400c680:	188003cc 	andi	r2,r3,15
 400c684:	01000104 	movi	r4,4
 400c688:	11000426 	beq	r2,r4,400c69c <__muldf3+0x7a8>
 400c68c:	1805883a 	mov	r2,r3
 400c690:	10c00104 	addi	r3,r2,4
 400c694:	1885803a 	cmpltu	r2,r3,r2
 400c698:	88a3883a 	add	r17,r17,r2
 400c69c:	8880202c 	andhi	r2,r17,128
 400c6a0:	10001c26 	beq	r2,zero,400c714 <__muldf3+0x820>
 400c6a4:	3027883a 	mov	r19,r6
 400c6a8:	00800044 	movi	r2,1
 400c6ac:	0021883a 	mov	r16,zero
 400c6b0:	002d883a 	mov	r22,zero
 400c6b4:	003e6e06 	br	400c070 <__muldf3+0x17c>
 400c6b8:	4007883a 	mov	r3,r8
 400c6bc:	003f9706 	br	400c51c <__muldf3+0x628>
 400c6c0:	017ff844 	movi	r5,-31
 400c6c4:	2885c83a 	sub	r2,r5,r2
 400c6c8:	888ad83a 	srl	r5,r17,r2
 400c6cc:	00800804 	movi	r2,32
 400c6d0:	18801a26 	beq	r3,r2,400c73c <__muldf3+0x848>
 400c6d4:	01001004 	movi	r4,64
 400c6d8:	20c7c83a 	sub	r3,r4,r3
 400c6dc:	88e2983a 	sll	r17,r17,r3
 400c6e0:	8ca4b03a 	or	r18,r17,r18
 400c6e4:	9004c03a 	cmpne	r2,r18,zero
 400c6e8:	2884b03a 	or	r2,r5,r2
 400c6ec:	144001cc 	andi	r17,r2,7
 400c6f0:	88000d1e 	bne	r17,zero,400c728 <__muldf3+0x834>
 400c6f4:	0021883a 	mov	r16,zero
 400c6f8:	102cd0fa 	srli	r22,r2,3
 400c6fc:	3027883a 	mov	r19,r6
 400c700:	0005883a 	mov	r2,zero
 400c704:	b46cb03a 	or	r22,r22,r17
 400c708:	003e5906 	br	400c070 <__muldf3+0x17c>
 400c70c:	1007883a 	mov	r3,r2
 400c710:	0023883a 	mov	r17,zero
 400c714:	8820927a 	slli	r16,r17,9
 400c718:	1805883a 	mov	r2,r3
 400c71c:	8822977a 	slli	r17,r17,29
 400c720:	8020d33a 	srli	r16,r16,12
 400c724:	003ff406 	br	400c6f8 <__muldf3+0x804>
 400c728:	10c003cc 	andi	r3,r2,15
 400c72c:	01000104 	movi	r4,4
 400c730:	193ff626 	beq	r3,r4,400c70c <__muldf3+0x818>
 400c734:	0023883a 	mov	r17,zero
 400c738:	003fd506 	br	400c690 <__muldf3+0x79c>
 400c73c:	0023883a 	mov	r17,zero
 400c740:	003fe706 	br	400c6e0 <__muldf3+0x7ec>
 400c744:	00800434 	movhi	r2,16
 400c748:	8c000234 	orhi	r16,r17,8
 400c74c:	10bfffc4 	addi	r2,r2,-1
 400c750:	3027883a 	mov	r19,r6
 400c754:	80a0703a 	and	r16,r16,r2
 400c758:	902d883a 	mov	r22,r18
 400c75c:	003eac06 	br	400c210 <__muldf3+0x31c>

0400c760 <__subdf3>:
 400c760:	02000434 	movhi	r8,16
 400c764:	423fffc4 	addi	r8,r8,-1
 400c768:	defffb04 	addi	sp,sp,-20
 400c76c:	2a14703a 	and	r10,r5,r8
 400c770:	3812d53a 	srli	r9,r7,20
 400c774:	3a10703a 	and	r8,r7,r8
 400c778:	2006d77a 	srli	r3,r4,29
 400c77c:	3004d77a 	srli	r2,r6,29
 400c780:	dc000015 	stw	r16,0(sp)
 400c784:	501490fa 	slli	r10,r10,3
 400c788:	2820d53a 	srli	r16,r5,20
 400c78c:	401090fa 	slli	r8,r8,3
 400c790:	dc800215 	stw	r18,8(sp)
 400c794:	dc400115 	stw	r17,4(sp)
 400c798:	dfc00415 	stw	ra,16(sp)
 400c79c:	202290fa 	slli	r17,r4,3
 400c7a0:	dcc00315 	stw	r19,12(sp)
 400c7a4:	4a41ffcc 	andi	r9,r9,2047
 400c7a8:	0101ffc4 	movi	r4,2047
 400c7ac:	2824d7fa 	srli	r18,r5,31
 400c7b0:	8401ffcc 	andi	r16,r16,2047
 400c7b4:	50c6b03a 	or	r3,r10,r3
 400c7b8:	380ed7fa 	srli	r7,r7,31
 400c7bc:	408ab03a 	or	r5,r8,r2
 400c7c0:	300c90fa 	slli	r6,r6,3
 400c7c4:	49009626 	beq	r9,r4,400ca20 <__subdf3+0x2c0>
 400c7c8:	39c0005c 	xori	r7,r7,1
 400c7cc:	8245c83a 	sub	r2,r16,r9
 400c7d0:	3c807426 	beq	r7,r18,400c9a4 <__subdf3+0x244>
 400c7d4:	0080af0e 	bge	zero,r2,400ca94 <__subdf3+0x334>
 400c7d8:	48002a1e 	bne	r9,zero,400c884 <__subdf3+0x124>
 400c7dc:	2988b03a 	or	r4,r5,r6
 400c7e0:	20009a1e 	bne	r4,zero,400ca4c <__subdf3+0x2ec>
 400c7e4:	888001cc 	andi	r2,r17,7
 400c7e8:	10000726 	beq	r2,zero,400c808 <__subdf3+0xa8>
 400c7ec:	888003cc 	andi	r2,r17,15
 400c7f0:	01000104 	movi	r4,4
 400c7f4:	11000426 	beq	r2,r4,400c808 <__subdf3+0xa8>
 400c7f8:	890b883a 	add	r5,r17,r4
 400c7fc:	2c63803a 	cmpltu	r17,r5,r17
 400c800:	1c47883a 	add	r3,r3,r17
 400c804:	2823883a 	mov	r17,r5
 400c808:	1880202c 	andhi	r2,r3,128
 400c80c:	10005926 	beq	r2,zero,400c974 <__subdf3+0x214>
 400c810:	84000044 	addi	r16,r16,1
 400c814:	0081ffc4 	movi	r2,2047
 400c818:	8080be26 	beq	r16,r2,400cb14 <__subdf3+0x3b4>
 400c81c:	017fe034 	movhi	r5,65408
 400c820:	297fffc4 	addi	r5,r5,-1
 400c824:	1946703a 	and	r3,r3,r5
 400c828:	1804977a 	slli	r2,r3,29
 400c82c:	1806927a 	slli	r3,r3,9
 400c830:	8822d0fa 	srli	r17,r17,3
 400c834:	8401ffcc 	andi	r16,r16,2047
 400c838:	180ad33a 	srli	r5,r3,12
 400c83c:	9100004c 	andi	r4,r18,1
 400c840:	1444b03a 	or	r2,r2,r17
 400c844:	80c1ffcc 	andi	r3,r16,2047
 400c848:	1820953a 	slli	r16,r3,20
 400c84c:	20c03fcc 	andi	r3,r4,255
 400c850:	180897fa 	slli	r4,r3,31
 400c854:	00c00434 	movhi	r3,16
 400c858:	18ffffc4 	addi	r3,r3,-1
 400c85c:	28c6703a 	and	r3,r5,r3
 400c860:	1c06b03a 	or	r3,r3,r16
 400c864:	1906b03a 	or	r3,r3,r4
 400c868:	dfc00417 	ldw	ra,16(sp)
 400c86c:	dcc00317 	ldw	r19,12(sp)
 400c870:	dc800217 	ldw	r18,8(sp)
 400c874:	dc400117 	ldw	r17,4(sp)
 400c878:	dc000017 	ldw	r16,0(sp)
 400c87c:	dec00504 	addi	sp,sp,20
 400c880:	f800283a 	ret
 400c884:	0101ffc4 	movi	r4,2047
 400c888:	813fd626 	beq	r16,r4,400c7e4 <__subdf3+0x84>
 400c88c:	29402034 	orhi	r5,r5,128
 400c890:	01000e04 	movi	r4,56
 400c894:	2080a316 	blt	r4,r2,400cb24 <__subdf3+0x3c4>
 400c898:	010007c4 	movi	r4,31
 400c89c:	2080c616 	blt	r4,r2,400cbb8 <__subdf3+0x458>
 400c8a0:	01000804 	movi	r4,32
 400c8a4:	2089c83a 	sub	r4,r4,r2
 400c8a8:	2910983a 	sll	r8,r5,r4
 400c8ac:	308ed83a 	srl	r7,r6,r2
 400c8b0:	3108983a 	sll	r4,r6,r4
 400c8b4:	2884d83a 	srl	r2,r5,r2
 400c8b8:	41ccb03a 	or	r6,r8,r7
 400c8bc:	2008c03a 	cmpne	r4,r4,zero
 400c8c0:	310cb03a 	or	r6,r6,r4
 400c8c4:	898dc83a 	sub	r6,r17,r6
 400c8c8:	89a3803a 	cmpltu	r17,r17,r6
 400c8cc:	1887c83a 	sub	r3,r3,r2
 400c8d0:	1c47c83a 	sub	r3,r3,r17
 400c8d4:	3023883a 	mov	r17,r6
 400c8d8:	1880202c 	andhi	r2,r3,128
 400c8dc:	10002326 	beq	r2,zero,400c96c <__subdf3+0x20c>
 400c8e0:	04c02034 	movhi	r19,128
 400c8e4:	9cffffc4 	addi	r19,r19,-1
 400c8e8:	1ce6703a 	and	r19,r3,r19
 400c8ec:	98007a26 	beq	r19,zero,400cad8 <__subdf3+0x378>
 400c8f0:	9809883a 	mov	r4,r19
 400c8f4:	400d2600 	call	400d260 <__clzsi2>
 400c8f8:	113ffe04 	addi	r4,r2,-8
 400c8fc:	00c007c4 	movi	r3,31
 400c900:	19007b16 	blt	r3,r4,400caf0 <__subdf3+0x390>
 400c904:	00800804 	movi	r2,32
 400c908:	1105c83a 	sub	r2,r2,r4
 400c90c:	8884d83a 	srl	r2,r17,r2
 400c910:	9906983a 	sll	r3,r19,r4
 400c914:	8922983a 	sll	r17,r17,r4
 400c918:	10c4b03a 	or	r2,r2,r3
 400c91c:	24007816 	blt	r4,r16,400cb00 <__subdf3+0x3a0>
 400c920:	2421c83a 	sub	r16,r4,r16
 400c924:	80c00044 	addi	r3,r16,1
 400c928:	010007c4 	movi	r4,31
 400c92c:	20c09516 	blt	r4,r3,400cb84 <__subdf3+0x424>
 400c930:	01400804 	movi	r5,32
 400c934:	28cbc83a 	sub	r5,r5,r3
 400c938:	88c8d83a 	srl	r4,r17,r3
 400c93c:	8962983a 	sll	r17,r17,r5
 400c940:	114a983a 	sll	r5,r2,r5
 400c944:	10c6d83a 	srl	r3,r2,r3
 400c948:	8804c03a 	cmpne	r2,r17,zero
 400c94c:	290ab03a 	or	r5,r5,r4
 400c950:	28a2b03a 	or	r17,r5,r2
 400c954:	0021883a 	mov	r16,zero
 400c958:	003fa206 	br	400c7e4 <__subdf3+0x84>
 400c95c:	2090b03a 	or	r8,r4,r2
 400c960:	40018e26 	beq	r8,zero,400cf9c <__subdf3+0x83c>
 400c964:	1007883a 	mov	r3,r2
 400c968:	2023883a 	mov	r17,r4
 400c96c:	888001cc 	andi	r2,r17,7
 400c970:	103f9e1e 	bne	r2,zero,400c7ec <__subdf3+0x8c>
 400c974:	1804977a 	slli	r2,r3,29
 400c978:	8822d0fa 	srli	r17,r17,3
 400c97c:	1810d0fa 	srli	r8,r3,3
 400c980:	9100004c 	andi	r4,r18,1
 400c984:	1444b03a 	or	r2,r2,r17
 400c988:	00c1ffc4 	movi	r3,2047
 400c98c:	80c02826 	beq	r16,r3,400ca30 <__subdf3+0x2d0>
 400c990:	01400434 	movhi	r5,16
 400c994:	297fffc4 	addi	r5,r5,-1
 400c998:	80e0703a 	and	r16,r16,r3
 400c99c:	414a703a 	and	r5,r8,r5
 400c9a0:	003fa806 	br	400c844 <__subdf3+0xe4>
 400c9a4:	0080630e 	bge	zero,r2,400cb34 <__subdf3+0x3d4>
 400c9a8:	48003026 	beq	r9,zero,400ca6c <__subdf3+0x30c>
 400c9ac:	0101ffc4 	movi	r4,2047
 400c9b0:	813f8c26 	beq	r16,r4,400c7e4 <__subdf3+0x84>
 400c9b4:	29402034 	orhi	r5,r5,128
 400c9b8:	01000e04 	movi	r4,56
 400c9bc:	2080a90e 	bge	r4,r2,400cc64 <__subdf3+0x504>
 400c9c0:	298cb03a 	or	r6,r5,r6
 400c9c4:	3012c03a 	cmpne	r9,r6,zero
 400c9c8:	0005883a 	mov	r2,zero
 400c9cc:	4c53883a 	add	r9,r9,r17
 400c9d0:	4c63803a 	cmpltu	r17,r9,r17
 400c9d4:	10c7883a 	add	r3,r2,r3
 400c9d8:	88c7883a 	add	r3,r17,r3
 400c9dc:	4823883a 	mov	r17,r9
 400c9e0:	1880202c 	andhi	r2,r3,128
 400c9e4:	1000d026 	beq	r2,zero,400cd28 <__subdf3+0x5c8>
 400c9e8:	84000044 	addi	r16,r16,1
 400c9ec:	0081ffc4 	movi	r2,2047
 400c9f0:	8080fe26 	beq	r16,r2,400cdec <__subdf3+0x68c>
 400c9f4:	00bfe034 	movhi	r2,65408
 400c9f8:	10bfffc4 	addi	r2,r2,-1
 400c9fc:	1886703a 	and	r3,r3,r2
 400ca00:	880ad07a 	srli	r5,r17,1
 400ca04:	180497fa 	slli	r2,r3,31
 400ca08:	8900004c 	andi	r4,r17,1
 400ca0c:	2922b03a 	or	r17,r5,r4
 400ca10:	1806d07a 	srli	r3,r3,1
 400ca14:	1462b03a 	or	r17,r2,r17
 400ca18:	3825883a 	mov	r18,r7
 400ca1c:	003f7106 	br	400c7e4 <__subdf3+0x84>
 400ca20:	2984b03a 	or	r2,r5,r6
 400ca24:	103f6826 	beq	r2,zero,400c7c8 <__subdf3+0x68>
 400ca28:	39c03fcc 	andi	r7,r7,255
 400ca2c:	003f6706 	br	400c7cc <__subdf3+0x6c>
 400ca30:	4086b03a 	or	r3,r8,r2
 400ca34:	18015226 	beq	r3,zero,400cf80 <__subdf3+0x820>
 400ca38:	00c00434 	movhi	r3,16
 400ca3c:	41400234 	orhi	r5,r8,8
 400ca40:	18ffffc4 	addi	r3,r3,-1
 400ca44:	28ca703a 	and	r5,r5,r3
 400ca48:	003f7e06 	br	400c844 <__subdf3+0xe4>
 400ca4c:	10bfffc4 	addi	r2,r2,-1
 400ca50:	1000491e 	bne	r2,zero,400cb78 <__subdf3+0x418>
 400ca54:	898fc83a 	sub	r7,r17,r6
 400ca58:	89e3803a 	cmpltu	r17,r17,r7
 400ca5c:	1947c83a 	sub	r3,r3,r5
 400ca60:	1c47c83a 	sub	r3,r3,r17
 400ca64:	3823883a 	mov	r17,r7
 400ca68:	003f9b06 	br	400c8d8 <__subdf3+0x178>
 400ca6c:	2988b03a 	or	r4,r5,r6
 400ca70:	203f5c26 	beq	r4,zero,400c7e4 <__subdf3+0x84>
 400ca74:	10bfffc4 	addi	r2,r2,-1
 400ca78:	1000931e 	bne	r2,zero,400ccc8 <__subdf3+0x568>
 400ca7c:	898d883a 	add	r6,r17,r6
 400ca80:	3463803a 	cmpltu	r17,r6,r17
 400ca84:	1947883a 	add	r3,r3,r5
 400ca88:	88c7883a 	add	r3,r17,r3
 400ca8c:	3023883a 	mov	r17,r6
 400ca90:	003fd306 	br	400c9e0 <__subdf3+0x280>
 400ca94:	1000541e 	bne	r2,zero,400cbe8 <__subdf3+0x488>
 400ca98:	80800044 	addi	r2,r16,1
 400ca9c:	1081ffcc 	andi	r2,r2,2047
 400caa0:	01000044 	movi	r4,1
 400caa4:	2080a20e 	bge	r4,r2,400cd30 <__subdf3+0x5d0>
 400caa8:	8989c83a 	sub	r4,r17,r6
 400caac:	8905803a 	cmpltu	r2,r17,r4
 400cab0:	1967c83a 	sub	r19,r3,r5
 400cab4:	98a7c83a 	sub	r19,r19,r2
 400cab8:	9880202c 	andhi	r2,r19,128
 400cabc:	10006326 	beq	r2,zero,400cc4c <__subdf3+0x4ec>
 400cac0:	3463c83a 	sub	r17,r6,r17
 400cac4:	28c7c83a 	sub	r3,r5,r3
 400cac8:	344d803a 	cmpltu	r6,r6,r17
 400cacc:	19a7c83a 	sub	r19,r3,r6
 400cad0:	3825883a 	mov	r18,r7
 400cad4:	983f861e 	bne	r19,zero,400c8f0 <__subdf3+0x190>
 400cad8:	8809883a 	mov	r4,r17
 400cadc:	400d2600 	call	400d260 <__clzsi2>
 400cae0:	10800804 	addi	r2,r2,32
 400cae4:	113ffe04 	addi	r4,r2,-8
 400cae8:	00c007c4 	movi	r3,31
 400caec:	193f850e 	bge	r3,r4,400c904 <__subdf3+0x1a4>
 400caf0:	10bff604 	addi	r2,r2,-40
 400caf4:	8884983a 	sll	r2,r17,r2
 400caf8:	0023883a 	mov	r17,zero
 400cafc:	243f880e 	bge	r4,r16,400c920 <__subdf3+0x1c0>
 400cb00:	00ffe034 	movhi	r3,65408
 400cb04:	18ffffc4 	addi	r3,r3,-1
 400cb08:	8121c83a 	sub	r16,r16,r4
 400cb0c:	10c6703a 	and	r3,r2,r3
 400cb10:	003f3406 	br	400c7e4 <__subdf3+0x84>
 400cb14:	9100004c 	andi	r4,r18,1
 400cb18:	000b883a 	mov	r5,zero
 400cb1c:	0005883a 	mov	r2,zero
 400cb20:	003f4806 	br	400c844 <__subdf3+0xe4>
 400cb24:	298cb03a 	or	r6,r5,r6
 400cb28:	300cc03a 	cmpne	r6,r6,zero
 400cb2c:	0005883a 	mov	r2,zero
 400cb30:	003f6406 	br	400c8c4 <__subdf3+0x164>
 400cb34:	10009a1e 	bne	r2,zero,400cda0 <__subdf3+0x640>
 400cb38:	82400044 	addi	r9,r16,1
 400cb3c:	4881ffcc 	andi	r2,r9,2047
 400cb40:	02800044 	movi	r10,1
 400cb44:	5080670e 	bge	r10,r2,400cce4 <__subdf3+0x584>
 400cb48:	0081ffc4 	movi	r2,2047
 400cb4c:	4880af26 	beq	r9,r2,400ce0c <__subdf3+0x6ac>
 400cb50:	898d883a 	add	r6,r17,r6
 400cb54:	1945883a 	add	r2,r3,r5
 400cb58:	3447803a 	cmpltu	r3,r6,r17
 400cb5c:	1887883a 	add	r3,r3,r2
 400cb60:	182297fa 	slli	r17,r3,31
 400cb64:	300cd07a 	srli	r6,r6,1
 400cb68:	1806d07a 	srli	r3,r3,1
 400cb6c:	4821883a 	mov	r16,r9
 400cb70:	89a2b03a 	or	r17,r17,r6
 400cb74:	003f1b06 	br	400c7e4 <__subdf3+0x84>
 400cb78:	0101ffc4 	movi	r4,2047
 400cb7c:	813f441e 	bne	r16,r4,400c890 <__subdf3+0x130>
 400cb80:	003f1806 	br	400c7e4 <__subdf3+0x84>
 400cb84:	843ff844 	addi	r16,r16,-31
 400cb88:	01400804 	movi	r5,32
 400cb8c:	1408d83a 	srl	r4,r2,r16
 400cb90:	19405026 	beq	r3,r5,400ccd4 <__subdf3+0x574>
 400cb94:	01401004 	movi	r5,64
 400cb98:	28c7c83a 	sub	r3,r5,r3
 400cb9c:	10c4983a 	sll	r2,r2,r3
 400cba0:	88a2b03a 	or	r17,r17,r2
 400cba4:	8822c03a 	cmpne	r17,r17,zero
 400cba8:	2462b03a 	or	r17,r4,r17
 400cbac:	0007883a 	mov	r3,zero
 400cbb0:	0021883a 	mov	r16,zero
 400cbb4:	003f6d06 	br	400c96c <__subdf3+0x20c>
 400cbb8:	11fff804 	addi	r7,r2,-32
 400cbbc:	01000804 	movi	r4,32
 400cbc0:	29ced83a 	srl	r7,r5,r7
 400cbc4:	11004526 	beq	r2,r4,400ccdc <__subdf3+0x57c>
 400cbc8:	01001004 	movi	r4,64
 400cbcc:	2089c83a 	sub	r4,r4,r2
 400cbd0:	2904983a 	sll	r2,r5,r4
 400cbd4:	118cb03a 	or	r6,r2,r6
 400cbd8:	300cc03a 	cmpne	r6,r6,zero
 400cbdc:	398cb03a 	or	r6,r7,r6
 400cbe0:	0005883a 	mov	r2,zero
 400cbe4:	003f3706 	br	400c8c4 <__subdf3+0x164>
 400cbe8:	80002a26 	beq	r16,zero,400cc94 <__subdf3+0x534>
 400cbec:	0101ffc4 	movi	r4,2047
 400cbf0:	49006626 	beq	r9,r4,400cd8c <__subdf3+0x62c>
 400cbf4:	0085c83a 	sub	r2,zero,r2
 400cbf8:	18c02034 	orhi	r3,r3,128
 400cbfc:	01000e04 	movi	r4,56
 400cc00:	20807e16 	blt	r4,r2,400cdfc <__subdf3+0x69c>
 400cc04:	010007c4 	movi	r4,31
 400cc08:	2080e716 	blt	r4,r2,400cfa8 <__subdf3+0x848>
 400cc0c:	01000804 	movi	r4,32
 400cc10:	2089c83a 	sub	r4,r4,r2
 400cc14:	1914983a 	sll	r10,r3,r4
 400cc18:	8890d83a 	srl	r8,r17,r2
 400cc1c:	8908983a 	sll	r4,r17,r4
 400cc20:	1884d83a 	srl	r2,r3,r2
 400cc24:	5222b03a 	or	r17,r10,r8
 400cc28:	2006c03a 	cmpne	r3,r4,zero
 400cc2c:	88e2b03a 	or	r17,r17,r3
 400cc30:	3463c83a 	sub	r17,r6,r17
 400cc34:	2885c83a 	sub	r2,r5,r2
 400cc38:	344d803a 	cmpltu	r6,r6,r17
 400cc3c:	1187c83a 	sub	r3,r2,r6
 400cc40:	4821883a 	mov	r16,r9
 400cc44:	3825883a 	mov	r18,r7
 400cc48:	003f2306 	br	400c8d8 <__subdf3+0x178>
 400cc4c:	24d0b03a 	or	r8,r4,r19
 400cc50:	40001b1e 	bne	r8,zero,400ccc0 <__subdf3+0x560>
 400cc54:	0005883a 	mov	r2,zero
 400cc58:	0009883a 	mov	r4,zero
 400cc5c:	0021883a 	mov	r16,zero
 400cc60:	003f4906 	br	400c988 <__subdf3+0x228>
 400cc64:	010007c4 	movi	r4,31
 400cc68:	20803a16 	blt	r4,r2,400cd54 <__subdf3+0x5f4>
 400cc6c:	01000804 	movi	r4,32
 400cc70:	2089c83a 	sub	r4,r4,r2
 400cc74:	2912983a 	sll	r9,r5,r4
 400cc78:	3090d83a 	srl	r8,r6,r2
 400cc7c:	3108983a 	sll	r4,r6,r4
 400cc80:	2884d83a 	srl	r2,r5,r2
 400cc84:	4a12b03a 	or	r9,r9,r8
 400cc88:	2008c03a 	cmpne	r4,r4,zero
 400cc8c:	4912b03a 	or	r9,r9,r4
 400cc90:	003f4e06 	br	400c9cc <__subdf3+0x26c>
 400cc94:	1c48b03a 	or	r4,r3,r17
 400cc98:	20003c26 	beq	r4,zero,400cd8c <__subdf3+0x62c>
 400cc9c:	0084303a 	nor	r2,zero,r2
 400cca0:	1000381e 	bne	r2,zero,400cd84 <__subdf3+0x624>
 400cca4:	3463c83a 	sub	r17,r6,r17
 400cca8:	28c5c83a 	sub	r2,r5,r3
 400ccac:	344d803a 	cmpltu	r6,r6,r17
 400ccb0:	1187c83a 	sub	r3,r2,r6
 400ccb4:	4821883a 	mov	r16,r9
 400ccb8:	3825883a 	mov	r18,r7
 400ccbc:	003f0606 	br	400c8d8 <__subdf3+0x178>
 400ccc0:	2023883a 	mov	r17,r4
 400ccc4:	003f0906 	br	400c8ec <__subdf3+0x18c>
 400ccc8:	0101ffc4 	movi	r4,2047
 400cccc:	813f3a1e 	bne	r16,r4,400c9b8 <__subdf3+0x258>
 400ccd0:	003ec406 	br	400c7e4 <__subdf3+0x84>
 400ccd4:	0005883a 	mov	r2,zero
 400ccd8:	003fb106 	br	400cba0 <__subdf3+0x440>
 400ccdc:	0005883a 	mov	r2,zero
 400cce0:	003fbc06 	br	400cbd4 <__subdf3+0x474>
 400cce4:	1c44b03a 	or	r2,r3,r17
 400cce8:	80008e1e 	bne	r16,zero,400cf24 <__subdf3+0x7c4>
 400ccec:	1000c826 	beq	r2,zero,400d010 <__subdf3+0x8b0>
 400ccf0:	2984b03a 	or	r2,r5,r6
 400ccf4:	103ebb26 	beq	r2,zero,400c7e4 <__subdf3+0x84>
 400ccf8:	8989883a 	add	r4,r17,r6
 400ccfc:	1945883a 	add	r2,r3,r5
 400cd00:	2447803a 	cmpltu	r3,r4,r17
 400cd04:	1887883a 	add	r3,r3,r2
 400cd08:	1880202c 	andhi	r2,r3,128
 400cd0c:	2023883a 	mov	r17,r4
 400cd10:	103f1626 	beq	r2,zero,400c96c <__subdf3+0x20c>
 400cd14:	00bfe034 	movhi	r2,65408
 400cd18:	10bfffc4 	addi	r2,r2,-1
 400cd1c:	5021883a 	mov	r16,r10
 400cd20:	1886703a 	and	r3,r3,r2
 400cd24:	003eaf06 	br	400c7e4 <__subdf3+0x84>
 400cd28:	3825883a 	mov	r18,r7
 400cd2c:	003f0f06 	br	400c96c <__subdf3+0x20c>
 400cd30:	1c44b03a 	or	r2,r3,r17
 400cd34:	8000251e 	bne	r16,zero,400cdcc <__subdf3+0x66c>
 400cd38:	1000661e 	bne	r2,zero,400ced4 <__subdf3+0x774>
 400cd3c:	2990b03a 	or	r8,r5,r6
 400cd40:	40009626 	beq	r8,zero,400cf9c <__subdf3+0x83c>
 400cd44:	2807883a 	mov	r3,r5
 400cd48:	3023883a 	mov	r17,r6
 400cd4c:	3825883a 	mov	r18,r7
 400cd50:	003ea406 	br	400c7e4 <__subdf3+0x84>
 400cd54:	127ff804 	addi	r9,r2,-32
 400cd58:	01000804 	movi	r4,32
 400cd5c:	2a52d83a 	srl	r9,r5,r9
 400cd60:	11008c26 	beq	r2,r4,400cf94 <__subdf3+0x834>
 400cd64:	01001004 	movi	r4,64
 400cd68:	2085c83a 	sub	r2,r4,r2
 400cd6c:	2884983a 	sll	r2,r5,r2
 400cd70:	118cb03a 	or	r6,r2,r6
 400cd74:	300cc03a 	cmpne	r6,r6,zero
 400cd78:	4992b03a 	or	r9,r9,r6
 400cd7c:	0005883a 	mov	r2,zero
 400cd80:	003f1206 	br	400c9cc <__subdf3+0x26c>
 400cd84:	0101ffc4 	movi	r4,2047
 400cd88:	493f9c1e 	bne	r9,r4,400cbfc <__subdf3+0x49c>
 400cd8c:	2807883a 	mov	r3,r5
 400cd90:	3023883a 	mov	r17,r6
 400cd94:	4821883a 	mov	r16,r9
 400cd98:	3825883a 	mov	r18,r7
 400cd9c:	003e9106 	br	400c7e4 <__subdf3+0x84>
 400cda0:	80001f1e 	bne	r16,zero,400ce20 <__subdf3+0x6c0>
 400cda4:	1c48b03a 	or	r4,r3,r17
 400cda8:	20005a26 	beq	r4,zero,400cf14 <__subdf3+0x7b4>
 400cdac:	0084303a 	nor	r2,zero,r2
 400cdb0:	1000561e 	bne	r2,zero,400cf0c <__subdf3+0x7ac>
 400cdb4:	89a3883a 	add	r17,r17,r6
 400cdb8:	1945883a 	add	r2,r3,r5
 400cdbc:	898d803a 	cmpltu	r6,r17,r6
 400cdc0:	3087883a 	add	r3,r6,r2
 400cdc4:	4821883a 	mov	r16,r9
 400cdc8:	003f0506 	br	400c9e0 <__subdf3+0x280>
 400cdcc:	10002b1e 	bne	r2,zero,400ce7c <__subdf3+0x71c>
 400cdd0:	2984b03a 	or	r2,r5,r6
 400cdd4:	10008026 	beq	r2,zero,400cfd8 <__subdf3+0x878>
 400cdd8:	2807883a 	mov	r3,r5
 400cddc:	3023883a 	mov	r17,r6
 400cde0:	3825883a 	mov	r18,r7
 400cde4:	0401ffc4 	movi	r16,2047
 400cde8:	003e7e06 	br	400c7e4 <__subdf3+0x84>
 400cdec:	3809883a 	mov	r4,r7
 400cdf0:	0011883a 	mov	r8,zero
 400cdf4:	0005883a 	mov	r2,zero
 400cdf8:	003ee306 	br	400c988 <__subdf3+0x228>
 400cdfc:	1c62b03a 	or	r17,r3,r17
 400ce00:	8822c03a 	cmpne	r17,r17,zero
 400ce04:	0005883a 	mov	r2,zero
 400ce08:	003f8906 	br	400cc30 <__subdf3+0x4d0>
 400ce0c:	3809883a 	mov	r4,r7
 400ce10:	4821883a 	mov	r16,r9
 400ce14:	0011883a 	mov	r8,zero
 400ce18:	0005883a 	mov	r2,zero
 400ce1c:	003eda06 	br	400c988 <__subdf3+0x228>
 400ce20:	0101ffc4 	movi	r4,2047
 400ce24:	49003b26 	beq	r9,r4,400cf14 <__subdf3+0x7b4>
 400ce28:	0085c83a 	sub	r2,zero,r2
 400ce2c:	18c02034 	orhi	r3,r3,128
 400ce30:	01000e04 	movi	r4,56
 400ce34:	20806e16 	blt	r4,r2,400cff0 <__subdf3+0x890>
 400ce38:	010007c4 	movi	r4,31
 400ce3c:	20807716 	blt	r4,r2,400d01c <__subdf3+0x8bc>
 400ce40:	01000804 	movi	r4,32
 400ce44:	2089c83a 	sub	r4,r4,r2
 400ce48:	1914983a 	sll	r10,r3,r4
 400ce4c:	8890d83a 	srl	r8,r17,r2
 400ce50:	8908983a 	sll	r4,r17,r4
 400ce54:	1884d83a 	srl	r2,r3,r2
 400ce58:	5222b03a 	or	r17,r10,r8
 400ce5c:	2006c03a 	cmpne	r3,r4,zero
 400ce60:	88e2b03a 	or	r17,r17,r3
 400ce64:	89a3883a 	add	r17,r17,r6
 400ce68:	1145883a 	add	r2,r2,r5
 400ce6c:	898d803a 	cmpltu	r6,r17,r6
 400ce70:	3087883a 	add	r3,r6,r2
 400ce74:	4821883a 	mov	r16,r9
 400ce78:	003ed906 	br	400c9e0 <__subdf3+0x280>
 400ce7c:	2984b03a 	or	r2,r5,r6
 400ce80:	10004226 	beq	r2,zero,400cf8c <__subdf3+0x82c>
 400ce84:	1808d0fa 	srli	r4,r3,3
 400ce88:	8822d0fa 	srli	r17,r17,3
 400ce8c:	1806977a 	slli	r3,r3,29
 400ce90:	2080022c 	andhi	r2,r4,8
 400ce94:	1c62b03a 	or	r17,r3,r17
 400ce98:	10000826 	beq	r2,zero,400cebc <__subdf3+0x75c>
 400ce9c:	2812d0fa 	srli	r9,r5,3
 400cea0:	4880022c 	andhi	r2,r9,8
 400cea4:	1000051e 	bne	r2,zero,400cebc <__subdf3+0x75c>
 400cea8:	300cd0fa 	srli	r6,r6,3
 400ceac:	2804977a 	slli	r2,r5,29
 400ceb0:	4809883a 	mov	r4,r9
 400ceb4:	3825883a 	mov	r18,r7
 400ceb8:	11a2b03a 	or	r17,r2,r6
 400cebc:	8806d77a 	srli	r3,r17,29
 400cec0:	200890fa 	slli	r4,r4,3
 400cec4:	882290fa 	slli	r17,r17,3
 400cec8:	0401ffc4 	movi	r16,2047
 400cecc:	1906b03a 	or	r3,r3,r4
 400ced0:	003e4406 	br	400c7e4 <__subdf3+0x84>
 400ced4:	2984b03a 	or	r2,r5,r6
 400ced8:	103e4226 	beq	r2,zero,400c7e4 <__subdf3+0x84>
 400cedc:	8989c83a 	sub	r4,r17,r6
 400cee0:	8911803a 	cmpltu	r8,r17,r4
 400cee4:	1945c83a 	sub	r2,r3,r5
 400cee8:	1205c83a 	sub	r2,r2,r8
 400ceec:	1200202c 	andhi	r8,r2,128
 400cef0:	403e9a26 	beq	r8,zero,400c95c <__subdf3+0x1fc>
 400cef4:	3463c83a 	sub	r17,r6,r17
 400cef8:	28c5c83a 	sub	r2,r5,r3
 400cefc:	344d803a 	cmpltu	r6,r6,r17
 400cf00:	1187c83a 	sub	r3,r2,r6
 400cf04:	3825883a 	mov	r18,r7
 400cf08:	003e3606 	br	400c7e4 <__subdf3+0x84>
 400cf0c:	0101ffc4 	movi	r4,2047
 400cf10:	493fc71e 	bne	r9,r4,400ce30 <__subdf3+0x6d0>
 400cf14:	2807883a 	mov	r3,r5
 400cf18:	3023883a 	mov	r17,r6
 400cf1c:	4821883a 	mov	r16,r9
 400cf20:	003e3006 	br	400c7e4 <__subdf3+0x84>
 400cf24:	10003626 	beq	r2,zero,400d000 <__subdf3+0x8a0>
 400cf28:	2984b03a 	or	r2,r5,r6
 400cf2c:	10001726 	beq	r2,zero,400cf8c <__subdf3+0x82c>
 400cf30:	1808d0fa 	srli	r4,r3,3
 400cf34:	8822d0fa 	srli	r17,r17,3
 400cf38:	1806977a 	slli	r3,r3,29
 400cf3c:	2080022c 	andhi	r2,r4,8
 400cf40:	1c62b03a 	or	r17,r3,r17
 400cf44:	10000726 	beq	r2,zero,400cf64 <__subdf3+0x804>
 400cf48:	2812d0fa 	srli	r9,r5,3
 400cf4c:	4880022c 	andhi	r2,r9,8
 400cf50:	1000041e 	bne	r2,zero,400cf64 <__subdf3+0x804>
 400cf54:	300cd0fa 	srli	r6,r6,3
 400cf58:	2804977a 	slli	r2,r5,29
 400cf5c:	4809883a 	mov	r4,r9
 400cf60:	11a2b03a 	or	r17,r2,r6
 400cf64:	8806d77a 	srli	r3,r17,29
 400cf68:	200890fa 	slli	r4,r4,3
 400cf6c:	882290fa 	slli	r17,r17,3
 400cf70:	3825883a 	mov	r18,r7
 400cf74:	1906b03a 	or	r3,r3,r4
 400cf78:	0401ffc4 	movi	r16,2047
 400cf7c:	003e1906 	br	400c7e4 <__subdf3+0x84>
 400cf80:	000b883a 	mov	r5,zero
 400cf84:	0005883a 	mov	r2,zero
 400cf88:	003e2e06 	br	400c844 <__subdf3+0xe4>
 400cf8c:	0401ffc4 	movi	r16,2047
 400cf90:	003e1406 	br	400c7e4 <__subdf3+0x84>
 400cf94:	0005883a 	mov	r2,zero
 400cf98:	003f7506 	br	400cd70 <__subdf3+0x610>
 400cf9c:	0005883a 	mov	r2,zero
 400cfa0:	0009883a 	mov	r4,zero
 400cfa4:	003e7806 	br	400c988 <__subdf3+0x228>
 400cfa8:	123ff804 	addi	r8,r2,-32
 400cfac:	01000804 	movi	r4,32
 400cfb0:	1a10d83a 	srl	r8,r3,r8
 400cfb4:	11002526 	beq	r2,r4,400d04c <__subdf3+0x8ec>
 400cfb8:	01001004 	movi	r4,64
 400cfbc:	2085c83a 	sub	r2,r4,r2
 400cfc0:	1884983a 	sll	r2,r3,r2
 400cfc4:	1444b03a 	or	r2,r2,r17
 400cfc8:	1004c03a 	cmpne	r2,r2,zero
 400cfcc:	40a2b03a 	or	r17,r8,r2
 400cfd0:	0005883a 	mov	r2,zero
 400cfd4:	003f1606 	br	400cc30 <__subdf3+0x4d0>
 400cfd8:	02000434 	movhi	r8,16
 400cfdc:	0009883a 	mov	r4,zero
 400cfe0:	423fffc4 	addi	r8,r8,-1
 400cfe4:	00bfffc4 	movi	r2,-1
 400cfe8:	0401ffc4 	movi	r16,2047
 400cfec:	003e6606 	br	400c988 <__subdf3+0x228>
 400cff0:	1c62b03a 	or	r17,r3,r17
 400cff4:	8822c03a 	cmpne	r17,r17,zero
 400cff8:	0005883a 	mov	r2,zero
 400cffc:	003f9906 	br	400ce64 <__subdf3+0x704>
 400d000:	2807883a 	mov	r3,r5
 400d004:	3023883a 	mov	r17,r6
 400d008:	0401ffc4 	movi	r16,2047
 400d00c:	003df506 	br	400c7e4 <__subdf3+0x84>
 400d010:	2807883a 	mov	r3,r5
 400d014:	3023883a 	mov	r17,r6
 400d018:	003df206 	br	400c7e4 <__subdf3+0x84>
 400d01c:	123ff804 	addi	r8,r2,-32
 400d020:	01000804 	movi	r4,32
 400d024:	1a10d83a 	srl	r8,r3,r8
 400d028:	11000a26 	beq	r2,r4,400d054 <__subdf3+0x8f4>
 400d02c:	01001004 	movi	r4,64
 400d030:	2085c83a 	sub	r2,r4,r2
 400d034:	1884983a 	sll	r2,r3,r2
 400d038:	1444b03a 	or	r2,r2,r17
 400d03c:	1004c03a 	cmpne	r2,r2,zero
 400d040:	40a2b03a 	or	r17,r8,r2
 400d044:	0005883a 	mov	r2,zero
 400d048:	003f8606 	br	400ce64 <__subdf3+0x704>
 400d04c:	0005883a 	mov	r2,zero
 400d050:	003fdc06 	br	400cfc4 <__subdf3+0x864>
 400d054:	0005883a 	mov	r2,zero
 400d058:	003ff706 	br	400d038 <__subdf3+0x8d8>

0400d05c <__fixdfsi>:
 400d05c:	280cd53a 	srli	r6,r5,20
 400d060:	00c00434 	movhi	r3,16
 400d064:	18ffffc4 	addi	r3,r3,-1
 400d068:	3181ffcc 	andi	r6,r6,2047
 400d06c:	01c0ff84 	movi	r7,1022
 400d070:	28c6703a 	and	r3,r5,r3
 400d074:	280ad7fa 	srli	r5,r5,31
 400d078:	3980120e 	bge	r7,r6,400d0c4 <__fixdfsi+0x68>
 400d07c:	00810744 	movi	r2,1053
 400d080:	11800c16 	blt	r2,r6,400d0b4 <__fixdfsi+0x58>
 400d084:	00810cc4 	movi	r2,1075
 400d088:	1185c83a 	sub	r2,r2,r6
 400d08c:	01c007c4 	movi	r7,31
 400d090:	18c00434 	orhi	r3,r3,16
 400d094:	38800d16 	blt	r7,r2,400d0cc <__fixdfsi+0x70>
 400d098:	31befb44 	addi	r6,r6,-1043
 400d09c:	2084d83a 	srl	r2,r4,r2
 400d0a0:	1986983a 	sll	r3,r3,r6
 400d0a4:	1884b03a 	or	r2,r3,r2
 400d0a8:	28000726 	beq	r5,zero,400d0c8 <__fixdfsi+0x6c>
 400d0ac:	0085c83a 	sub	r2,zero,r2
 400d0b0:	f800283a 	ret
 400d0b4:	00a00034 	movhi	r2,32768
 400d0b8:	10bfffc4 	addi	r2,r2,-1
 400d0bc:	2885883a 	add	r2,r5,r2
 400d0c0:	f800283a 	ret
 400d0c4:	0005883a 	mov	r2,zero
 400d0c8:	f800283a 	ret
 400d0cc:	008104c4 	movi	r2,1043
 400d0d0:	1185c83a 	sub	r2,r2,r6
 400d0d4:	1884d83a 	srl	r2,r3,r2
 400d0d8:	003ff306 	br	400d0a8 <__fixdfsi+0x4c>

0400d0dc <__floatsidf>:
 400d0dc:	defffd04 	addi	sp,sp,-12
 400d0e0:	dfc00215 	stw	ra,8(sp)
 400d0e4:	dc400115 	stw	r17,4(sp)
 400d0e8:	dc000015 	stw	r16,0(sp)
 400d0ec:	20002b26 	beq	r4,zero,400d19c <__floatsidf+0xc0>
 400d0f0:	2023883a 	mov	r17,r4
 400d0f4:	2020d7fa 	srli	r16,r4,31
 400d0f8:	20002d16 	blt	r4,zero,400d1b0 <__floatsidf+0xd4>
 400d0fc:	8809883a 	mov	r4,r17
 400d100:	400d2600 	call	400d260 <__clzsi2>
 400d104:	01410784 	movi	r5,1054
 400d108:	288bc83a 	sub	r5,r5,r2
 400d10c:	01010cc4 	movi	r4,1075
 400d110:	2149c83a 	sub	r4,r4,r5
 400d114:	00c007c4 	movi	r3,31
 400d118:	1900160e 	bge	r3,r4,400d174 <__floatsidf+0x98>
 400d11c:	00c104c4 	movi	r3,1043
 400d120:	1947c83a 	sub	r3,r3,r5
 400d124:	88c6983a 	sll	r3,r17,r3
 400d128:	00800434 	movhi	r2,16
 400d12c:	10bfffc4 	addi	r2,r2,-1
 400d130:	1886703a 	and	r3,r3,r2
 400d134:	2941ffcc 	andi	r5,r5,2047
 400d138:	800d883a 	mov	r6,r16
 400d13c:	0005883a 	mov	r2,zero
 400d140:	280a953a 	slli	r5,r5,20
 400d144:	31803fcc 	andi	r6,r6,255
 400d148:	01000434 	movhi	r4,16
 400d14c:	300c97fa 	slli	r6,r6,31
 400d150:	213fffc4 	addi	r4,r4,-1
 400d154:	1906703a 	and	r3,r3,r4
 400d158:	1946b03a 	or	r3,r3,r5
 400d15c:	1986b03a 	or	r3,r3,r6
 400d160:	dfc00217 	ldw	ra,8(sp)
 400d164:	dc400117 	ldw	r17,4(sp)
 400d168:	dc000017 	ldw	r16,0(sp)
 400d16c:	dec00304 	addi	sp,sp,12
 400d170:	f800283a 	ret
 400d174:	00c002c4 	movi	r3,11
 400d178:	1887c83a 	sub	r3,r3,r2
 400d17c:	88c6d83a 	srl	r3,r17,r3
 400d180:	8904983a 	sll	r2,r17,r4
 400d184:	01000434 	movhi	r4,16
 400d188:	213fffc4 	addi	r4,r4,-1
 400d18c:	2941ffcc 	andi	r5,r5,2047
 400d190:	1906703a 	and	r3,r3,r4
 400d194:	800d883a 	mov	r6,r16
 400d198:	003fe906 	br	400d140 <__floatsidf+0x64>
 400d19c:	000d883a 	mov	r6,zero
 400d1a0:	000b883a 	mov	r5,zero
 400d1a4:	0007883a 	mov	r3,zero
 400d1a8:	0005883a 	mov	r2,zero
 400d1ac:	003fe406 	br	400d140 <__floatsidf+0x64>
 400d1b0:	0123c83a 	sub	r17,zero,r4
 400d1b4:	003fd106 	br	400d0fc <__floatsidf+0x20>

0400d1b8 <__floatunsidf>:
 400d1b8:	defffe04 	addi	sp,sp,-8
 400d1bc:	dc000015 	stw	r16,0(sp)
 400d1c0:	dfc00115 	stw	ra,4(sp)
 400d1c4:	2021883a 	mov	r16,r4
 400d1c8:	20002226 	beq	r4,zero,400d254 <__floatunsidf+0x9c>
 400d1cc:	400d2600 	call	400d260 <__clzsi2>
 400d1d0:	01010784 	movi	r4,1054
 400d1d4:	2089c83a 	sub	r4,r4,r2
 400d1d8:	01810cc4 	movi	r6,1075
 400d1dc:	310dc83a 	sub	r6,r6,r4
 400d1e0:	00c007c4 	movi	r3,31
 400d1e4:	1980120e 	bge	r3,r6,400d230 <__floatunsidf+0x78>
 400d1e8:	00c104c4 	movi	r3,1043
 400d1ec:	1907c83a 	sub	r3,r3,r4
 400d1f0:	80ca983a 	sll	r5,r16,r3
 400d1f4:	00800434 	movhi	r2,16
 400d1f8:	10bfffc4 	addi	r2,r2,-1
 400d1fc:	2101ffcc 	andi	r4,r4,2047
 400d200:	0021883a 	mov	r16,zero
 400d204:	288a703a 	and	r5,r5,r2
 400d208:	2008953a 	slli	r4,r4,20
 400d20c:	00c00434 	movhi	r3,16
 400d210:	18ffffc4 	addi	r3,r3,-1
 400d214:	28c6703a 	and	r3,r5,r3
 400d218:	8005883a 	mov	r2,r16
 400d21c:	1906b03a 	or	r3,r3,r4
 400d220:	dfc00117 	ldw	ra,4(sp)
 400d224:	dc000017 	ldw	r16,0(sp)
 400d228:	dec00204 	addi	sp,sp,8
 400d22c:	f800283a 	ret
 400d230:	00c002c4 	movi	r3,11
 400d234:	188bc83a 	sub	r5,r3,r2
 400d238:	814ad83a 	srl	r5,r16,r5
 400d23c:	00c00434 	movhi	r3,16
 400d240:	18ffffc4 	addi	r3,r3,-1
 400d244:	81a0983a 	sll	r16,r16,r6
 400d248:	2101ffcc 	andi	r4,r4,2047
 400d24c:	28ca703a 	and	r5,r5,r3
 400d250:	003fed06 	br	400d208 <__floatunsidf+0x50>
 400d254:	0009883a 	mov	r4,zero
 400d258:	000b883a 	mov	r5,zero
 400d25c:	003fea06 	br	400d208 <__floatunsidf+0x50>

0400d260 <__clzsi2>:
 400d260:	00bfffd4 	movui	r2,65535
 400d264:	11000536 	bltu	r2,r4,400d27c <__clzsi2+0x1c>
 400d268:	00803fc4 	movi	r2,255
 400d26c:	11000f36 	bltu	r2,r4,400d2ac <__clzsi2+0x4c>
 400d270:	00800804 	movi	r2,32
 400d274:	0007883a 	mov	r3,zero
 400d278:	00000506 	br	400d290 <__clzsi2+0x30>
 400d27c:	00804034 	movhi	r2,256
 400d280:	10bfffc4 	addi	r2,r2,-1
 400d284:	11000c2e 	bgeu	r2,r4,400d2b8 <__clzsi2+0x58>
 400d288:	00800204 	movi	r2,8
 400d28c:	00c00604 	movi	r3,24
 400d290:	20c8d83a 	srl	r4,r4,r3
 400d294:	00c10074 	movhi	r3,1025
 400d298:	18ff2404 	addi	r3,r3,-880
 400d29c:	1909883a 	add	r4,r3,r4
 400d2a0:	20c00003 	ldbu	r3,0(r4)
 400d2a4:	10c5c83a 	sub	r2,r2,r3
 400d2a8:	f800283a 	ret
 400d2ac:	00800604 	movi	r2,24
 400d2b0:	00c00204 	movi	r3,8
 400d2b4:	003ff606 	br	400d290 <__clzsi2+0x30>
 400d2b8:	00800404 	movi	r2,16
 400d2bc:	1007883a 	mov	r3,r2
 400d2c0:	003ff306 	br	400d290 <__clzsi2+0x30>

0400d2c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d2c4:	defffe04 	addi	sp,sp,-8
 400d2c8:	dfc00115 	stw	ra,4(sp)
 400d2cc:	df000015 	stw	fp,0(sp)
 400d2d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d2d4:	d0a00c17 	ldw	r2,-32720(gp)
 400d2d8:	10000326 	beq	r2,zero,400d2e8 <alt_get_errno+0x24>
 400d2dc:	d0a00c17 	ldw	r2,-32720(gp)
 400d2e0:	103ee83a 	callr	r2
 400d2e4:	00000106 	br	400d2ec <alt_get_errno+0x28>
 400d2e8:	d0a6d304 	addi	r2,gp,-25780
}
 400d2ec:	e037883a 	mov	sp,fp
 400d2f0:	dfc00117 	ldw	ra,4(sp)
 400d2f4:	df000017 	ldw	fp,0(sp)
 400d2f8:	dec00204 	addi	sp,sp,8
 400d2fc:	f800283a 	ret

0400d300 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 400d300:	defffb04 	addi	sp,sp,-20
 400d304:	dfc00415 	stw	ra,16(sp)
 400d308:	df000315 	stw	fp,12(sp)
 400d30c:	df000304 	addi	fp,sp,12
 400d310:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 400d314:	e0bfff17 	ldw	r2,-4(fp)
 400d318:	10000816 	blt	r2,zero,400d33c <close+0x3c>
 400d31c:	01400304 	movi	r5,12
 400d320:	e13fff17 	ldw	r4,-4(fp)
 400d324:	400a9f80 	call	400a9f8 <__mulsi3>
 400d328:	1007883a 	mov	r3,r2
 400d32c:	00810074 	movhi	r2,1025
 400d330:	1081a204 	addi	r2,r2,1672
 400d334:	1885883a 	add	r2,r3,r2
 400d338:	00000106 	br	400d340 <close+0x40>
 400d33c:	0005883a 	mov	r2,zero
 400d340:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 400d344:	e0bffd17 	ldw	r2,-12(fp)
 400d348:	10001926 	beq	r2,zero,400d3b0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 400d34c:	e0bffd17 	ldw	r2,-12(fp)
 400d350:	10800017 	ldw	r2,0(r2)
 400d354:	10800417 	ldw	r2,16(r2)
 400d358:	10000626 	beq	r2,zero,400d374 <close+0x74>
 400d35c:	e0bffd17 	ldw	r2,-12(fp)
 400d360:	10800017 	ldw	r2,0(r2)
 400d364:	10800417 	ldw	r2,16(r2)
 400d368:	e13ffd17 	ldw	r4,-12(fp)
 400d36c:	103ee83a 	callr	r2
 400d370:	00000106 	br	400d378 <close+0x78>
 400d374:	0005883a 	mov	r2,zero
 400d378:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 400d37c:	e13fff17 	ldw	r4,-4(fp)
 400d380:	400da240 	call	400da24 <alt_release_fd>
    if (rval < 0)
 400d384:	e0bffe17 	ldw	r2,-8(fp)
 400d388:	1000070e 	bge	r2,zero,400d3a8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 400d38c:	400d2c40 	call	400d2c4 <alt_get_errno>
 400d390:	1007883a 	mov	r3,r2
 400d394:	e0bffe17 	ldw	r2,-8(fp)
 400d398:	0085c83a 	sub	r2,zero,r2
 400d39c:	18800015 	stw	r2,0(r3)
      return -1;
 400d3a0:	00bfffc4 	movi	r2,-1
 400d3a4:	00000706 	br	400d3c4 <close+0xc4>
    }
    return 0;
 400d3a8:	0005883a 	mov	r2,zero
 400d3ac:	00000506 	br	400d3c4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400d3b0:	400d2c40 	call	400d2c4 <alt_get_errno>
 400d3b4:	1007883a 	mov	r3,r2
 400d3b8:	00801444 	movi	r2,81
 400d3bc:	18800015 	stw	r2,0(r3)
    return -1;
 400d3c0:	00bfffc4 	movi	r2,-1
  }
}
 400d3c4:	e037883a 	mov	sp,fp
 400d3c8:	dfc00117 	ldw	ra,4(sp)
 400d3cc:	df000017 	ldw	fp,0(sp)
 400d3d0:	dec00204 	addi	sp,sp,8
 400d3d4:	f800283a 	ret

0400d3d8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 400d3d8:	defffc04 	addi	sp,sp,-16
 400d3dc:	df000315 	stw	fp,12(sp)
 400d3e0:	df000304 	addi	fp,sp,12
 400d3e4:	e13ffd15 	stw	r4,-12(fp)
 400d3e8:	e17ffe15 	stw	r5,-8(fp)
 400d3ec:	e1bfff15 	stw	r6,-4(fp)
  return len;
 400d3f0:	e0bfff17 	ldw	r2,-4(fp)
}
 400d3f4:	e037883a 	mov	sp,fp
 400d3f8:	df000017 	ldw	fp,0(sp)
 400d3fc:	dec00104 	addi	sp,sp,4
 400d400:	f800283a 	ret

0400d404 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d404:	defffe04 	addi	sp,sp,-8
 400d408:	dfc00115 	stw	ra,4(sp)
 400d40c:	df000015 	stw	fp,0(sp)
 400d410:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d414:	d0a00c17 	ldw	r2,-32720(gp)
 400d418:	10000326 	beq	r2,zero,400d428 <alt_get_errno+0x24>
 400d41c:	d0a00c17 	ldw	r2,-32720(gp)
 400d420:	103ee83a 	callr	r2
 400d424:	00000106 	br	400d42c <alt_get_errno+0x28>
 400d428:	d0a6d304 	addi	r2,gp,-25780
}
 400d42c:	e037883a 	mov	sp,fp
 400d430:	dfc00117 	ldw	ra,4(sp)
 400d434:	df000017 	ldw	fp,0(sp)
 400d438:	dec00204 	addi	sp,sp,8
 400d43c:	f800283a 	ret

0400d440 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 400d440:	defffb04 	addi	sp,sp,-20
 400d444:	dfc00415 	stw	ra,16(sp)
 400d448:	df000315 	stw	fp,12(sp)
 400d44c:	df000304 	addi	fp,sp,12
 400d450:	e13ffe15 	stw	r4,-8(fp)
 400d454:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d458:	e0bffe17 	ldw	r2,-8(fp)
 400d45c:	10000816 	blt	r2,zero,400d480 <fstat+0x40>
 400d460:	01400304 	movi	r5,12
 400d464:	e13ffe17 	ldw	r4,-8(fp)
 400d468:	400a9f80 	call	400a9f8 <__mulsi3>
 400d46c:	1007883a 	mov	r3,r2
 400d470:	00810074 	movhi	r2,1025
 400d474:	1081a204 	addi	r2,r2,1672
 400d478:	1885883a 	add	r2,r3,r2
 400d47c:	00000106 	br	400d484 <fstat+0x44>
 400d480:	0005883a 	mov	r2,zero
 400d484:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 400d488:	e0bffd17 	ldw	r2,-12(fp)
 400d48c:	10001026 	beq	r2,zero,400d4d0 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 400d490:	e0bffd17 	ldw	r2,-12(fp)
 400d494:	10800017 	ldw	r2,0(r2)
 400d498:	10800817 	ldw	r2,32(r2)
 400d49c:	10000726 	beq	r2,zero,400d4bc <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 400d4a0:	e0bffd17 	ldw	r2,-12(fp)
 400d4a4:	10800017 	ldw	r2,0(r2)
 400d4a8:	10800817 	ldw	r2,32(r2)
 400d4ac:	e17fff17 	ldw	r5,-4(fp)
 400d4b0:	e13ffd17 	ldw	r4,-12(fp)
 400d4b4:	103ee83a 	callr	r2
 400d4b8:	00000a06 	br	400d4e4 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 400d4bc:	e0bfff17 	ldw	r2,-4(fp)
 400d4c0:	00c80004 	movi	r3,8192
 400d4c4:	10c00115 	stw	r3,4(r2)
      return 0;
 400d4c8:	0005883a 	mov	r2,zero
 400d4cc:	00000506 	br	400d4e4 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400d4d0:	400d4040 	call	400d404 <alt_get_errno>
 400d4d4:	1007883a 	mov	r3,r2
 400d4d8:	00801444 	movi	r2,81
 400d4dc:	18800015 	stw	r2,0(r3)
    return -1;
 400d4e0:	00bfffc4 	movi	r2,-1
  }
}
 400d4e4:	e037883a 	mov	sp,fp
 400d4e8:	dfc00117 	ldw	ra,4(sp)
 400d4ec:	df000017 	ldw	fp,0(sp)
 400d4f0:	dec00204 	addi	sp,sp,8
 400d4f4:	f800283a 	ret

0400d4f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d4f8:	defffe04 	addi	sp,sp,-8
 400d4fc:	dfc00115 	stw	ra,4(sp)
 400d500:	df000015 	stw	fp,0(sp)
 400d504:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d508:	d0a00c17 	ldw	r2,-32720(gp)
 400d50c:	10000326 	beq	r2,zero,400d51c <alt_get_errno+0x24>
 400d510:	d0a00c17 	ldw	r2,-32720(gp)
 400d514:	103ee83a 	callr	r2
 400d518:	00000106 	br	400d520 <alt_get_errno+0x28>
 400d51c:	d0a6d304 	addi	r2,gp,-25780
}
 400d520:	e037883a 	mov	sp,fp
 400d524:	dfc00117 	ldw	ra,4(sp)
 400d528:	df000017 	ldw	fp,0(sp)
 400d52c:	dec00204 	addi	sp,sp,8
 400d530:	f800283a 	ret

0400d534 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 400d534:	deffed04 	addi	sp,sp,-76
 400d538:	dfc01215 	stw	ra,72(sp)
 400d53c:	df001115 	stw	fp,68(sp)
 400d540:	df001104 	addi	fp,sp,68
 400d544:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d548:	e0bfff17 	ldw	r2,-4(fp)
 400d54c:	10000816 	blt	r2,zero,400d570 <isatty+0x3c>
 400d550:	01400304 	movi	r5,12
 400d554:	e13fff17 	ldw	r4,-4(fp)
 400d558:	400a9f80 	call	400a9f8 <__mulsi3>
 400d55c:	1007883a 	mov	r3,r2
 400d560:	00810074 	movhi	r2,1025
 400d564:	1081a204 	addi	r2,r2,1672
 400d568:	1885883a 	add	r2,r3,r2
 400d56c:	00000106 	br	400d574 <isatty+0x40>
 400d570:	0005883a 	mov	r2,zero
 400d574:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 400d578:	e0bfef17 	ldw	r2,-68(fp)
 400d57c:	10000e26 	beq	r2,zero,400d5b8 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 400d580:	e0bfef17 	ldw	r2,-68(fp)
 400d584:	10800017 	ldw	r2,0(r2)
 400d588:	10800817 	ldw	r2,32(r2)
 400d58c:	1000021e 	bne	r2,zero,400d598 <isatty+0x64>
    {
      return 1;
 400d590:	00800044 	movi	r2,1
 400d594:	00000d06 	br	400d5cc <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 400d598:	e0bff004 	addi	r2,fp,-64
 400d59c:	100b883a 	mov	r5,r2
 400d5a0:	e13fff17 	ldw	r4,-4(fp)
 400d5a4:	400d4400 	call	400d440 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 400d5a8:	e0bff117 	ldw	r2,-60(fp)
 400d5ac:	10880020 	cmpeqi	r2,r2,8192
 400d5b0:	10803fcc 	andi	r2,r2,255
 400d5b4:	00000506 	br	400d5cc <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400d5b8:	400d4f80 	call	400d4f8 <alt_get_errno>
 400d5bc:	1007883a 	mov	r3,r2
 400d5c0:	00801444 	movi	r2,81
 400d5c4:	18800015 	stw	r2,0(r3)
    return 0;
 400d5c8:	0005883a 	mov	r2,zero
  }
}
 400d5cc:	e037883a 	mov	sp,fp
 400d5d0:	dfc00117 	ldw	ra,4(sp)
 400d5d4:	df000017 	ldw	fp,0(sp)
 400d5d8:	dec00204 	addi	sp,sp,8
 400d5dc:	f800283a 	ret

0400d5e0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 400d5e0:	defffc04 	addi	sp,sp,-16
 400d5e4:	df000315 	stw	fp,12(sp)
 400d5e8:	df000304 	addi	fp,sp,12
 400d5ec:	e13ffd15 	stw	r4,-12(fp)
 400d5f0:	e17ffe15 	stw	r5,-8(fp)
 400d5f4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 400d5f8:	e0fffe17 	ldw	r3,-8(fp)
 400d5fc:	e0bffd17 	ldw	r2,-12(fp)
 400d600:	18800c26 	beq	r3,r2,400d634 <alt_load_section+0x54>
  {
    while( to != end )
 400d604:	00000806 	br	400d628 <alt_load_section+0x48>
    {
      *to++ = *from++;
 400d608:	e0bffe17 	ldw	r2,-8(fp)
 400d60c:	10c00104 	addi	r3,r2,4
 400d610:	e0fffe15 	stw	r3,-8(fp)
 400d614:	e0fffd17 	ldw	r3,-12(fp)
 400d618:	19000104 	addi	r4,r3,4
 400d61c:	e13ffd15 	stw	r4,-12(fp)
 400d620:	18c00017 	ldw	r3,0(r3)
 400d624:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 400d628:	e0fffe17 	ldw	r3,-8(fp)
 400d62c:	e0bfff17 	ldw	r2,-4(fp)
 400d630:	18bff51e 	bne	r3,r2,400d608 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 400d634:	0001883a 	nop
 400d638:	e037883a 	mov	sp,fp
 400d63c:	df000017 	ldw	fp,0(sp)
 400d640:	dec00104 	addi	sp,sp,4
 400d644:	f800283a 	ret

0400d648 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 400d648:	defffe04 	addi	sp,sp,-8
 400d64c:	dfc00115 	stw	ra,4(sp)
 400d650:	df000015 	stw	fp,0(sp)
 400d654:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 400d658:	01810074 	movhi	r6,1025
 400d65c:	31862b04 	addi	r6,r6,6316
 400d660:	01410074 	movhi	r5,1025
 400d664:	297f6f04 	addi	r5,r5,-580
 400d668:	01010074 	movhi	r4,1025
 400d66c:	21062b04 	addi	r4,r4,6316
 400d670:	400d5e00 	call	400d5e0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 400d674:	01800034 	movhi	r6,0
 400d678:	31808c04 	addi	r6,r6,560
 400d67c:	01400034 	movhi	r5,0
 400d680:	29400804 	addi	r5,r5,32
 400d684:	01010034 	movhi	r4,1024
 400d688:	21000004 	addi	r4,r4,0
 400d68c:	400d5e00 	call	400d5e0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 400d690:	01810074 	movhi	r6,1025
 400d694:	31bf6f04 	addi	r6,r6,-580
 400d698:	01410074 	movhi	r5,1025
 400d69c:	297e9304 	addi	r5,r5,-1460
 400d6a0:	01010074 	movhi	r4,1025
 400d6a4:	213e9304 	addi	r4,r4,-1460
 400d6a8:	400d5e00 	call	400d5e0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 400d6ac:	400e8e00 	call	400e8e0 <alt_dcache_flush_all>
  alt_icache_flush_all();
 400d6b0:	400eaa00 	call	400eaa0 <alt_icache_flush_all>
}
 400d6b4:	0001883a 	nop
 400d6b8:	e037883a 	mov	sp,fp
 400d6bc:	dfc00117 	ldw	ra,4(sp)
 400d6c0:	df000017 	ldw	fp,0(sp)
 400d6c4:	dec00204 	addi	sp,sp,8
 400d6c8:	f800283a 	ret

0400d6cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d6cc:	defffe04 	addi	sp,sp,-8
 400d6d0:	dfc00115 	stw	ra,4(sp)
 400d6d4:	df000015 	stw	fp,0(sp)
 400d6d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d6dc:	d0a00c17 	ldw	r2,-32720(gp)
 400d6e0:	10000326 	beq	r2,zero,400d6f0 <alt_get_errno+0x24>
 400d6e4:	d0a00c17 	ldw	r2,-32720(gp)
 400d6e8:	103ee83a 	callr	r2
 400d6ec:	00000106 	br	400d6f4 <alt_get_errno+0x28>
 400d6f0:	d0a6d304 	addi	r2,gp,-25780
}
 400d6f4:	e037883a 	mov	sp,fp
 400d6f8:	dfc00117 	ldw	ra,4(sp)
 400d6fc:	df000017 	ldw	fp,0(sp)
 400d700:	dec00204 	addi	sp,sp,8
 400d704:	f800283a 	ret

0400d708 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 400d708:	defff904 	addi	sp,sp,-28
 400d70c:	dfc00615 	stw	ra,24(sp)
 400d710:	df000515 	stw	fp,20(sp)
 400d714:	df000504 	addi	fp,sp,20
 400d718:	e13ffd15 	stw	r4,-12(fp)
 400d71c:	e17ffe15 	stw	r5,-8(fp)
 400d720:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 400d724:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d728:	e0bffd17 	ldw	r2,-12(fp)
 400d72c:	10000816 	blt	r2,zero,400d750 <lseek+0x48>
 400d730:	01400304 	movi	r5,12
 400d734:	e13ffd17 	ldw	r4,-12(fp)
 400d738:	400a9f80 	call	400a9f8 <__mulsi3>
 400d73c:	1007883a 	mov	r3,r2
 400d740:	00810074 	movhi	r2,1025
 400d744:	1081a204 	addi	r2,r2,1672
 400d748:	1885883a 	add	r2,r3,r2
 400d74c:	00000106 	br	400d754 <lseek+0x4c>
 400d750:	0005883a 	mov	r2,zero
 400d754:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 400d758:	e0bffc17 	ldw	r2,-16(fp)
 400d75c:	10001026 	beq	r2,zero,400d7a0 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 400d760:	e0bffc17 	ldw	r2,-16(fp)
 400d764:	10800017 	ldw	r2,0(r2)
 400d768:	10800717 	ldw	r2,28(r2)
 400d76c:	10000926 	beq	r2,zero,400d794 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 400d770:	e0bffc17 	ldw	r2,-16(fp)
 400d774:	10800017 	ldw	r2,0(r2)
 400d778:	10800717 	ldw	r2,28(r2)
 400d77c:	e1bfff17 	ldw	r6,-4(fp)
 400d780:	e17ffe17 	ldw	r5,-8(fp)
 400d784:	e13ffc17 	ldw	r4,-16(fp)
 400d788:	103ee83a 	callr	r2
 400d78c:	e0bffb15 	stw	r2,-20(fp)
 400d790:	00000506 	br	400d7a8 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 400d794:	00bfde84 	movi	r2,-134
 400d798:	e0bffb15 	stw	r2,-20(fp)
 400d79c:	00000206 	br	400d7a8 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 400d7a0:	00bfebc4 	movi	r2,-81
 400d7a4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 400d7a8:	e0bffb17 	ldw	r2,-20(fp)
 400d7ac:	1000070e 	bge	r2,zero,400d7cc <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 400d7b0:	400d6cc0 	call	400d6cc <alt_get_errno>
 400d7b4:	1007883a 	mov	r3,r2
 400d7b8:	e0bffb17 	ldw	r2,-20(fp)
 400d7bc:	0085c83a 	sub	r2,zero,r2
 400d7c0:	18800015 	stw	r2,0(r3)
    rc = -1;
 400d7c4:	00bfffc4 	movi	r2,-1
 400d7c8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 400d7cc:	e0bffb17 	ldw	r2,-20(fp)
}
 400d7d0:	e037883a 	mov	sp,fp
 400d7d4:	dfc00117 	ldw	ra,4(sp)
 400d7d8:	df000017 	ldw	fp,0(sp)
 400d7dc:	dec00204 	addi	sp,sp,8
 400d7e0:	f800283a 	ret

0400d7e4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 400d7e4:	defffd04 	addi	sp,sp,-12
 400d7e8:	dfc00215 	stw	ra,8(sp)
 400d7ec:	df000115 	stw	fp,4(sp)
 400d7f0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 400d7f4:	0009883a 	mov	r4,zero
 400d7f8:	400dcc80 	call	400dcc8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 400d7fc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 400d800:	400dd000 	call	400dd00 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 400d804:	01810074 	movhi	r6,1025
 400d808:	31bf6704 	addi	r6,r6,-612
 400d80c:	01410074 	movhi	r5,1025
 400d810:	297f6704 	addi	r5,r5,-612
 400d814:	01010074 	movhi	r4,1025
 400d818:	213f6704 	addi	r4,r4,-612
 400d81c:	400ee440 	call	400ee44 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 400d820:	400e9e00 	call	400e9e0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 400d824:	01010074 	movhi	r4,1025
 400d828:	213a9004 	addi	r4,r4,-5568
 400d82c:	400f6040 	call	400f604 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 400d830:	d0a6d417 	ldw	r2,-25776(gp)
 400d834:	d0e6d517 	ldw	r3,-25772(gp)
 400d838:	d126d617 	ldw	r4,-25768(gp)
 400d83c:	200d883a 	mov	r6,r4
 400d840:	180b883a 	mov	r5,r3
 400d844:	1009883a 	mov	r4,r2
 400d848:	40002a00 	call	40002a0 <main>
 400d84c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 400d850:	01000044 	movi	r4,1
 400d854:	400d3000 	call	400d300 <close>
  exit (result);
 400d858:	e13fff17 	ldw	r4,-4(fp)
 400d85c:	400f6180 	call	400f618 <exit>

0400d860 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 400d860:	defffe04 	addi	sp,sp,-8
 400d864:	df000115 	stw	fp,4(sp)
 400d868:	df000104 	addi	fp,sp,4
 400d86c:	e13fff15 	stw	r4,-4(fp)
}
 400d870:	0001883a 	nop
 400d874:	e037883a 	mov	sp,fp
 400d878:	df000017 	ldw	fp,0(sp)
 400d87c:	dec00104 	addi	sp,sp,4
 400d880:	f800283a 	ret

0400d884 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 400d884:	defffe04 	addi	sp,sp,-8
 400d888:	df000115 	stw	fp,4(sp)
 400d88c:	df000104 	addi	fp,sp,4
 400d890:	e13fff15 	stw	r4,-4(fp)
}
 400d894:	0001883a 	nop
 400d898:	e037883a 	mov	sp,fp
 400d89c:	df000017 	ldw	fp,0(sp)
 400d8a0:	dec00104 	addi	sp,sp,4
 400d8a4:	f800283a 	ret

0400d8a8 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
 400d8a8:	defffd04 	addi	sp,sp,-12
 400d8ac:	dfc00215 	stw	ra,8(sp)
 400d8b0:	df000115 	stw	fp,4(sp)
 400d8b4:	df000104 	addi	fp,sp,4
 400d8b8:	e13fff15 	stw	r4,-4(fp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
#else
    return fputs(str, stdout);
 400d8bc:	d0a00217 	ldw	r2,-32760(gp)
 400d8c0:	10800217 	ldw	r2,8(r2)
 400d8c4:	100b883a 	mov	r5,r2
 400d8c8:	e13fff17 	ldw	r4,-4(fp)
 400d8cc:	400f6ec0 	call	400f6ec <fputs>
#endif
#endif
}
 400d8d0:	e037883a 	mov	sp,fp
 400d8d4:	dfc00117 	ldw	ra,4(sp)
 400d8d8:	df000017 	ldw	fp,0(sp)
 400d8dc:	dec00204 	addi	sp,sp,8
 400d8e0:	f800283a 	ret

0400d8e4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400d8e4:	defffe04 	addi	sp,sp,-8
 400d8e8:	dfc00115 	stw	ra,4(sp)
 400d8ec:	df000015 	stw	fp,0(sp)
 400d8f0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400d8f4:	d0a00c17 	ldw	r2,-32720(gp)
 400d8f8:	10000326 	beq	r2,zero,400d908 <alt_get_errno+0x24>
 400d8fc:	d0a00c17 	ldw	r2,-32720(gp)
 400d900:	103ee83a 	callr	r2
 400d904:	00000106 	br	400d90c <alt_get_errno+0x28>
 400d908:	d0a6d304 	addi	r2,gp,-25780
}
 400d90c:	e037883a 	mov	sp,fp
 400d910:	dfc00117 	ldw	ra,4(sp)
 400d914:	df000017 	ldw	fp,0(sp)
 400d918:	dec00204 	addi	sp,sp,8
 400d91c:	f800283a 	ret

0400d920 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 400d920:	defff904 	addi	sp,sp,-28
 400d924:	dfc00615 	stw	ra,24(sp)
 400d928:	df000515 	stw	fp,20(sp)
 400d92c:	df000504 	addi	fp,sp,20
 400d930:	e13ffd15 	stw	r4,-12(fp)
 400d934:	e17ffe15 	stw	r5,-8(fp)
 400d938:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400d93c:	e0bffd17 	ldw	r2,-12(fp)
 400d940:	10000816 	blt	r2,zero,400d964 <read+0x44>
 400d944:	01400304 	movi	r5,12
 400d948:	e13ffd17 	ldw	r4,-12(fp)
 400d94c:	400a9f80 	call	400a9f8 <__mulsi3>
 400d950:	1007883a 	mov	r3,r2
 400d954:	00810074 	movhi	r2,1025
 400d958:	1081a204 	addi	r2,r2,1672
 400d95c:	1885883a 	add	r2,r3,r2
 400d960:	00000106 	br	400d968 <read+0x48>
 400d964:	0005883a 	mov	r2,zero
 400d968:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 400d96c:	e0bffb17 	ldw	r2,-20(fp)
 400d970:	10002226 	beq	r2,zero,400d9fc <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400d974:	e0bffb17 	ldw	r2,-20(fp)
 400d978:	10800217 	ldw	r2,8(r2)
 400d97c:	108000cc 	andi	r2,r2,3
 400d980:	10800060 	cmpeqi	r2,r2,1
 400d984:	1000181e 	bne	r2,zero,400d9e8 <read+0xc8>
        (fd->dev->read))
 400d988:	e0bffb17 	ldw	r2,-20(fp)
 400d98c:	10800017 	ldw	r2,0(r2)
 400d990:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400d994:	10001426 	beq	r2,zero,400d9e8 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 400d998:	e0bffb17 	ldw	r2,-20(fp)
 400d99c:	10800017 	ldw	r2,0(r2)
 400d9a0:	10800517 	ldw	r2,20(r2)
 400d9a4:	e0ffff17 	ldw	r3,-4(fp)
 400d9a8:	180d883a 	mov	r6,r3
 400d9ac:	e17ffe17 	ldw	r5,-8(fp)
 400d9b0:	e13ffb17 	ldw	r4,-20(fp)
 400d9b4:	103ee83a 	callr	r2
 400d9b8:	e0bffc15 	stw	r2,-16(fp)
 400d9bc:	e0bffc17 	ldw	r2,-16(fp)
 400d9c0:	1000070e 	bge	r2,zero,400d9e0 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 400d9c4:	400d8e40 	call	400d8e4 <alt_get_errno>
 400d9c8:	1007883a 	mov	r3,r2
 400d9cc:	e0bffc17 	ldw	r2,-16(fp)
 400d9d0:	0085c83a 	sub	r2,zero,r2
 400d9d4:	18800015 	stw	r2,0(r3)
          return -1;
 400d9d8:	00bfffc4 	movi	r2,-1
 400d9dc:	00000c06 	br	400da10 <read+0xf0>
        }
        return rval;
 400d9e0:	e0bffc17 	ldw	r2,-16(fp)
 400d9e4:	00000a06 	br	400da10 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 400d9e8:	400d8e40 	call	400d8e4 <alt_get_errno>
 400d9ec:	1007883a 	mov	r3,r2
 400d9f0:	00800344 	movi	r2,13
 400d9f4:	18800015 	stw	r2,0(r3)
 400d9f8:	00000406 	br	400da0c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 400d9fc:	400d8e40 	call	400d8e4 <alt_get_errno>
 400da00:	1007883a 	mov	r3,r2
 400da04:	00801444 	movi	r2,81
 400da08:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400da0c:	00bfffc4 	movi	r2,-1
}
 400da10:	e037883a 	mov	sp,fp
 400da14:	dfc00117 	ldw	ra,4(sp)
 400da18:	df000017 	ldw	fp,0(sp)
 400da1c:	dec00204 	addi	sp,sp,8
 400da20:	f800283a 	ret

0400da24 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 400da24:	defffc04 	addi	sp,sp,-16
 400da28:	dfc00315 	stw	ra,12(sp)
 400da2c:	df000215 	stw	fp,8(sp)
 400da30:	dc000115 	stw	r16,4(sp)
 400da34:	df000204 	addi	fp,sp,8
 400da38:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 400da3c:	e0bffe17 	ldw	r2,-8(fp)
 400da40:	108000d0 	cmplti	r2,r2,3
 400da44:	1000111e 	bne	r2,zero,400da8c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 400da48:	04010074 	movhi	r16,1025
 400da4c:	8401a204 	addi	r16,r16,1672
 400da50:	e0bffe17 	ldw	r2,-8(fp)
 400da54:	01400304 	movi	r5,12
 400da58:	1009883a 	mov	r4,r2
 400da5c:	400a9f80 	call	400a9f8 <__mulsi3>
 400da60:	8085883a 	add	r2,r16,r2
 400da64:	10800204 	addi	r2,r2,8
 400da68:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 400da6c:	04010074 	movhi	r16,1025
 400da70:	8401a204 	addi	r16,r16,1672
 400da74:	e0bffe17 	ldw	r2,-8(fp)
 400da78:	01400304 	movi	r5,12
 400da7c:	1009883a 	mov	r4,r2
 400da80:	400a9f80 	call	400a9f8 <__mulsi3>
 400da84:	8085883a 	add	r2,r16,r2
 400da88:	10000015 	stw	zero,0(r2)
  }
}
 400da8c:	0001883a 	nop
 400da90:	e6ffff04 	addi	sp,fp,-4
 400da94:	dfc00217 	ldw	ra,8(sp)
 400da98:	df000117 	ldw	fp,4(sp)
 400da9c:	dc000017 	ldw	r16,0(sp)
 400daa0:	dec00304 	addi	sp,sp,12
 400daa4:	f800283a 	ret

0400daa8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 400daa8:	defff904 	addi	sp,sp,-28
 400daac:	df000615 	stw	fp,24(sp)
 400dab0:	df000604 	addi	fp,sp,24
 400dab4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400dab8:	0005303a 	rdctl	r2,status
 400dabc:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400dac0:	e0fffe17 	ldw	r3,-8(fp)
 400dac4:	00bfff84 	movi	r2,-2
 400dac8:	1884703a 	and	r2,r3,r2
 400dacc:	1001703a 	wrctl	status,r2
  
  return context;
 400dad0:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 400dad4:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 400dad8:	d0a00d17 	ldw	r2,-32716(gp)
 400dadc:	10c000c4 	addi	r3,r2,3
 400dae0:	00bfff04 	movi	r2,-4
 400dae4:	1884703a 	and	r2,r3,r2
 400dae8:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 400daec:	d0e00d17 	ldw	r3,-32716(gp)
 400daf0:	e0bfff17 	ldw	r2,-4(fp)
 400daf4:	1887883a 	add	r3,r3,r2
 400daf8:	00818034 	movhi	r2,1536
 400dafc:	10800004 	addi	r2,r2,0
 400db00:	10c0062e 	bgeu	r2,r3,400db1c <sbrk+0x74>
 400db04:	e0bffb17 	ldw	r2,-20(fp)
 400db08:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400db0c:	e0bffa17 	ldw	r2,-24(fp)
 400db10:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 400db14:	00bfffc4 	movi	r2,-1
 400db18:	00000b06 	br	400db48 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 400db1c:	d0a00d17 	ldw	r2,-32716(gp)
 400db20:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 400db24:	d0e00d17 	ldw	r3,-32716(gp)
 400db28:	e0bfff17 	ldw	r2,-4(fp)
 400db2c:	1885883a 	add	r2,r3,r2
 400db30:	d0a00d15 	stw	r2,-32716(gp)
 400db34:	e0bffb17 	ldw	r2,-20(fp)
 400db38:	e0bffc15 	stw	r2,-16(fp)
 400db3c:	e0bffc17 	ldw	r2,-16(fp)
 400db40:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 400db44:	e0bffd17 	ldw	r2,-12(fp)
} 
 400db48:	e037883a 	mov	sp,fp
 400db4c:	df000017 	ldw	fp,0(sp)
 400db50:	dec00104 	addi	sp,sp,4
 400db54:	f800283a 	ret

0400db58 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400db58:	defffe04 	addi	sp,sp,-8
 400db5c:	dfc00115 	stw	ra,4(sp)
 400db60:	df000015 	stw	fp,0(sp)
 400db64:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400db68:	d0a00c17 	ldw	r2,-32720(gp)
 400db6c:	10000326 	beq	r2,zero,400db7c <alt_get_errno+0x24>
 400db70:	d0a00c17 	ldw	r2,-32720(gp)
 400db74:	103ee83a 	callr	r2
 400db78:	00000106 	br	400db80 <alt_get_errno+0x28>
 400db7c:	d0a6d304 	addi	r2,gp,-25780
}
 400db80:	e037883a 	mov	sp,fp
 400db84:	dfc00117 	ldw	ra,4(sp)
 400db88:	df000017 	ldw	fp,0(sp)
 400db8c:	dec00204 	addi	sp,sp,8
 400db90:	f800283a 	ret

0400db94 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 400db94:	defff904 	addi	sp,sp,-28
 400db98:	dfc00615 	stw	ra,24(sp)
 400db9c:	df000515 	stw	fp,20(sp)
 400dba0:	df000504 	addi	fp,sp,20
 400dba4:	e13ffd15 	stw	r4,-12(fp)
 400dba8:	e17ffe15 	stw	r5,-8(fp)
 400dbac:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400dbb0:	e0bffd17 	ldw	r2,-12(fp)
 400dbb4:	10000816 	blt	r2,zero,400dbd8 <write+0x44>
 400dbb8:	01400304 	movi	r5,12
 400dbbc:	e13ffd17 	ldw	r4,-12(fp)
 400dbc0:	400a9f80 	call	400a9f8 <__mulsi3>
 400dbc4:	1007883a 	mov	r3,r2
 400dbc8:	00810074 	movhi	r2,1025
 400dbcc:	1081a204 	addi	r2,r2,1672
 400dbd0:	1885883a 	add	r2,r3,r2
 400dbd4:	00000106 	br	400dbdc <write+0x48>
 400dbd8:	0005883a 	mov	r2,zero
 400dbdc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 400dbe0:	e0bffb17 	ldw	r2,-20(fp)
 400dbe4:	10002126 	beq	r2,zero,400dc6c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 400dbe8:	e0bffb17 	ldw	r2,-20(fp)
 400dbec:	10800217 	ldw	r2,8(r2)
 400dbf0:	108000cc 	andi	r2,r2,3
 400dbf4:	10001826 	beq	r2,zero,400dc58 <write+0xc4>
 400dbf8:	e0bffb17 	ldw	r2,-20(fp)
 400dbfc:	10800017 	ldw	r2,0(r2)
 400dc00:	10800617 	ldw	r2,24(r2)
 400dc04:	10001426 	beq	r2,zero,400dc58 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 400dc08:	e0bffb17 	ldw	r2,-20(fp)
 400dc0c:	10800017 	ldw	r2,0(r2)
 400dc10:	10800617 	ldw	r2,24(r2)
 400dc14:	e0ffff17 	ldw	r3,-4(fp)
 400dc18:	180d883a 	mov	r6,r3
 400dc1c:	e17ffe17 	ldw	r5,-8(fp)
 400dc20:	e13ffb17 	ldw	r4,-20(fp)
 400dc24:	103ee83a 	callr	r2
 400dc28:	e0bffc15 	stw	r2,-16(fp)
 400dc2c:	e0bffc17 	ldw	r2,-16(fp)
 400dc30:	1000070e 	bge	r2,zero,400dc50 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 400dc34:	400db580 	call	400db58 <alt_get_errno>
 400dc38:	1007883a 	mov	r3,r2
 400dc3c:	e0bffc17 	ldw	r2,-16(fp)
 400dc40:	0085c83a 	sub	r2,zero,r2
 400dc44:	18800015 	stw	r2,0(r3)
        return -1;
 400dc48:	00bfffc4 	movi	r2,-1
 400dc4c:	00000c06 	br	400dc80 <write+0xec>
      }
      return rval;
 400dc50:	e0bffc17 	ldw	r2,-16(fp)
 400dc54:	00000a06 	br	400dc80 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 400dc58:	400db580 	call	400db58 <alt_get_errno>
 400dc5c:	1007883a 	mov	r3,r2
 400dc60:	00800344 	movi	r2,13
 400dc64:	18800015 	stw	r2,0(r3)
 400dc68:	00000406 	br	400dc7c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 400dc6c:	400db580 	call	400db58 <alt_get_errno>
 400dc70:	1007883a 	mov	r3,r2
 400dc74:	00801444 	movi	r2,81
 400dc78:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400dc7c:	00bfffc4 	movi	r2,-1
}
 400dc80:	e037883a 	mov	sp,fp
 400dc84:	dfc00117 	ldw	ra,4(sp)
 400dc88:	df000017 	ldw	fp,0(sp)
 400dc8c:	dec00204 	addi	sp,sp,8
 400dc90:	f800283a 	ret

0400dc94 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 400dc94:	defffd04 	addi	sp,sp,-12
 400dc98:	dfc00215 	stw	ra,8(sp)
 400dc9c:	df000115 	stw	fp,4(sp)
 400dca0:	df000104 	addi	fp,sp,4
 400dca4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 400dca8:	d1600904 	addi	r5,gp,-32732
 400dcac:	e13fff17 	ldw	r4,-4(fp)
 400dcb0:	400e93c0 	call	400e93c <alt_dev_llist_insert>
}
 400dcb4:	e037883a 	mov	sp,fp
 400dcb8:	dfc00117 	ldw	ra,4(sp)
 400dcbc:	df000017 	ldw	fp,0(sp)
 400dcc0:	dec00204 	addi	sp,sp,8
 400dcc4:	f800283a 	ret

0400dcc8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 400dcc8:	defffd04 	addi	sp,sp,-12
 400dccc:	dfc00215 	stw	ra,8(sp)
 400dcd0:	df000115 	stw	fp,4(sp)
 400dcd4:	df000104 	addi	fp,sp,4
 400dcd8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_CPU, nios2_cpu);
 400dcdc:	400f2e80 	call	400f2e8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 400dce0:	00800044 	movi	r2,1
 400dce4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 400dce8:	0001883a 	nop
 400dcec:	e037883a 	mov	sp,fp
 400dcf0:	dfc00117 	ldw	ra,4(sp)
 400dcf4:	df000017 	ldw	fp,0(sp)
 400dcf8:	dec00204 	addi	sp,sp,8
 400dcfc:	f800283a 	ret

0400dd00 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 400dd00:	defffe04 	addi	sp,sp,-8
 400dd04:	dfc00115 	stw	ra,4(sp)
 400dd08:	df000015 	stw	fp,0(sp)
 400dd0c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 400dd10:	000d883a 	mov	r6,zero
 400dd14:	000b883a 	mov	r5,zero
 400dd18:	01010074 	movhi	r4,1025
 400dd1c:	21020c04 	addi	r4,r4,2096
 400dd20:	400deb00 	call	400deb0 <altera_avalon_jtag_uart_init>
 400dd24:	01010074 	movhi	r4,1025
 400dd28:	21020204 	addi	r4,r4,2056
 400dd2c:	400dc940 	call	400dc94 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 400dd30:	0001883a 	nop
}
 400dd34:	0001883a 	nop
 400dd38:	e037883a 	mov	sp,fp
 400dd3c:	dfc00117 	ldw	ra,4(sp)
 400dd40:	df000017 	ldw	fp,0(sp)
 400dd44:	dec00204 	addi	sp,sp,8
 400dd48:	f800283a 	ret

0400dd4c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 400dd4c:	defffa04 	addi	sp,sp,-24
 400dd50:	dfc00515 	stw	ra,20(sp)
 400dd54:	df000415 	stw	fp,16(sp)
 400dd58:	df000404 	addi	fp,sp,16
 400dd5c:	e13ffd15 	stw	r4,-12(fp)
 400dd60:	e17ffe15 	stw	r5,-8(fp)
 400dd64:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400dd68:	e0bffd17 	ldw	r2,-12(fp)
 400dd6c:	10800017 	ldw	r2,0(r2)
 400dd70:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 400dd74:	e0bffc17 	ldw	r2,-16(fp)
 400dd78:	10c00a04 	addi	r3,r2,40
 400dd7c:	e0bffd17 	ldw	r2,-12(fp)
 400dd80:	10800217 	ldw	r2,8(r2)
 400dd84:	100f883a 	mov	r7,r2
 400dd88:	e1bfff17 	ldw	r6,-4(fp)
 400dd8c:	e17ffe17 	ldw	r5,-8(fp)
 400dd90:	1809883a 	mov	r4,r3
 400dd94:	400e3740 	call	400e374 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 400dd98:	e037883a 	mov	sp,fp
 400dd9c:	dfc00117 	ldw	ra,4(sp)
 400dda0:	df000017 	ldw	fp,0(sp)
 400dda4:	dec00204 	addi	sp,sp,8
 400dda8:	f800283a 	ret

0400ddac <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 400ddac:	defffa04 	addi	sp,sp,-24
 400ddb0:	dfc00515 	stw	ra,20(sp)
 400ddb4:	df000415 	stw	fp,16(sp)
 400ddb8:	df000404 	addi	fp,sp,16
 400ddbc:	e13ffd15 	stw	r4,-12(fp)
 400ddc0:	e17ffe15 	stw	r5,-8(fp)
 400ddc4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400ddc8:	e0bffd17 	ldw	r2,-12(fp)
 400ddcc:	10800017 	ldw	r2,0(r2)
 400ddd0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 400ddd4:	e0bffc17 	ldw	r2,-16(fp)
 400ddd8:	10c00a04 	addi	r3,r2,40
 400dddc:	e0bffd17 	ldw	r2,-12(fp)
 400dde0:	10800217 	ldw	r2,8(r2)
 400dde4:	100f883a 	mov	r7,r2
 400dde8:	e1bfff17 	ldw	r6,-4(fp)
 400ddec:	e17ffe17 	ldw	r5,-8(fp)
 400ddf0:	1809883a 	mov	r4,r3
 400ddf4:	400e5900 	call	400e590 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 400ddf8:	e037883a 	mov	sp,fp
 400ddfc:	dfc00117 	ldw	ra,4(sp)
 400de00:	df000017 	ldw	fp,0(sp)
 400de04:	dec00204 	addi	sp,sp,8
 400de08:	f800283a 	ret

0400de0c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 400de0c:	defffc04 	addi	sp,sp,-16
 400de10:	dfc00315 	stw	ra,12(sp)
 400de14:	df000215 	stw	fp,8(sp)
 400de18:	df000204 	addi	fp,sp,8
 400de1c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400de20:	e0bfff17 	ldw	r2,-4(fp)
 400de24:	10800017 	ldw	r2,0(r2)
 400de28:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 400de2c:	e0bffe17 	ldw	r2,-8(fp)
 400de30:	10c00a04 	addi	r3,r2,40
 400de34:	e0bfff17 	ldw	r2,-4(fp)
 400de38:	10800217 	ldw	r2,8(r2)
 400de3c:	100b883a 	mov	r5,r2
 400de40:	1809883a 	mov	r4,r3
 400de44:	400e21c0 	call	400e21c <altera_avalon_jtag_uart_close>
}
 400de48:	e037883a 	mov	sp,fp
 400de4c:	dfc00117 	ldw	ra,4(sp)
 400de50:	df000017 	ldw	fp,0(sp)
 400de54:	dec00204 	addi	sp,sp,8
 400de58:	f800283a 	ret

0400de5c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 400de5c:	defffa04 	addi	sp,sp,-24
 400de60:	dfc00515 	stw	ra,20(sp)
 400de64:	df000415 	stw	fp,16(sp)
 400de68:	df000404 	addi	fp,sp,16
 400de6c:	e13ffd15 	stw	r4,-12(fp)
 400de70:	e17ffe15 	stw	r5,-8(fp)
 400de74:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 400de78:	e0bffd17 	ldw	r2,-12(fp)
 400de7c:	10800017 	ldw	r2,0(r2)
 400de80:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 400de84:	e0bffc17 	ldw	r2,-16(fp)
 400de88:	10800a04 	addi	r2,r2,40
 400de8c:	e1bfff17 	ldw	r6,-4(fp)
 400de90:	e17ffe17 	ldw	r5,-8(fp)
 400de94:	1009883a 	mov	r4,r2
 400de98:	400e2840 	call	400e284 <altera_avalon_jtag_uart_ioctl>
}
 400de9c:	e037883a 	mov	sp,fp
 400dea0:	dfc00117 	ldw	ra,4(sp)
 400dea4:	df000017 	ldw	fp,0(sp)
 400dea8:	dec00204 	addi	sp,sp,8
 400deac:	f800283a 	ret

0400deb0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 400deb0:	defffa04 	addi	sp,sp,-24
 400deb4:	dfc00515 	stw	ra,20(sp)
 400deb8:	df000415 	stw	fp,16(sp)
 400debc:	df000404 	addi	fp,sp,16
 400dec0:	e13ffd15 	stw	r4,-12(fp)
 400dec4:	e17ffe15 	stw	r5,-8(fp)
 400dec8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400decc:	e0bffd17 	ldw	r2,-12(fp)
 400ded0:	00c00044 	movi	r3,1
 400ded4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 400ded8:	e0bffd17 	ldw	r2,-12(fp)
 400dedc:	10800017 	ldw	r2,0(r2)
 400dee0:	10800104 	addi	r2,r2,4
 400dee4:	1007883a 	mov	r3,r2
 400dee8:	e0bffd17 	ldw	r2,-12(fp)
 400deec:	10800817 	ldw	r2,32(r2)
 400def0:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 400def4:	e0bffe17 	ldw	r2,-8(fp)
 400def8:	e0ffff17 	ldw	r3,-4(fp)
 400defc:	d8000015 	stw	zero,0(sp)
 400df00:	e1fffd17 	ldw	r7,-12(fp)
 400df04:	01810074 	movhi	r6,1025
 400df08:	31b7dc04 	addi	r6,r6,-8336
 400df0c:	180b883a 	mov	r5,r3
 400df10:	1009883a 	mov	r4,r2
 400df14:	400eac00 	call	400eac0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 400df18:	e0bffd17 	ldw	r2,-12(fp)
 400df1c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 400df20:	e0bffd17 	ldw	r2,-12(fp)
 400df24:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 400df28:	d0e6d817 	ldw	r3,-25760(gp)
 400df2c:	e1fffd17 	ldw	r7,-12(fp)
 400df30:	01810074 	movhi	r6,1025
 400df34:	31b85f04 	addi	r6,r6,-7812
 400df38:	180b883a 	mov	r5,r3
 400df3c:	1009883a 	mov	r4,r2
 400df40:	400e7b40 	call	400e7b4 <alt_alarm_start>
 400df44:	1000040e 	bge	r2,zero,400df58 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 400df48:	e0fffd17 	ldw	r3,-12(fp)
 400df4c:	00a00034 	movhi	r2,32768
 400df50:	10bfffc4 	addi	r2,r2,-1
 400df54:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 400df58:	0001883a 	nop
 400df5c:	e037883a 	mov	sp,fp
 400df60:	dfc00117 	ldw	ra,4(sp)
 400df64:	df000017 	ldw	fp,0(sp)
 400df68:	dec00204 	addi	sp,sp,8
 400df6c:	f800283a 	ret

0400df70 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 400df70:	defff804 	addi	sp,sp,-32
 400df74:	df000715 	stw	fp,28(sp)
 400df78:	df000704 	addi	fp,sp,28
 400df7c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 400df80:	e0bfff17 	ldw	r2,-4(fp)
 400df84:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 400df88:	e0bffb17 	ldw	r2,-20(fp)
 400df8c:	10800017 	ldw	r2,0(r2)
 400df90:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400df94:	e0bffc17 	ldw	r2,-16(fp)
 400df98:	10800104 	addi	r2,r2,4
 400df9c:	10800037 	ldwio	r2,0(r2)
 400dfa0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 400dfa4:	e0bffd17 	ldw	r2,-12(fp)
 400dfa8:	1080c00c 	andi	r2,r2,768
 400dfac:	10006d26 	beq	r2,zero,400e164 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 400dfb0:	e0bffd17 	ldw	r2,-12(fp)
 400dfb4:	1080400c 	andi	r2,r2,256
 400dfb8:	10003526 	beq	r2,zero,400e090 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 400dfbc:	00800074 	movhi	r2,1
 400dfc0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400dfc4:	e0bffb17 	ldw	r2,-20(fp)
 400dfc8:	10800a17 	ldw	r2,40(r2)
 400dfcc:	10800044 	addi	r2,r2,1
 400dfd0:	1081ffcc 	andi	r2,r2,2047
 400dfd4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 400dfd8:	e0bffb17 	ldw	r2,-20(fp)
 400dfdc:	10c00b17 	ldw	r3,44(r2)
 400dfe0:	e0bffe17 	ldw	r2,-8(fp)
 400dfe4:	18801526 	beq	r3,r2,400e03c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 400dfe8:	e0bffc17 	ldw	r2,-16(fp)
 400dfec:	10800037 	ldwio	r2,0(r2)
 400dff0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 400dff4:	e0bff917 	ldw	r2,-28(fp)
 400dff8:	10a0000c 	andi	r2,r2,32768
 400dffc:	10001126 	beq	r2,zero,400e044 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 400e000:	e0bffb17 	ldw	r2,-20(fp)
 400e004:	10800a17 	ldw	r2,40(r2)
 400e008:	e0fff917 	ldw	r3,-28(fp)
 400e00c:	1809883a 	mov	r4,r3
 400e010:	e0fffb17 	ldw	r3,-20(fp)
 400e014:	1885883a 	add	r2,r3,r2
 400e018:	10800e04 	addi	r2,r2,56
 400e01c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400e020:	e0bffb17 	ldw	r2,-20(fp)
 400e024:	10800a17 	ldw	r2,40(r2)
 400e028:	10800044 	addi	r2,r2,1
 400e02c:	10c1ffcc 	andi	r3,r2,2047
 400e030:	e0bffb17 	ldw	r2,-20(fp)
 400e034:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 400e038:	003fe206 	br	400dfc4 <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 400e03c:	0001883a 	nop
 400e040:	00000106 	br	400e048 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 400e044:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 400e048:	e0bff917 	ldw	r2,-28(fp)
 400e04c:	10bfffec 	andhi	r2,r2,65535
 400e050:	10000f26 	beq	r2,zero,400e090 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400e054:	e0bffb17 	ldw	r2,-20(fp)
 400e058:	10c00817 	ldw	r3,32(r2)
 400e05c:	00bfff84 	movi	r2,-2
 400e060:	1886703a 	and	r3,r3,r2
 400e064:	e0bffb17 	ldw	r2,-20(fp)
 400e068:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 400e06c:	e0bffc17 	ldw	r2,-16(fp)
 400e070:	10800104 	addi	r2,r2,4
 400e074:	1007883a 	mov	r3,r2
 400e078:	e0bffb17 	ldw	r2,-20(fp)
 400e07c:	10800817 	ldw	r2,32(r2)
 400e080:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400e084:	e0bffc17 	ldw	r2,-16(fp)
 400e088:	10800104 	addi	r2,r2,4
 400e08c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 400e090:	e0bffd17 	ldw	r2,-12(fp)
 400e094:	1080800c 	andi	r2,r2,512
 400e098:	103fbe26 	beq	r2,zero,400df94 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 400e09c:	e0bffd17 	ldw	r2,-12(fp)
 400e0a0:	1004d43a 	srli	r2,r2,16
 400e0a4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 400e0a8:	00001406 	br	400e0fc <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 400e0ac:	e0bffc17 	ldw	r2,-16(fp)
 400e0b0:	e0fffb17 	ldw	r3,-20(fp)
 400e0b4:	18c00d17 	ldw	r3,52(r3)
 400e0b8:	e13ffb17 	ldw	r4,-20(fp)
 400e0bc:	20c7883a 	add	r3,r4,r3
 400e0c0:	18c20e04 	addi	r3,r3,2104
 400e0c4:	18c00003 	ldbu	r3,0(r3)
 400e0c8:	18c03fcc 	andi	r3,r3,255
 400e0cc:	18c0201c 	xori	r3,r3,128
 400e0d0:	18ffe004 	addi	r3,r3,-128
 400e0d4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400e0d8:	e0bffb17 	ldw	r2,-20(fp)
 400e0dc:	10800d17 	ldw	r2,52(r2)
 400e0e0:	10800044 	addi	r2,r2,1
 400e0e4:	10c1ffcc 	andi	r3,r2,2047
 400e0e8:	e0bffb17 	ldw	r2,-20(fp)
 400e0ec:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 400e0f0:	e0bffa17 	ldw	r2,-24(fp)
 400e0f4:	10bfffc4 	addi	r2,r2,-1
 400e0f8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 400e0fc:	e0bffa17 	ldw	r2,-24(fp)
 400e100:	10000526 	beq	r2,zero,400e118 <altera_avalon_jtag_uart_irq+0x1a8>
 400e104:	e0bffb17 	ldw	r2,-20(fp)
 400e108:	10c00d17 	ldw	r3,52(r2)
 400e10c:	e0bffb17 	ldw	r2,-20(fp)
 400e110:	10800c17 	ldw	r2,48(r2)
 400e114:	18bfe51e 	bne	r3,r2,400e0ac <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 400e118:	e0bffa17 	ldw	r2,-24(fp)
 400e11c:	103f9d26 	beq	r2,zero,400df94 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400e120:	e0bffb17 	ldw	r2,-20(fp)
 400e124:	10c00817 	ldw	r3,32(r2)
 400e128:	00bfff44 	movi	r2,-3
 400e12c:	1886703a 	and	r3,r3,r2
 400e130:	e0bffb17 	ldw	r2,-20(fp)
 400e134:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400e138:	e0bffb17 	ldw	r2,-20(fp)
 400e13c:	10800017 	ldw	r2,0(r2)
 400e140:	10800104 	addi	r2,r2,4
 400e144:	1007883a 	mov	r3,r2
 400e148:	e0bffb17 	ldw	r2,-20(fp)
 400e14c:	10800817 	ldw	r2,32(r2)
 400e150:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400e154:	e0bffc17 	ldw	r2,-16(fp)
 400e158:	10800104 	addi	r2,r2,4
 400e15c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 400e160:	003f8c06 	br	400df94 <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 400e164:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 400e168:	0001883a 	nop
 400e16c:	e037883a 	mov	sp,fp
 400e170:	df000017 	ldw	fp,0(sp)
 400e174:	dec00104 	addi	sp,sp,4
 400e178:	f800283a 	ret

0400e17c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 400e17c:	defff804 	addi	sp,sp,-32
 400e180:	df000715 	stw	fp,28(sp)
 400e184:	df000704 	addi	fp,sp,28
 400e188:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 400e18c:	e0bffb17 	ldw	r2,-20(fp)
 400e190:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 400e194:	e0bff917 	ldw	r2,-28(fp)
 400e198:	10800017 	ldw	r2,0(r2)
 400e19c:	10800104 	addi	r2,r2,4
 400e1a0:	10800037 	ldwio	r2,0(r2)
 400e1a4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 400e1a8:	e0bffa17 	ldw	r2,-24(fp)
 400e1ac:	1081000c 	andi	r2,r2,1024
 400e1b0:	10000b26 	beq	r2,zero,400e1e0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 400e1b4:	e0bff917 	ldw	r2,-28(fp)
 400e1b8:	10800017 	ldw	r2,0(r2)
 400e1bc:	10800104 	addi	r2,r2,4
 400e1c0:	1007883a 	mov	r3,r2
 400e1c4:	e0bff917 	ldw	r2,-28(fp)
 400e1c8:	10800817 	ldw	r2,32(r2)
 400e1cc:	10810014 	ori	r2,r2,1024
 400e1d0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 400e1d4:	e0bff917 	ldw	r2,-28(fp)
 400e1d8:	10000915 	stw	zero,36(r2)
 400e1dc:	00000a06 	br	400e208 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 400e1e0:	e0bff917 	ldw	r2,-28(fp)
 400e1e4:	10c00917 	ldw	r3,36(r2)
 400e1e8:	00a00034 	movhi	r2,32768
 400e1ec:	10bfff04 	addi	r2,r2,-4
 400e1f0:	10c00536 	bltu	r2,r3,400e208 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 400e1f4:	e0bff917 	ldw	r2,-28(fp)
 400e1f8:	10800917 	ldw	r2,36(r2)
 400e1fc:	10c00044 	addi	r3,r2,1
 400e200:	e0bff917 	ldw	r2,-28(fp)
 400e204:	10c00915 	stw	r3,36(r2)
 400e208:	d0a6d817 	ldw	r2,-25760(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 400e20c:	e037883a 	mov	sp,fp
 400e210:	df000017 	ldw	fp,0(sp)
 400e214:	dec00104 	addi	sp,sp,4
 400e218:	f800283a 	ret

0400e21c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 400e21c:	defffd04 	addi	sp,sp,-12
 400e220:	df000215 	stw	fp,8(sp)
 400e224:	df000204 	addi	fp,sp,8
 400e228:	e13ffe15 	stw	r4,-8(fp)
 400e22c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400e230:	00000506 	br	400e248 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 400e234:	e0bfff17 	ldw	r2,-4(fp)
 400e238:	1090000c 	andi	r2,r2,16384
 400e23c:	10000226 	beq	r2,zero,400e248 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 400e240:	00bffd44 	movi	r2,-11
 400e244:	00000b06 	br	400e274 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400e248:	e0bffe17 	ldw	r2,-8(fp)
 400e24c:	10c00d17 	ldw	r3,52(r2)
 400e250:	e0bffe17 	ldw	r2,-8(fp)
 400e254:	10800c17 	ldw	r2,48(r2)
 400e258:	18800526 	beq	r3,r2,400e270 <altera_avalon_jtag_uart_close+0x54>
 400e25c:	e0bffe17 	ldw	r2,-8(fp)
 400e260:	10c00917 	ldw	r3,36(r2)
 400e264:	e0bffe17 	ldw	r2,-8(fp)
 400e268:	10800117 	ldw	r2,4(r2)
 400e26c:	18bff136 	bltu	r3,r2,400e234 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 400e270:	0005883a 	mov	r2,zero
}
 400e274:	e037883a 	mov	sp,fp
 400e278:	df000017 	ldw	fp,0(sp)
 400e27c:	dec00104 	addi	sp,sp,4
 400e280:	f800283a 	ret

0400e284 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 400e284:	defffa04 	addi	sp,sp,-24
 400e288:	df000515 	stw	fp,20(sp)
 400e28c:	df000504 	addi	fp,sp,20
 400e290:	e13ffd15 	stw	r4,-12(fp)
 400e294:	e17ffe15 	stw	r5,-8(fp)
 400e298:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 400e29c:	00bff9c4 	movi	r2,-25
 400e2a0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 400e2a4:	e0bffe17 	ldw	r2,-8(fp)
 400e2a8:	10da8060 	cmpeqi	r3,r2,27137
 400e2ac:	1800031e 	bne	r3,zero,400e2bc <altera_avalon_jtag_uart_ioctl+0x38>
 400e2b0:	109a80a0 	cmpeqi	r2,r2,27138
 400e2b4:	1000181e 	bne	r2,zero,400e318 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 400e2b8:	00002906 	br	400e360 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 400e2bc:	e0bffd17 	ldw	r2,-12(fp)
 400e2c0:	10c00117 	ldw	r3,4(r2)
 400e2c4:	00a00034 	movhi	r2,32768
 400e2c8:	10bfffc4 	addi	r2,r2,-1
 400e2cc:	18802126 	beq	r3,r2,400e354 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 400e2d0:	e0bfff17 	ldw	r2,-4(fp)
 400e2d4:	10800017 	ldw	r2,0(r2)
 400e2d8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 400e2dc:	e0bffc17 	ldw	r2,-16(fp)
 400e2e0:	10800090 	cmplti	r2,r2,2
 400e2e4:	1000061e 	bne	r2,zero,400e300 <altera_avalon_jtag_uart_ioctl+0x7c>
 400e2e8:	e0fffc17 	ldw	r3,-16(fp)
 400e2ec:	00a00034 	movhi	r2,32768
 400e2f0:	10bfffc4 	addi	r2,r2,-1
 400e2f4:	18800226 	beq	r3,r2,400e300 <altera_avalon_jtag_uart_ioctl+0x7c>
 400e2f8:	e0bffc17 	ldw	r2,-16(fp)
 400e2fc:	00000206 	br	400e308 <altera_avalon_jtag_uart_ioctl+0x84>
 400e300:	00a00034 	movhi	r2,32768
 400e304:	10bfff84 	addi	r2,r2,-2
 400e308:	e0fffd17 	ldw	r3,-12(fp)
 400e30c:	18800115 	stw	r2,4(r3)
      rc = 0;
 400e310:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400e314:	00000f06 	br	400e354 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 400e318:	e0bffd17 	ldw	r2,-12(fp)
 400e31c:	10c00117 	ldw	r3,4(r2)
 400e320:	00a00034 	movhi	r2,32768
 400e324:	10bfffc4 	addi	r2,r2,-1
 400e328:	18800c26 	beq	r3,r2,400e35c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 400e32c:	e0bffd17 	ldw	r2,-12(fp)
 400e330:	10c00917 	ldw	r3,36(r2)
 400e334:	e0bffd17 	ldw	r2,-12(fp)
 400e338:	10800117 	ldw	r2,4(r2)
 400e33c:	1885803a 	cmpltu	r2,r3,r2
 400e340:	10c03fcc 	andi	r3,r2,255
 400e344:	e0bfff17 	ldw	r2,-4(fp)
 400e348:	10c00015 	stw	r3,0(r2)
      rc = 0;
 400e34c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400e350:	00000206 	br	400e35c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 400e354:	0001883a 	nop
 400e358:	00000106 	br	400e360 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 400e35c:	0001883a 	nop

  default:
    break;
  }

  return rc;
 400e360:	e0bffb17 	ldw	r2,-20(fp)
}
 400e364:	e037883a 	mov	sp,fp
 400e368:	df000017 	ldw	fp,0(sp)
 400e36c:	dec00104 	addi	sp,sp,4
 400e370:	f800283a 	ret

0400e374 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 400e374:	defff304 	addi	sp,sp,-52
 400e378:	dfc00c15 	stw	ra,48(sp)
 400e37c:	df000b15 	stw	fp,44(sp)
 400e380:	df000b04 	addi	fp,sp,44
 400e384:	e13ffc15 	stw	r4,-16(fp)
 400e388:	e17ffd15 	stw	r5,-12(fp)
 400e38c:	e1bffe15 	stw	r6,-8(fp)
 400e390:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 400e394:	e0bffd17 	ldw	r2,-12(fp)
 400e398:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400e39c:	00004706 	br	400e4bc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 400e3a0:	e0bffc17 	ldw	r2,-16(fp)
 400e3a4:	10800a17 	ldw	r2,40(r2)
 400e3a8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 400e3ac:	e0bffc17 	ldw	r2,-16(fp)
 400e3b0:	10800b17 	ldw	r2,44(r2)
 400e3b4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 400e3b8:	e0fff717 	ldw	r3,-36(fp)
 400e3bc:	e0bff817 	ldw	r2,-32(fp)
 400e3c0:	18800536 	bltu	r3,r2,400e3d8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 400e3c4:	e0fff717 	ldw	r3,-36(fp)
 400e3c8:	e0bff817 	ldw	r2,-32(fp)
 400e3cc:	1885c83a 	sub	r2,r3,r2
 400e3d0:	e0bff615 	stw	r2,-40(fp)
 400e3d4:	00000406 	br	400e3e8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 400e3d8:	00c20004 	movi	r3,2048
 400e3dc:	e0bff817 	ldw	r2,-32(fp)
 400e3e0:	1885c83a 	sub	r2,r3,r2
 400e3e4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400e3e8:	e0bff617 	ldw	r2,-40(fp)
 400e3ec:	10001e26 	beq	r2,zero,400e468 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 400e3f0:	e0fffe17 	ldw	r3,-8(fp)
 400e3f4:	e0bff617 	ldw	r2,-40(fp)
 400e3f8:	1880022e 	bgeu	r3,r2,400e404 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 400e3fc:	e0bffe17 	ldw	r2,-8(fp)
 400e400:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 400e404:	e0bffc17 	ldw	r2,-16(fp)
 400e408:	10c00e04 	addi	r3,r2,56
 400e40c:	e0bff817 	ldw	r2,-32(fp)
 400e410:	1885883a 	add	r2,r3,r2
 400e414:	e1bff617 	ldw	r6,-40(fp)
 400e418:	100b883a 	mov	r5,r2
 400e41c:	e13ff517 	ldw	r4,-44(fp)
 400e420:	4005f780 	call	4005f78 <memcpy>
      ptr   += n;
 400e424:	e0fff517 	ldw	r3,-44(fp)
 400e428:	e0bff617 	ldw	r2,-40(fp)
 400e42c:	1885883a 	add	r2,r3,r2
 400e430:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 400e434:	e0fffe17 	ldw	r3,-8(fp)
 400e438:	e0bff617 	ldw	r2,-40(fp)
 400e43c:	1885c83a 	sub	r2,r3,r2
 400e440:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400e444:	e0fff817 	ldw	r3,-32(fp)
 400e448:	e0bff617 	ldw	r2,-40(fp)
 400e44c:	1885883a 	add	r2,r3,r2
 400e450:	10c1ffcc 	andi	r3,r2,2047
 400e454:	e0bffc17 	ldw	r2,-16(fp)
 400e458:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 400e45c:	e0bffe17 	ldw	r2,-8(fp)
 400e460:	00bfcf16 	blt	zero,r2,400e3a0 <altera_avalon_jtag_uart_read+0x2c>
 400e464:	00000106 	br	400e46c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 400e468:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 400e46c:	e0fff517 	ldw	r3,-44(fp)
 400e470:	e0bffd17 	ldw	r2,-12(fp)
 400e474:	1880141e 	bne	r3,r2,400e4c8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 400e478:	e0bfff17 	ldw	r2,-4(fp)
 400e47c:	1090000c 	andi	r2,r2,16384
 400e480:	1000131e 	bne	r2,zero,400e4d0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 400e484:	0001883a 	nop
 400e488:	e0bffc17 	ldw	r2,-16(fp)
 400e48c:	10c00a17 	ldw	r3,40(r2)
 400e490:	e0bff717 	ldw	r2,-36(fp)
 400e494:	1880051e 	bne	r3,r2,400e4ac <altera_avalon_jtag_uart_read+0x138>
 400e498:	e0bffc17 	ldw	r2,-16(fp)
 400e49c:	10c00917 	ldw	r3,36(r2)
 400e4a0:	e0bffc17 	ldw	r2,-16(fp)
 400e4a4:	10800117 	ldw	r2,4(r2)
 400e4a8:	18bff736 	bltu	r3,r2,400e488 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 400e4ac:	e0bffc17 	ldw	r2,-16(fp)
 400e4b0:	10c00a17 	ldw	r3,40(r2)
 400e4b4:	e0bff717 	ldw	r2,-36(fp)
 400e4b8:	18800726 	beq	r3,r2,400e4d8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400e4bc:	e0bffe17 	ldw	r2,-8(fp)
 400e4c0:	00bfb716 	blt	zero,r2,400e3a0 <altera_avalon_jtag_uart_read+0x2c>
 400e4c4:	00000506 	br	400e4dc <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 400e4c8:	0001883a 	nop
 400e4cc:	00000306 	br	400e4dc <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 400e4d0:	0001883a 	nop
 400e4d4:	00000106 	br	400e4dc <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 400e4d8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 400e4dc:	e0fff517 	ldw	r3,-44(fp)
 400e4e0:	e0bffd17 	ldw	r2,-12(fp)
 400e4e4:	18801826 	beq	r3,r2,400e548 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400e4e8:	0005303a 	rdctl	r2,status
 400e4ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e4f0:	e0fffb17 	ldw	r3,-20(fp)
 400e4f4:	00bfff84 	movi	r2,-2
 400e4f8:	1884703a 	and	r2,r3,r2
 400e4fc:	1001703a 	wrctl	status,r2
  
  return context;
 400e500:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 400e504:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400e508:	e0bffc17 	ldw	r2,-16(fp)
 400e50c:	10800817 	ldw	r2,32(r2)
 400e510:	10c00054 	ori	r3,r2,1
 400e514:	e0bffc17 	ldw	r2,-16(fp)
 400e518:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400e51c:	e0bffc17 	ldw	r2,-16(fp)
 400e520:	10800017 	ldw	r2,0(r2)
 400e524:	10800104 	addi	r2,r2,4
 400e528:	1007883a 	mov	r3,r2
 400e52c:	e0bffc17 	ldw	r2,-16(fp)
 400e530:	10800817 	ldw	r2,32(r2)
 400e534:	18800035 	stwio	r2,0(r3)
 400e538:	e0bffa17 	ldw	r2,-24(fp)
 400e53c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400e540:	e0bff917 	ldw	r2,-28(fp)
 400e544:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 400e548:	e0fff517 	ldw	r3,-44(fp)
 400e54c:	e0bffd17 	ldw	r2,-12(fp)
 400e550:	18800426 	beq	r3,r2,400e564 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 400e554:	e0fff517 	ldw	r3,-44(fp)
 400e558:	e0bffd17 	ldw	r2,-12(fp)
 400e55c:	1885c83a 	sub	r2,r3,r2
 400e560:	00000606 	br	400e57c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 400e564:	e0bfff17 	ldw	r2,-4(fp)
 400e568:	1090000c 	andi	r2,r2,16384
 400e56c:	10000226 	beq	r2,zero,400e578 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 400e570:	00bffd44 	movi	r2,-11
 400e574:	00000106 	br	400e57c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 400e578:	00bffec4 	movi	r2,-5
}
 400e57c:	e037883a 	mov	sp,fp
 400e580:	dfc00117 	ldw	ra,4(sp)
 400e584:	df000017 	ldw	fp,0(sp)
 400e588:	dec00204 	addi	sp,sp,8
 400e58c:	f800283a 	ret

0400e590 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 400e590:	defff304 	addi	sp,sp,-52
 400e594:	dfc00c15 	stw	ra,48(sp)
 400e598:	df000b15 	stw	fp,44(sp)
 400e59c:	df000b04 	addi	fp,sp,44
 400e5a0:	e13ffc15 	stw	r4,-16(fp)
 400e5a4:	e17ffd15 	stw	r5,-12(fp)
 400e5a8:	e1bffe15 	stw	r6,-8(fp)
 400e5ac:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 400e5b0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 400e5b4:	e0bffd17 	ldw	r2,-12(fp)
 400e5b8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400e5bc:	00003706 	br	400e69c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 400e5c0:	e0bffc17 	ldw	r2,-16(fp)
 400e5c4:	10800c17 	ldw	r2,48(r2)
 400e5c8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 400e5cc:	e0bffc17 	ldw	r2,-16(fp)
 400e5d0:	10800d17 	ldw	r2,52(r2)
 400e5d4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 400e5d8:	e0fff917 	ldw	r3,-28(fp)
 400e5dc:	e0bff517 	ldw	r2,-44(fp)
 400e5e0:	1880062e 	bgeu	r3,r2,400e5fc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 400e5e4:	e0fff517 	ldw	r3,-44(fp)
 400e5e8:	e0bff917 	ldw	r2,-28(fp)
 400e5ec:	1885c83a 	sub	r2,r3,r2
 400e5f0:	10bfffc4 	addi	r2,r2,-1
 400e5f4:	e0bff615 	stw	r2,-40(fp)
 400e5f8:	00000b06 	br	400e628 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 400e5fc:	e0bff517 	ldw	r2,-44(fp)
 400e600:	10000526 	beq	r2,zero,400e618 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 400e604:	00c20004 	movi	r3,2048
 400e608:	e0bff917 	ldw	r2,-28(fp)
 400e60c:	1885c83a 	sub	r2,r3,r2
 400e610:	e0bff615 	stw	r2,-40(fp)
 400e614:	00000406 	br	400e628 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 400e618:	00c1ffc4 	movi	r3,2047
 400e61c:	e0bff917 	ldw	r2,-28(fp)
 400e620:	1885c83a 	sub	r2,r3,r2
 400e624:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400e628:	e0bff617 	ldw	r2,-40(fp)
 400e62c:	10001e26 	beq	r2,zero,400e6a8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 400e630:	e0fffe17 	ldw	r3,-8(fp)
 400e634:	e0bff617 	ldw	r2,-40(fp)
 400e638:	1880022e 	bgeu	r3,r2,400e644 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 400e63c:	e0bffe17 	ldw	r2,-8(fp)
 400e640:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 400e644:	e0bffc17 	ldw	r2,-16(fp)
 400e648:	10c20e04 	addi	r3,r2,2104
 400e64c:	e0bff917 	ldw	r2,-28(fp)
 400e650:	1885883a 	add	r2,r3,r2
 400e654:	e1bff617 	ldw	r6,-40(fp)
 400e658:	e17ffd17 	ldw	r5,-12(fp)
 400e65c:	1009883a 	mov	r4,r2
 400e660:	4005f780 	call	4005f78 <memcpy>
      ptr   += n;
 400e664:	e0fffd17 	ldw	r3,-12(fp)
 400e668:	e0bff617 	ldw	r2,-40(fp)
 400e66c:	1885883a 	add	r2,r3,r2
 400e670:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 400e674:	e0fffe17 	ldw	r3,-8(fp)
 400e678:	e0bff617 	ldw	r2,-40(fp)
 400e67c:	1885c83a 	sub	r2,r3,r2
 400e680:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400e684:	e0fff917 	ldw	r3,-28(fp)
 400e688:	e0bff617 	ldw	r2,-40(fp)
 400e68c:	1885883a 	add	r2,r3,r2
 400e690:	10c1ffcc 	andi	r3,r2,2047
 400e694:	e0bffc17 	ldw	r2,-16(fp)
 400e698:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400e69c:	e0bffe17 	ldw	r2,-8(fp)
 400e6a0:	00bfc716 	blt	zero,r2,400e5c0 <altera_avalon_jtag_uart_write+0x30>
 400e6a4:	00000106 	br	400e6ac <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 400e6a8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400e6ac:	0005303a 	rdctl	r2,status
 400e6b0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e6b4:	e0fffb17 	ldw	r3,-20(fp)
 400e6b8:	00bfff84 	movi	r2,-2
 400e6bc:	1884703a 	and	r2,r3,r2
 400e6c0:	1001703a 	wrctl	status,r2
  
  return context;
 400e6c4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 400e6c8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400e6cc:	e0bffc17 	ldw	r2,-16(fp)
 400e6d0:	10800817 	ldw	r2,32(r2)
 400e6d4:	10c00094 	ori	r3,r2,2
 400e6d8:	e0bffc17 	ldw	r2,-16(fp)
 400e6dc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400e6e0:	e0bffc17 	ldw	r2,-16(fp)
 400e6e4:	10800017 	ldw	r2,0(r2)
 400e6e8:	10800104 	addi	r2,r2,4
 400e6ec:	1007883a 	mov	r3,r2
 400e6f0:	e0bffc17 	ldw	r2,-16(fp)
 400e6f4:	10800817 	ldw	r2,32(r2)
 400e6f8:	18800035 	stwio	r2,0(r3)
 400e6fc:	e0bffa17 	ldw	r2,-24(fp)
 400e700:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400e704:	e0bff817 	ldw	r2,-32(fp)
 400e708:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 400e70c:	e0bffe17 	ldw	r2,-8(fp)
 400e710:	0080100e 	bge	zero,r2,400e754 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 400e714:	e0bfff17 	ldw	r2,-4(fp)
 400e718:	1090000c 	andi	r2,r2,16384
 400e71c:	1000101e 	bne	r2,zero,400e760 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 400e720:	0001883a 	nop
 400e724:	e0bffc17 	ldw	r2,-16(fp)
 400e728:	10c00d17 	ldw	r3,52(r2)
 400e72c:	e0bff517 	ldw	r2,-44(fp)
 400e730:	1880051e 	bne	r3,r2,400e748 <altera_avalon_jtag_uart_write+0x1b8>
 400e734:	e0bffc17 	ldw	r2,-16(fp)
 400e738:	10c00917 	ldw	r3,36(r2)
 400e73c:	e0bffc17 	ldw	r2,-16(fp)
 400e740:	10800117 	ldw	r2,4(r2)
 400e744:	18bff736 	bltu	r3,r2,400e724 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 400e748:	e0bffc17 	ldw	r2,-16(fp)
 400e74c:	10800917 	ldw	r2,36(r2)
 400e750:	1000051e 	bne	r2,zero,400e768 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 400e754:	e0bffe17 	ldw	r2,-8(fp)
 400e758:	00bfd016 	blt	zero,r2,400e69c <altera_avalon_jtag_uart_write+0x10c>
 400e75c:	00000306 	br	400e76c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 400e760:	0001883a 	nop
 400e764:	00000106 	br	400e76c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 400e768:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 400e76c:	e0fffd17 	ldw	r3,-12(fp)
 400e770:	e0bff717 	ldw	r2,-36(fp)
 400e774:	18800426 	beq	r3,r2,400e788 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 400e778:	e0fffd17 	ldw	r3,-12(fp)
 400e77c:	e0bff717 	ldw	r2,-36(fp)
 400e780:	1885c83a 	sub	r2,r3,r2
 400e784:	00000606 	br	400e7a0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 400e788:	e0bfff17 	ldw	r2,-4(fp)
 400e78c:	1090000c 	andi	r2,r2,16384
 400e790:	10000226 	beq	r2,zero,400e79c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 400e794:	00bffd44 	movi	r2,-11
 400e798:	00000106 	br	400e7a0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 400e79c:	00bffec4 	movi	r2,-5
}
 400e7a0:	e037883a 	mov	sp,fp
 400e7a4:	dfc00117 	ldw	ra,4(sp)
 400e7a8:	df000017 	ldw	fp,0(sp)
 400e7ac:	dec00204 	addi	sp,sp,8
 400e7b0:	f800283a 	ret

0400e7b4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 400e7b4:	defff504 	addi	sp,sp,-44
 400e7b8:	df000a15 	stw	fp,40(sp)
 400e7bc:	df000a04 	addi	fp,sp,40
 400e7c0:	e13ffc15 	stw	r4,-16(fp)
 400e7c4:	e17ffd15 	stw	r5,-12(fp)
 400e7c8:	e1bffe15 	stw	r6,-8(fp)
 400e7cc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 400e7d0:	e03ff615 	stw	zero,-40(fp)
 400e7d4:	d0a6d817 	ldw	r2,-25760(gp)
  
  if (alt_ticks_per_second ())
 400e7d8:	10003c26 	beq	r2,zero,400e8cc <alt_alarm_start+0x118>
  {
    if (alarm)
 400e7dc:	e0bffc17 	ldw	r2,-16(fp)
 400e7e0:	10003826 	beq	r2,zero,400e8c4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 400e7e4:	e0bffc17 	ldw	r2,-16(fp)
 400e7e8:	e0fffe17 	ldw	r3,-8(fp)
 400e7ec:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 400e7f0:	e0bffc17 	ldw	r2,-16(fp)
 400e7f4:	e0ffff17 	ldw	r3,-4(fp)
 400e7f8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400e7fc:	0005303a 	rdctl	r2,status
 400e800:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e804:	e0fff917 	ldw	r3,-28(fp)
 400e808:	00bfff84 	movi	r2,-2
 400e80c:	1884703a 	and	r2,r3,r2
 400e810:	1001703a 	wrctl	status,r2
  
  return context;
 400e814:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 400e818:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 400e81c:	d0a6d917 	ldw	r2,-25756(gp)
      
      current_nticks = alt_nticks();
 400e820:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 400e824:	e0fffd17 	ldw	r3,-12(fp)
 400e828:	e0bff617 	ldw	r2,-40(fp)
 400e82c:	1885883a 	add	r2,r3,r2
 400e830:	10c00044 	addi	r3,r2,1
 400e834:	e0bffc17 	ldw	r2,-16(fp)
 400e838:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 400e83c:	e0bffc17 	ldw	r2,-16(fp)
 400e840:	10c00217 	ldw	r3,8(r2)
 400e844:	e0bff617 	ldw	r2,-40(fp)
 400e848:	1880042e 	bgeu	r3,r2,400e85c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 400e84c:	e0bffc17 	ldw	r2,-16(fp)
 400e850:	00c00044 	movi	r3,1
 400e854:	10c00405 	stb	r3,16(r2)
 400e858:	00000206 	br	400e864 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 400e85c:	e0bffc17 	ldw	r2,-16(fp)
 400e860:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 400e864:	e0bffc17 	ldw	r2,-16(fp)
 400e868:	d0e00f04 	addi	r3,gp,-32708
 400e86c:	e0fffa15 	stw	r3,-24(fp)
 400e870:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400e874:	e0bffb17 	ldw	r2,-20(fp)
 400e878:	e0fffa17 	ldw	r3,-24(fp)
 400e87c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400e880:	e0bffa17 	ldw	r2,-24(fp)
 400e884:	10c00017 	ldw	r3,0(r2)
 400e888:	e0bffb17 	ldw	r2,-20(fp)
 400e88c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400e890:	e0bffa17 	ldw	r2,-24(fp)
 400e894:	10800017 	ldw	r2,0(r2)
 400e898:	e0fffb17 	ldw	r3,-20(fp)
 400e89c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400e8a0:	e0bffa17 	ldw	r2,-24(fp)
 400e8a4:	e0fffb17 	ldw	r3,-20(fp)
 400e8a8:	10c00015 	stw	r3,0(r2)
 400e8ac:	e0bff817 	ldw	r2,-32(fp)
 400e8b0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400e8b4:	e0bff717 	ldw	r2,-36(fp)
 400e8b8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 400e8bc:	0005883a 	mov	r2,zero
 400e8c0:	00000306 	br	400e8d0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 400e8c4:	00bffa84 	movi	r2,-22
 400e8c8:	00000106 	br	400e8d0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 400e8cc:	00bfde84 	movi	r2,-134
  }
}
 400e8d0:	e037883a 	mov	sp,fp
 400e8d4:	df000017 	ldw	fp,0(sp)
 400e8d8:	dec00104 	addi	sp,sp,4
 400e8dc:	f800283a 	ret

0400e8e0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 400e8e0:	deffff04 	addi	sp,sp,-4
 400e8e4:	df000015 	stw	fp,0(sp)
 400e8e8:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 400e8ec:	0001883a 	nop
 400e8f0:	e037883a 	mov	sp,fp
 400e8f4:	df000017 	ldw	fp,0(sp)
 400e8f8:	dec00104 	addi	sp,sp,4
 400e8fc:	f800283a 	ret

0400e900 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e900:	defffe04 	addi	sp,sp,-8
 400e904:	dfc00115 	stw	ra,4(sp)
 400e908:	df000015 	stw	fp,0(sp)
 400e90c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e910:	d0a00c17 	ldw	r2,-32720(gp)
 400e914:	10000326 	beq	r2,zero,400e924 <alt_get_errno+0x24>
 400e918:	d0a00c17 	ldw	r2,-32720(gp)
 400e91c:	103ee83a 	callr	r2
 400e920:	00000106 	br	400e928 <alt_get_errno+0x28>
 400e924:	d0a6d304 	addi	r2,gp,-25780
}
 400e928:	e037883a 	mov	sp,fp
 400e92c:	dfc00117 	ldw	ra,4(sp)
 400e930:	df000017 	ldw	fp,0(sp)
 400e934:	dec00204 	addi	sp,sp,8
 400e938:	f800283a 	ret

0400e93c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 400e93c:	defffa04 	addi	sp,sp,-24
 400e940:	dfc00515 	stw	ra,20(sp)
 400e944:	df000415 	stw	fp,16(sp)
 400e948:	df000404 	addi	fp,sp,16
 400e94c:	e13ffe15 	stw	r4,-8(fp)
 400e950:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 400e954:	e0bffe17 	ldw	r2,-8(fp)
 400e958:	10000326 	beq	r2,zero,400e968 <alt_dev_llist_insert+0x2c>
 400e95c:	e0bffe17 	ldw	r2,-8(fp)
 400e960:	10800217 	ldw	r2,8(r2)
 400e964:	1000061e 	bne	r2,zero,400e980 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 400e968:	400e9000 	call	400e900 <alt_get_errno>
 400e96c:	1007883a 	mov	r3,r2
 400e970:	00800584 	movi	r2,22
 400e974:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 400e978:	00bffa84 	movi	r2,-22
 400e97c:	00001306 	br	400e9cc <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 400e980:	e0bffe17 	ldw	r2,-8(fp)
 400e984:	e0ffff17 	ldw	r3,-4(fp)
 400e988:	e0fffc15 	stw	r3,-16(fp)
 400e98c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400e990:	e0bffd17 	ldw	r2,-12(fp)
 400e994:	e0fffc17 	ldw	r3,-16(fp)
 400e998:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400e99c:	e0bffc17 	ldw	r2,-16(fp)
 400e9a0:	10c00017 	ldw	r3,0(r2)
 400e9a4:	e0bffd17 	ldw	r2,-12(fp)
 400e9a8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400e9ac:	e0bffc17 	ldw	r2,-16(fp)
 400e9b0:	10800017 	ldw	r2,0(r2)
 400e9b4:	e0fffd17 	ldw	r3,-12(fp)
 400e9b8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400e9bc:	e0bffc17 	ldw	r2,-16(fp)
 400e9c0:	e0fffd17 	ldw	r3,-12(fp)
 400e9c4:	10c00015 	stw	r3,0(r2)

  return 0;  
 400e9c8:	0005883a 	mov	r2,zero
}
 400e9cc:	e037883a 	mov	sp,fp
 400e9d0:	dfc00117 	ldw	ra,4(sp)
 400e9d4:	df000017 	ldw	fp,0(sp)
 400e9d8:	dec00204 	addi	sp,sp,8
 400e9dc:	f800283a 	ret

0400e9e0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 400e9e0:	defffd04 	addi	sp,sp,-12
 400e9e4:	dfc00215 	stw	ra,8(sp)
 400e9e8:	df000115 	stw	fp,4(sp)
 400e9ec:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400e9f0:	00810074 	movhi	r2,1025
 400e9f4:	10be9204 	addi	r2,r2,-1464
 400e9f8:	e0bfff15 	stw	r2,-4(fp)
 400e9fc:	00000606 	br	400ea18 <_do_ctors+0x38>
        (*ctor) (); 
 400ea00:	e0bfff17 	ldw	r2,-4(fp)
 400ea04:	10800017 	ldw	r2,0(r2)
 400ea08:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400ea0c:	e0bfff17 	ldw	r2,-4(fp)
 400ea10:	10bfff04 	addi	r2,r2,-4
 400ea14:	e0bfff15 	stw	r2,-4(fp)
 400ea18:	e0ffff17 	ldw	r3,-4(fp)
 400ea1c:	00810074 	movhi	r2,1025
 400ea20:	10be9304 	addi	r2,r2,-1460
 400ea24:	18bff62e 	bgeu	r3,r2,400ea00 <_do_ctors+0x20>
        (*ctor) (); 
}
 400ea28:	0001883a 	nop
 400ea2c:	e037883a 	mov	sp,fp
 400ea30:	dfc00117 	ldw	ra,4(sp)
 400ea34:	df000017 	ldw	fp,0(sp)
 400ea38:	dec00204 	addi	sp,sp,8
 400ea3c:	f800283a 	ret

0400ea40 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 400ea40:	defffd04 	addi	sp,sp,-12
 400ea44:	dfc00215 	stw	ra,8(sp)
 400ea48:	df000115 	stw	fp,4(sp)
 400ea4c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400ea50:	00810074 	movhi	r2,1025
 400ea54:	10be9204 	addi	r2,r2,-1464
 400ea58:	e0bfff15 	stw	r2,-4(fp)
 400ea5c:	00000606 	br	400ea78 <_do_dtors+0x38>
        (*dtor) (); 
 400ea60:	e0bfff17 	ldw	r2,-4(fp)
 400ea64:	10800017 	ldw	r2,0(r2)
 400ea68:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400ea6c:	e0bfff17 	ldw	r2,-4(fp)
 400ea70:	10bfff04 	addi	r2,r2,-4
 400ea74:	e0bfff15 	stw	r2,-4(fp)
 400ea78:	e0ffff17 	ldw	r3,-4(fp)
 400ea7c:	00810074 	movhi	r2,1025
 400ea80:	10be9304 	addi	r2,r2,-1460
 400ea84:	18bff62e 	bgeu	r3,r2,400ea60 <_do_dtors+0x20>
        (*dtor) (); 
}
 400ea88:	0001883a 	nop
 400ea8c:	e037883a 	mov	sp,fp
 400ea90:	dfc00117 	ldw	ra,4(sp)
 400ea94:	df000017 	ldw	fp,0(sp)
 400ea98:	dec00204 	addi	sp,sp,8
 400ea9c:	f800283a 	ret

0400eaa0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 400eaa0:	deffff04 	addi	sp,sp,-4
 400eaa4:	df000015 	stw	fp,0(sp)
 400eaa8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 400eaac:	0001883a 	nop
 400eab0:	e037883a 	mov	sp,fp
 400eab4:	df000017 	ldw	fp,0(sp)
 400eab8:	dec00104 	addi	sp,sp,4
 400eabc:	f800283a 	ret

0400eac0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400eac0:	defff904 	addi	sp,sp,-28
 400eac4:	dfc00615 	stw	ra,24(sp)
 400eac8:	df000515 	stw	fp,20(sp)
 400eacc:	df000504 	addi	fp,sp,20
 400ead0:	e13ffc15 	stw	r4,-16(fp)
 400ead4:	e17ffd15 	stw	r5,-12(fp)
 400ead8:	e1bffe15 	stw	r6,-8(fp)
 400eadc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 400eae0:	e0800217 	ldw	r2,8(fp)
 400eae4:	d8800015 	stw	r2,0(sp)
 400eae8:	e1ffff17 	ldw	r7,-4(fp)
 400eaec:	e1bffe17 	ldw	r6,-8(fp)
 400eaf0:	e17ffd17 	ldw	r5,-12(fp)
 400eaf4:	e13ffc17 	ldw	r4,-16(fp)
 400eaf8:	400ec700 	call	400ec70 <alt_iic_isr_register>
}  
 400eafc:	e037883a 	mov	sp,fp
 400eb00:	dfc00117 	ldw	ra,4(sp)
 400eb04:	df000017 	ldw	fp,0(sp)
 400eb08:	dec00204 	addi	sp,sp,8
 400eb0c:	f800283a 	ret

0400eb10 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 400eb10:	defff904 	addi	sp,sp,-28
 400eb14:	df000615 	stw	fp,24(sp)
 400eb18:	df000604 	addi	fp,sp,24
 400eb1c:	e13ffe15 	stw	r4,-8(fp)
 400eb20:	e17fff15 	stw	r5,-4(fp)
 400eb24:	e0bfff17 	ldw	r2,-4(fp)
 400eb28:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400eb2c:	0005303a 	rdctl	r2,status
 400eb30:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400eb34:	e0fffb17 	ldw	r3,-20(fp)
 400eb38:	00bfff84 	movi	r2,-2
 400eb3c:	1884703a 	and	r2,r3,r2
 400eb40:	1001703a 	wrctl	status,r2
  
  return context;
 400eb44:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400eb48:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 400eb4c:	00c00044 	movi	r3,1
 400eb50:	e0bffa17 	ldw	r2,-24(fp)
 400eb54:	1884983a 	sll	r2,r3,r2
 400eb58:	1007883a 	mov	r3,r2
 400eb5c:	d0a6d717 	ldw	r2,-25764(gp)
 400eb60:	1884b03a 	or	r2,r3,r2
 400eb64:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400eb68:	d0a6d717 	ldw	r2,-25764(gp)
 400eb6c:	100170fa 	wrctl	ienable,r2
 400eb70:	e0bffc17 	ldw	r2,-16(fp)
 400eb74:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400eb78:	e0bffd17 	ldw	r2,-12(fp)
 400eb7c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400eb80:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 400eb84:	0001883a 	nop
}
 400eb88:	e037883a 	mov	sp,fp
 400eb8c:	df000017 	ldw	fp,0(sp)
 400eb90:	dec00104 	addi	sp,sp,4
 400eb94:	f800283a 	ret

0400eb98 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 400eb98:	defff904 	addi	sp,sp,-28
 400eb9c:	df000615 	stw	fp,24(sp)
 400eba0:	df000604 	addi	fp,sp,24
 400eba4:	e13ffe15 	stw	r4,-8(fp)
 400eba8:	e17fff15 	stw	r5,-4(fp)
 400ebac:	e0bfff17 	ldw	r2,-4(fp)
 400ebb0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400ebb4:	0005303a 	rdctl	r2,status
 400ebb8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ebbc:	e0fffb17 	ldw	r3,-20(fp)
 400ebc0:	00bfff84 	movi	r2,-2
 400ebc4:	1884703a 	and	r2,r3,r2
 400ebc8:	1001703a 	wrctl	status,r2
  
  return context;
 400ebcc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400ebd0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 400ebd4:	00c00044 	movi	r3,1
 400ebd8:	e0bffa17 	ldw	r2,-24(fp)
 400ebdc:	1884983a 	sll	r2,r3,r2
 400ebe0:	0084303a 	nor	r2,zero,r2
 400ebe4:	1007883a 	mov	r3,r2
 400ebe8:	d0a6d717 	ldw	r2,-25764(gp)
 400ebec:	1884703a 	and	r2,r3,r2
 400ebf0:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400ebf4:	d0a6d717 	ldw	r2,-25764(gp)
 400ebf8:	100170fa 	wrctl	ienable,r2
 400ebfc:	e0bffc17 	ldw	r2,-16(fp)
 400ec00:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400ec04:	e0bffd17 	ldw	r2,-12(fp)
 400ec08:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400ec0c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 400ec10:	0001883a 	nop
}
 400ec14:	e037883a 	mov	sp,fp
 400ec18:	df000017 	ldw	fp,0(sp)
 400ec1c:	dec00104 	addi	sp,sp,4
 400ec20:	f800283a 	ret

0400ec24 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 400ec24:	defffc04 	addi	sp,sp,-16
 400ec28:	df000315 	stw	fp,12(sp)
 400ec2c:	df000304 	addi	fp,sp,12
 400ec30:	e13ffe15 	stw	r4,-8(fp)
 400ec34:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 400ec38:	000530fa 	rdctl	r2,ienable
 400ec3c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 400ec40:	00c00044 	movi	r3,1
 400ec44:	e0bfff17 	ldw	r2,-4(fp)
 400ec48:	1884983a 	sll	r2,r3,r2
 400ec4c:	1007883a 	mov	r3,r2
 400ec50:	e0bffd17 	ldw	r2,-12(fp)
 400ec54:	1884703a 	and	r2,r3,r2
 400ec58:	1004c03a 	cmpne	r2,r2,zero
 400ec5c:	10803fcc 	andi	r2,r2,255
}
 400ec60:	e037883a 	mov	sp,fp
 400ec64:	df000017 	ldw	fp,0(sp)
 400ec68:	dec00104 	addi	sp,sp,4
 400ec6c:	f800283a 	ret

0400ec70 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400ec70:	defff504 	addi	sp,sp,-44
 400ec74:	dfc00a15 	stw	ra,40(sp)
 400ec78:	df000915 	stw	fp,36(sp)
 400ec7c:	df000904 	addi	fp,sp,36
 400ec80:	e13ffc15 	stw	r4,-16(fp)
 400ec84:	e17ffd15 	stw	r5,-12(fp)
 400ec88:	e1bffe15 	stw	r6,-8(fp)
 400ec8c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 400ec90:	00bffa84 	movi	r2,-22
 400ec94:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 400ec98:	e0bffd17 	ldw	r2,-12(fp)
 400ec9c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 400eca0:	e0bff817 	ldw	r2,-32(fp)
 400eca4:	10800808 	cmpgei	r2,r2,32
 400eca8:	1000271e 	bne	r2,zero,400ed48 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400ecac:	0005303a 	rdctl	r2,status
 400ecb0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ecb4:	e0fffb17 	ldw	r3,-20(fp)
 400ecb8:	00bfff84 	movi	r2,-2
 400ecbc:	1884703a 	and	r2,r3,r2
 400ecc0:	1001703a 	wrctl	status,r2
  
  return context;
 400ecc4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 400ecc8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 400eccc:	00810074 	movhi	r2,1025
 400ecd0:	108cff04 	addi	r2,r2,13308
 400ecd4:	e0fff817 	ldw	r3,-32(fp)
 400ecd8:	180690fa 	slli	r3,r3,3
 400ecdc:	10c5883a 	add	r2,r2,r3
 400ece0:	e0fffe17 	ldw	r3,-8(fp)
 400ece4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 400ece8:	00810074 	movhi	r2,1025
 400ecec:	108cff04 	addi	r2,r2,13308
 400ecf0:	e0fff817 	ldw	r3,-32(fp)
 400ecf4:	180690fa 	slli	r3,r3,3
 400ecf8:	10c5883a 	add	r2,r2,r3
 400ecfc:	10800104 	addi	r2,r2,4
 400ed00:	e0ffff17 	ldw	r3,-4(fp)
 400ed04:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 400ed08:	e0bffe17 	ldw	r2,-8(fp)
 400ed0c:	10000526 	beq	r2,zero,400ed24 <alt_iic_isr_register+0xb4>
 400ed10:	e0bff817 	ldw	r2,-32(fp)
 400ed14:	100b883a 	mov	r5,r2
 400ed18:	e13ffc17 	ldw	r4,-16(fp)
 400ed1c:	400eb100 	call	400eb10 <alt_ic_irq_enable>
 400ed20:	00000406 	br	400ed34 <alt_iic_isr_register+0xc4>
 400ed24:	e0bff817 	ldw	r2,-32(fp)
 400ed28:	100b883a 	mov	r5,r2
 400ed2c:	e13ffc17 	ldw	r4,-16(fp)
 400ed30:	400eb980 	call	400eb98 <alt_ic_irq_disable>
 400ed34:	e0bff715 	stw	r2,-36(fp)
 400ed38:	e0bffa17 	ldw	r2,-24(fp)
 400ed3c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400ed40:	e0bff917 	ldw	r2,-28(fp)
 400ed44:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 400ed48:	e0bff717 	ldw	r2,-36(fp)
}
 400ed4c:	e037883a 	mov	sp,fp
 400ed50:	dfc00117 	ldw	ra,4(sp)
 400ed54:	df000017 	ldw	fp,0(sp)
 400ed58:	dec00204 	addi	sp,sp,8
 400ed5c:	f800283a 	ret

0400ed60 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 400ed60:	defff804 	addi	sp,sp,-32
 400ed64:	dfc00715 	stw	ra,28(sp)
 400ed68:	df000615 	stw	fp,24(sp)
 400ed6c:	dc000515 	stw	r16,20(sp)
 400ed70:	df000604 	addi	fp,sp,24
 400ed74:	e13ffb15 	stw	r4,-20(fp)
 400ed78:	e17ffc15 	stw	r5,-16(fp)
 400ed7c:	e1bffd15 	stw	r6,-12(fp)
 400ed80:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 400ed84:	e1bffe17 	ldw	r6,-8(fp)
 400ed88:	e17ffd17 	ldw	r5,-12(fp)
 400ed8c:	e13ffc17 	ldw	r4,-16(fp)
 400ed90:	400efe80 	call	400efe8 <open>
 400ed94:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 400ed98:	e0bffa17 	ldw	r2,-24(fp)
 400ed9c:	10002216 	blt	r2,zero,400ee28 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 400eda0:	04010074 	movhi	r16,1025
 400eda4:	8401a204 	addi	r16,r16,1672
 400eda8:	e0bffa17 	ldw	r2,-24(fp)
 400edac:	01400304 	movi	r5,12
 400edb0:	1009883a 	mov	r4,r2
 400edb4:	400a9f80 	call	400a9f8 <__mulsi3>
 400edb8:	8085883a 	add	r2,r16,r2
 400edbc:	10c00017 	ldw	r3,0(r2)
 400edc0:	e0bffb17 	ldw	r2,-20(fp)
 400edc4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 400edc8:	04010074 	movhi	r16,1025
 400edcc:	8401a204 	addi	r16,r16,1672
 400edd0:	e0bffa17 	ldw	r2,-24(fp)
 400edd4:	01400304 	movi	r5,12
 400edd8:	1009883a 	mov	r4,r2
 400eddc:	400a9f80 	call	400a9f8 <__mulsi3>
 400ede0:	8085883a 	add	r2,r16,r2
 400ede4:	10800104 	addi	r2,r2,4
 400ede8:	10c00017 	ldw	r3,0(r2)
 400edec:	e0bffb17 	ldw	r2,-20(fp)
 400edf0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 400edf4:	04010074 	movhi	r16,1025
 400edf8:	8401a204 	addi	r16,r16,1672
 400edfc:	e0bffa17 	ldw	r2,-24(fp)
 400ee00:	01400304 	movi	r5,12
 400ee04:	1009883a 	mov	r4,r2
 400ee08:	400a9f80 	call	400a9f8 <__mulsi3>
 400ee0c:	8085883a 	add	r2,r16,r2
 400ee10:	10800204 	addi	r2,r2,8
 400ee14:	10c00017 	ldw	r3,0(r2)
 400ee18:	e0bffb17 	ldw	r2,-20(fp)
 400ee1c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 400ee20:	e13ffa17 	ldw	r4,-24(fp)
 400ee24:	400da240 	call	400da24 <alt_release_fd>
  }
} 
 400ee28:	0001883a 	nop
 400ee2c:	e6ffff04 	addi	sp,fp,-4
 400ee30:	dfc00217 	ldw	ra,8(sp)
 400ee34:	df000117 	ldw	fp,4(sp)
 400ee38:	dc000017 	ldw	r16,0(sp)
 400ee3c:	dec00304 	addi	sp,sp,12
 400ee40:	f800283a 	ret

0400ee44 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 400ee44:	defffb04 	addi	sp,sp,-20
 400ee48:	dfc00415 	stw	ra,16(sp)
 400ee4c:	df000315 	stw	fp,12(sp)
 400ee50:	df000304 	addi	fp,sp,12
 400ee54:	e13ffd15 	stw	r4,-12(fp)
 400ee58:	e17ffe15 	stw	r5,-8(fp)
 400ee5c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 400ee60:	01c07fc4 	movi	r7,511
 400ee64:	01800044 	movi	r6,1
 400ee68:	e17ffd17 	ldw	r5,-12(fp)
 400ee6c:	01010074 	movhi	r4,1025
 400ee70:	2101a504 	addi	r4,r4,1684
 400ee74:	400ed600 	call	400ed60 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 400ee78:	01c07fc4 	movi	r7,511
 400ee7c:	000d883a 	mov	r6,zero
 400ee80:	e17ffe17 	ldw	r5,-8(fp)
 400ee84:	01010074 	movhi	r4,1025
 400ee88:	2101a204 	addi	r4,r4,1672
 400ee8c:	400ed600 	call	400ed60 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 400ee90:	01c07fc4 	movi	r7,511
 400ee94:	01800044 	movi	r6,1
 400ee98:	e17fff17 	ldw	r5,-4(fp)
 400ee9c:	01010074 	movhi	r4,1025
 400eea0:	2101a804 	addi	r4,r4,1696
 400eea4:	400ed600 	call	400ed60 <alt_open_fd>
}  
 400eea8:	0001883a 	nop
 400eeac:	e037883a 	mov	sp,fp
 400eeb0:	dfc00117 	ldw	ra,4(sp)
 400eeb4:	df000017 	ldw	fp,0(sp)
 400eeb8:	dec00204 	addi	sp,sp,8
 400eebc:	f800283a 	ret

0400eec0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400eec0:	defffe04 	addi	sp,sp,-8
 400eec4:	dfc00115 	stw	ra,4(sp)
 400eec8:	df000015 	stw	fp,0(sp)
 400eecc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400eed0:	d0a00c17 	ldw	r2,-32720(gp)
 400eed4:	10000326 	beq	r2,zero,400eee4 <alt_get_errno+0x24>
 400eed8:	d0a00c17 	ldw	r2,-32720(gp)
 400eedc:	103ee83a 	callr	r2
 400eee0:	00000106 	br	400eee8 <alt_get_errno+0x28>
 400eee4:	d0a6d304 	addi	r2,gp,-25780
}
 400eee8:	e037883a 	mov	sp,fp
 400eeec:	dfc00117 	ldw	ra,4(sp)
 400eef0:	df000017 	ldw	fp,0(sp)
 400eef4:	dec00204 	addi	sp,sp,8
 400eef8:	f800283a 	ret

0400eefc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 400eefc:	defffb04 	addi	sp,sp,-20
 400ef00:	dfc00415 	stw	ra,16(sp)
 400ef04:	df000315 	stw	fp,12(sp)
 400ef08:	dc000215 	stw	r16,8(sp)
 400ef0c:	df000304 	addi	fp,sp,12
 400ef10:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 400ef14:	e0bffe17 	ldw	r2,-8(fp)
 400ef18:	10800217 	ldw	r2,8(r2)
 400ef1c:	10d00034 	orhi	r3,r2,16384
 400ef20:	e0bffe17 	ldw	r2,-8(fp)
 400ef24:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400ef28:	e03ffd15 	stw	zero,-12(fp)
 400ef2c:	00002306 	br	400efbc <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400ef30:	04010074 	movhi	r16,1025
 400ef34:	8401a204 	addi	r16,r16,1672
 400ef38:	e0bffd17 	ldw	r2,-12(fp)
 400ef3c:	01400304 	movi	r5,12
 400ef40:	1009883a 	mov	r4,r2
 400ef44:	400a9f80 	call	400a9f8 <__mulsi3>
 400ef48:	8085883a 	add	r2,r16,r2
 400ef4c:	10c00017 	ldw	r3,0(r2)
 400ef50:	e0bffe17 	ldw	r2,-8(fp)
 400ef54:	10800017 	ldw	r2,0(r2)
 400ef58:	1880151e 	bne	r3,r2,400efb0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400ef5c:	04010074 	movhi	r16,1025
 400ef60:	8401a204 	addi	r16,r16,1672
 400ef64:	e0bffd17 	ldw	r2,-12(fp)
 400ef68:	01400304 	movi	r5,12
 400ef6c:	1009883a 	mov	r4,r2
 400ef70:	400a9f80 	call	400a9f8 <__mulsi3>
 400ef74:	8085883a 	add	r2,r16,r2
 400ef78:	10800204 	addi	r2,r2,8
 400ef7c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400ef80:	10000b0e 	bge	r2,zero,400efb0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 400ef84:	01400304 	movi	r5,12
 400ef88:	e13ffd17 	ldw	r4,-12(fp)
 400ef8c:	400a9f80 	call	400a9f8 <__mulsi3>
 400ef90:	1007883a 	mov	r3,r2
 400ef94:	00810074 	movhi	r2,1025
 400ef98:	1081a204 	addi	r2,r2,1672
 400ef9c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400efa0:	e0bffe17 	ldw	r2,-8(fp)
 400efa4:	18800226 	beq	r3,r2,400efb0 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 400efa8:	00bffcc4 	movi	r2,-13
 400efac:	00000806 	br	400efd0 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400efb0:	e0bffd17 	ldw	r2,-12(fp)
 400efb4:	10800044 	addi	r2,r2,1
 400efb8:	e0bffd15 	stw	r2,-12(fp)
 400efbc:	d0a00b17 	ldw	r2,-32724(gp)
 400efc0:	1007883a 	mov	r3,r2
 400efc4:	e0bffd17 	ldw	r2,-12(fp)
 400efc8:	18bfd92e 	bgeu	r3,r2,400ef30 <alt_file_locked+0x34>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 400efcc:	0005883a 	mov	r2,zero
}
 400efd0:	e6ffff04 	addi	sp,fp,-4
 400efd4:	dfc00217 	ldw	ra,8(sp)
 400efd8:	df000117 	ldw	fp,4(sp)
 400efdc:	dc000017 	ldw	r16,0(sp)
 400efe0:	dec00304 	addi	sp,sp,12
 400efe4:	f800283a 	ret

0400efe8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 400efe8:	defff604 	addi	sp,sp,-40
 400efec:	dfc00915 	stw	ra,36(sp)
 400eff0:	df000815 	stw	fp,32(sp)
 400eff4:	df000804 	addi	fp,sp,32
 400eff8:	e13ffd15 	stw	r4,-12(fp)
 400effc:	e17ffe15 	stw	r5,-8(fp)
 400f000:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 400f004:	00bfffc4 	movi	r2,-1
 400f008:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 400f00c:	00bffb44 	movi	r2,-19
 400f010:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 400f014:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 400f018:	d1600904 	addi	r5,gp,-32732
 400f01c:	e13ffd17 	ldw	r4,-12(fp)
 400f020:	400f30c0 	call	400f30c <alt_find_dev>
 400f024:	e0bff815 	stw	r2,-32(fp)
 400f028:	e0bff817 	ldw	r2,-32(fp)
 400f02c:	1000051e 	bne	r2,zero,400f044 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 400f030:	e13ffd17 	ldw	r4,-12(fp)
 400f034:	400f39c0 	call	400f39c <alt_find_file>
 400f038:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 400f03c:	00800044 	movi	r2,1
 400f040:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 400f044:	e0bff817 	ldw	r2,-32(fp)
 400f048:	10002b26 	beq	r2,zero,400f0f8 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 400f04c:	e13ff817 	ldw	r4,-32(fp)
 400f050:	400f4a40 	call	400f4a4 <alt_get_fd>
 400f054:	e0bff915 	stw	r2,-28(fp)
 400f058:	e0bff917 	ldw	r2,-28(fp)
 400f05c:	1000030e 	bge	r2,zero,400f06c <open+0x84>
    {
      status = index;
 400f060:	e0bff917 	ldw	r2,-28(fp)
 400f064:	e0bffa15 	stw	r2,-24(fp)
 400f068:	00002506 	br	400f100 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 400f06c:	01400304 	movi	r5,12
 400f070:	e13ff917 	ldw	r4,-28(fp)
 400f074:	400a9f80 	call	400a9f8 <__mulsi3>
 400f078:	1007883a 	mov	r3,r2
 400f07c:	00810074 	movhi	r2,1025
 400f080:	1081a204 	addi	r2,r2,1672
 400f084:	1885883a 	add	r2,r3,r2
 400f088:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 400f08c:	e0fffe17 	ldw	r3,-8(fp)
 400f090:	00900034 	movhi	r2,16384
 400f094:	10bfffc4 	addi	r2,r2,-1
 400f098:	1886703a 	and	r3,r3,r2
 400f09c:	e0bffc17 	ldw	r2,-16(fp)
 400f0a0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 400f0a4:	e0bffb17 	ldw	r2,-20(fp)
 400f0a8:	1000051e 	bne	r2,zero,400f0c0 <open+0xd8>
 400f0ac:	e13ffc17 	ldw	r4,-16(fp)
 400f0b0:	400eefc0 	call	400eefc <alt_file_locked>
 400f0b4:	e0bffa15 	stw	r2,-24(fp)
 400f0b8:	e0bffa17 	ldw	r2,-24(fp)
 400f0bc:	10001016 	blt	r2,zero,400f100 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 400f0c0:	e0bff817 	ldw	r2,-32(fp)
 400f0c4:	10800317 	ldw	r2,12(r2)
 400f0c8:	10000826 	beq	r2,zero,400f0ec <open+0x104>
 400f0cc:	e0bff817 	ldw	r2,-32(fp)
 400f0d0:	10800317 	ldw	r2,12(r2)
 400f0d4:	e1ffff17 	ldw	r7,-4(fp)
 400f0d8:	e1bffe17 	ldw	r6,-8(fp)
 400f0dc:	e17ffd17 	ldw	r5,-12(fp)
 400f0e0:	e13ffc17 	ldw	r4,-16(fp)
 400f0e4:	103ee83a 	callr	r2
 400f0e8:	00000106 	br	400f0f0 <open+0x108>
 400f0ec:	0005883a 	mov	r2,zero
 400f0f0:	e0bffa15 	stw	r2,-24(fp)
 400f0f4:	00000206 	br	400f100 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 400f0f8:	00bffb44 	movi	r2,-19
 400f0fc:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 400f100:	e0bffa17 	ldw	r2,-24(fp)
 400f104:	1000090e 	bge	r2,zero,400f12c <open+0x144>
  {
    alt_release_fd (index);  
 400f108:	e13ff917 	ldw	r4,-28(fp)
 400f10c:	400da240 	call	400da24 <alt_release_fd>
    ALT_ERRNO = -status;
 400f110:	400eec00 	call	400eec0 <alt_get_errno>
 400f114:	1007883a 	mov	r3,r2
 400f118:	e0bffa17 	ldw	r2,-24(fp)
 400f11c:	0085c83a 	sub	r2,zero,r2
 400f120:	18800015 	stw	r2,0(r3)
    return -1;
 400f124:	00bfffc4 	movi	r2,-1
 400f128:	00000106 	br	400f130 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 400f12c:	e0bff917 	ldw	r2,-28(fp)
}
 400f130:	e037883a 	mov	sp,fp
 400f134:	dfc00117 	ldw	ra,4(sp)
 400f138:	df000017 	ldw	fp,0(sp)
 400f13c:	dec00204 	addi	sp,sp,8
 400f140:	f800283a 	ret

0400f144 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 400f144:	defffa04 	addi	sp,sp,-24
 400f148:	df000515 	stw	fp,20(sp)
 400f14c:	df000504 	addi	fp,sp,20
 400f150:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f154:	0005303a 	rdctl	r2,status
 400f158:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f15c:	e0fffc17 	ldw	r3,-16(fp)
 400f160:	00bfff84 	movi	r2,-2
 400f164:	1884703a 	and	r2,r3,r2
 400f168:	1001703a 	wrctl	status,r2
  
  return context;
 400f16c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 400f170:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 400f174:	e0bfff17 	ldw	r2,-4(fp)
 400f178:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 400f17c:	e0bffd17 	ldw	r2,-12(fp)
 400f180:	10800017 	ldw	r2,0(r2)
 400f184:	e0fffd17 	ldw	r3,-12(fp)
 400f188:	18c00117 	ldw	r3,4(r3)
 400f18c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 400f190:	e0bffd17 	ldw	r2,-12(fp)
 400f194:	10800117 	ldw	r2,4(r2)
 400f198:	e0fffd17 	ldw	r3,-12(fp)
 400f19c:	18c00017 	ldw	r3,0(r3)
 400f1a0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 400f1a4:	e0bffd17 	ldw	r2,-12(fp)
 400f1a8:	e0fffd17 	ldw	r3,-12(fp)
 400f1ac:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 400f1b0:	e0bffd17 	ldw	r2,-12(fp)
 400f1b4:	e0fffd17 	ldw	r3,-12(fp)
 400f1b8:	10c00015 	stw	r3,0(r2)
 400f1bc:	e0bffb17 	ldw	r2,-20(fp)
 400f1c0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f1c4:	e0bffe17 	ldw	r2,-8(fp)
 400f1c8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 400f1cc:	0001883a 	nop
 400f1d0:	e037883a 	mov	sp,fp
 400f1d4:	df000017 	ldw	fp,0(sp)
 400f1d8:	dec00104 	addi	sp,sp,4
 400f1dc:	f800283a 	ret

0400f1e0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 400f1e0:	defffb04 	addi	sp,sp,-20
 400f1e4:	dfc00415 	stw	ra,16(sp)
 400f1e8:	df000315 	stw	fp,12(sp)
 400f1ec:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 400f1f0:	d0a00f17 	ldw	r2,-32708(gp)
 400f1f4:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 400f1f8:	d0a6d917 	ldw	r2,-25756(gp)
 400f1fc:	10800044 	addi	r2,r2,1
 400f200:	d0a6d915 	stw	r2,-25756(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400f204:	00002e06 	br	400f2c0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 400f208:	e0bffd17 	ldw	r2,-12(fp)
 400f20c:	10800017 	ldw	r2,0(r2)
 400f210:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 400f214:	e0bffd17 	ldw	r2,-12(fp)
 400f218:	10800403 	ldbu	r2,16(r2)
 400f21c:	10803fcc 	andi	r2,r2,255
 400f220:	10000426 	beq	r2,zero,400f234 <alt_tick+0x54>
 400f224:	d0a6d917 	ldw	r2,-25756(gp)
 400f228:	1000021e 	bne	r2,zero,400f234 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 400f22c:	e0bffd17 	ldw	r2,-12(fp)
 400f230:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 400f234:	e0bffd17 	ldw	r2,-12(fp)
 400f238:	10800217 	ldw	r2,8(r2)
 400f23c:	d0e6d917 	ldw	r3,-25756(gp)
 400f240:	18801d36 	bltu	r3,r2,400f2b8 <alt_tick+0xd8>
 400f244:	e0bffd17 	ldw	r2,-12(fp)
 400f248:	10800403 	ldbu	r2,16(r2)
 400f24c:	10803fcc 	andi	r2,r2,255
 400f250:	1000191e 	bne	r2,zero,400f2b8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 400f254:	e0bffd17 	ldw	r2,-12(fp)
 400f258:	10800317 	ldw	r2,12(r2)
 400f25c:	e0fffd17 	ldw	r3,-12(fp)
 400f260:	18c00517 	ldw	r3,20(r3)
 400f264:	1809883a 	mov	r4,r3
 400f268:	103ee83a 	callr	r2
 400f26c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 400f270:	e0bfff17 	ldw	r2,-4(fp)
 400f274:	1000031e 	bne	r2,zero,400f284 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 400f278:	e13ffd17 	ldw	r4,-12(fp)
 400f27c:	400f1440 	call	400f144 <alt_alarm_stop>
 400f280:	00000d06 	br	400f2b8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 400f284:	e0bffd17 	ldw	r2,-12(fp)
 400f288:	10c00217 	ldw	r3,8(r2)
 400f28c:	e0bfff17 	ldw	r2,-4(fp)
 400f290:	1887883a 	add	r3,r3,r2
 400f294:	e0bffd17 	ldw	r2,-12(fp)
 400f298:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 400f29c:	e0bffd17 	ldw	r2,-12(fp)
 400f2a0:	10c00217 	ldw	r3,8(r2)
 400f2a4:	d0a6d917 	ldw	r2,-25756(gp)
 400f2a8:	1880032e 	bgeu	r3,r2,400f2b8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 400f2ac:	e0bffd17 	ldw	r2,-12(fp)
 400f2b0:	00c00044 	movi	r3,1
 400f2b4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 400f2b8:	e0bffe17 	ldw	r2,-8(fp)
 400f2bc:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400f2c0:	e0fffd17 	ldw	r3,-12(fp)
 400f2c4:	d0a00f04 	addi	r2,gp,-32708
 400f2c8:	18bfcf1e 	bne	r3,r2,400f208 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 400f2cc:	0001883a 	nop
}
 400f2d0:	0001883a 	nop
 400f2d4:	e037883a 	mov	sp,fp
 400f2d8:	dfc00117 	ldw	ra,4(sp)
 400f2dc:	df000017 	ldw	fp,0(sp)
 400f2e0:	dec00204 	addi	sp,sp,8
 400f2e4:	f800283a 	ret

0400f2e8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 400f2e8:	deffff04 	addi	sp,sp,-4
 400f2ec:	df000015 	stw	fp,0(sp)
 400f2f0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 400f2f4:	000170fa 	wrctl	ienable,zero
}
 400f2f8:	0001883a 	nop
 400f2fc:	e037883a 	mov	sp,fp
 400f300:	df000017 	ldw	fp,0(sp)
 400f304:	dec00104 	addi	sp,sp,4
 400f308:	f800283a 	ret

0400f30c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 400f30c:	defffa04 	addi	sp,sp,-24
 400f310:	dfc00515 	stw	ra,20(sp)
 400f314:	df000415 	stw	fp,16(sp)
 400f318:	df000404 	addi	fp,sp,16
 400f31c:	e13ffe15 	stw	r4,-8(fp)
 400f320:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 400f324:	e0bfff17 	ldw	r2,-4(fp)
 400f328:	10800017 	ldw	r2,0(r2)
 400f32c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 400f330:	e13ffe17 	ldw	r4,-8(fp)
 400f334:	40004c40 	call	40004c4 <strlen>
 400f338:	10800044 	addi	r2,r2,1
 400f33c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 400f340:	00000d06 	br	400f378 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 400f344:	e0bffc17 	ldw	r2,-16(fp)
 400f348:	10800217 	ldw	r2,8(r2)
 400f34c:	e0fffd17 	ldw	r3,-12(fp)
 400f350:	180d883a 	mov	r6,r3
 400f354:	e17ffe17 	ldw	r5,-8(fp)
 400f358:	1009883a 	mov	r4,r2
 400f35c:	400f7040 	call	400f704 <memcmp>
 400f360:	1000021e 	bne	r2,zero,400f36c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 400f364:	e0bffc17 	ldw	r2,-16(fp)
 400f368:	00000706 	br	400f388 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 400f36c:	e0bffc17 	ldw	r2,-16(fp)
 400f370:	10800017 	ldw	r2,0(r2)
 400f374:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 400f378:	e0fffc17 	ldw	r3,-16(fp)
 400f37c:	e0bfff17 	ldw	r2,-4(fp)
 400f380:	18bff01e 	bne	r3,r2,400f344 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 400f384:	0005883a 	mov	r2,zero
}
 400f388:	e037883a 	mov	sp,fp
 400f38c:	dfc00117 	ldw	ra,4(sp)
 400f390:	df000017 	ldw	fp,0(sp)
 400f394:	dec00204 	addi	sp,sp,8
 400f398:	f800283a 	ret

0400f39c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 400f39c:	defffb04 	addi	sp,sp,-20
 400f3a0:	dfc00415 	stw	ra,16(sp)
 400f3a4:	df000315 	stw	fp,12(sp)
 400f3a8:	df000304 	addi	fp,sp,12
 400f3ac:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 400f3b0:	d0a00717 	ldw	r2,-32740(gp)
 400f3b4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 400f3b8:	00003106 	br	400f480 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 400f3bc:	e0bffd17 	ldw	r2,-12(fp)
 400f3c0:	10800217 	ldw	r2,8(r2)
 400f3c4:	1009883a 	mov	r4,r2
 400f3c8:	40004c40 	call	40004c4 <strlen>
 400f3cc:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 400f3d0:	e0bffd17 	ldw	r2,-12(fp)
 400f3d4:	10c00217 	ldw	r3,8(r2)
 400f3d8:	e0bffe17 	ldw	r2,-8(fp)
 400f3dc:	10bfffc4 	addi	r2,r2,-1
 400f3e0:	1885883a 	add	r2,r3,r2
 400f3e4:	10800003 	ldbu	r2,0(r2)
 400f3e8:	10803fcc 	andi	r2,r2,255
 400f3ec:	1080201c 	xori	r2,r2,128
 400f3f0:	10bfe004 	addi	r2,r2,-128
 400f3f4:	10800bd8 	cmpnei	r2,r2,47
 400f3f8:	1000031e 	bne	r2,zero,400f408 <alt_find_file+0x6c>
    {
      len -= 1;
 400f3fc:	e0bffe17 	ldw	r2,-8(fp)
 400f400:	10bfffc4 	addi	r2,r2,-1
 400f404:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 400f408:	e0bffe17 	ldw	r2,-8(fp)
 400f40c:	e0ffff17 	ldw	r3,-4(fp)
 400f410:	1885883a 	add	r2,r3,r2
 400f414:	10800003 	ldbu	r2,0(r2)
 400f418:	10803fcc 	andi	r2,r2,255
 400f41c:	1080201c 	xori	r2,r2,128
 400f420:	10bfe004 	addi	r2,r2,-128
 400f424:	10800be0 	cmpeqi	r2,r2,47
 400f428:	1000081e 	bne	r2,zero,400f44c <alt_find_file+0xb0>
 400f42c:	e0bffe17 	ldw	r2,-8(fp)
 400f430:	e0ffff17 	ldw	r3,-4(fp)
 400f434:	1885883a 	add	r2,r3,r2
 400f438:	10800003 	ldbu	r2,0(r2)
 400f43c:	10803fcc 	andi	r2,r2,255
 400f440:	1080201c 	xori	r2,r2,128
 400f444:	10bfe004 	addi	r2,r2,-128
 400f448:	10000a1e 	bne	r2,zero,400f474 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 400f44c:	e0bffd17 	ldw	r2,-12(fp)
 400f450:	10800217 	ldw	r2,8(r2)
 400f454:	e0fffe17 	ldw	r3,-8(fp)
 400f458:	180d883a 	mov	r6,r3
 400f45c:	e17fff17 	ldw	r5,-4(fp)
 400f460:	1009883a 	mov	r4,r2
 400f464:	400f7040 	call	400f704 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 400f468:	1000021e 	bne	r2,zero,400f474 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 400f46c:	e0bffd17 	ldw	r2,-12(fp)
 400f470:	00000706 	br	400f490 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 400f474:	e0bffd17 	ldw	r2,-12(fp)
 400f478:	10800017 	ldw	r2,0(r2)
 400f47c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 400f480:	e0fffd17 	ldw	r3,-12(fp)
 400f484:	d0a00704 	addi	r2,gp,-32740
 400f488:	18bfcc1e 	bne	r3,r2,400f3bc <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 400f48c:	0005883a 	mov	r2,zero
}
 400f490:	e037883a 	mov	sp,fp
 400f494:	dfc00117 	ldw	ra,4(sp)
 400f498:	df000017 	ldw	fp,0(sp)
 400f49c:	dec00204 	addi	sp,sp,8
 400f4a0:	f800283a 	ret

0400f4a4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 400f4a4:	defffa04 	addi	sp,sp,-24
 400f4a8:	dfc00515 	stw	ra,20(sp)
 400f4ac:	df000415 	stw	fp,16(sp)
 400f4b0:	dc000315 	stw	r16,12(sp)
 400f4b4:	df000404 	addi	fp,sp,16
 400f4b8:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 400f4bc:	00bffa04 	movi	r2,-24
 400f4c0:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 400f4c4:	e03ffc15 	stw	zero,-16(fp)
 400f4c8:	00001d06 	br	400f540 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 400f4cc:	04010074 	movhi	r16,1025
 400f4d0:	8401a204 	addi	r16,r16,1672
 400f4d4:	e0bffc17 	ldw	r2,-16(fp)
 400f4d8:	01400304 	movi	r5,12
 400f4dc:	1009883a 	mov	r4,r2
 400f4e0:	400a9f80 	call	400a9f8 <__mulsi3>
 400f4e4:	8085883a 	add	r2,r16,r2
 400f4e8:	10800017 	ldw	r2,0(r2)
 400f4ec:	1000111e 	bne	r2,zero,400f534 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 400f4f0:	04010074 	movhi	r16,1025
 400f4f4:	8401a204 	addi	r16,r16,1672
 400f4f8:	e0bffc17 	ldw	r2,-16(fp)
 400f4fc:	01400304 	movi	r5,12
 400f500:	1009883a 	mov	r4,r2
 400f504:	400a9f80 	call	400a9f8 <__mulsi3>
 400f508:	8085883a 	add	r2,r16,r2
 400f50c:	e0fffe17 	ldw	r3,-8(fp)
 400f510:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 400f514:	d0e00b17 	ldw	r3,-32724(gp)
 400f518:	e0bffc17 	ldw	r2,-16(fp)
 400f51c:	1880020e 	bge	r3,r2,400f528 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 400f520:	e0bffc17 	ldw	r2,-16(fp)
 400f524:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
 400f528:	e0bffc17 	ldw	r2,-16(fp)
 400f52c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 400f530:	00000606 	br	400f54c <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 400f534:	e0bffc17 	ldw	r2,-16(fp)
 400f538:	10800044 	addi	r2,r2,1
 400f53c:	e0bffc15 	stw	r2,-16(fp)
 400f540:	e0bffc17 	ldw	r2,-16(fp)
 400f544:	10800810 	cmplti	r2,r2,32
 400f548:	103fe01e 	bne	r2,zero,400f4cc <alt_get_fd+0x28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 400f54c:	e0bffd17 	ldw	r2,-12(fp)
}
 400f550:	e6ffff04 	addi	sp,fp,-4
 400f554:	dfc00217 	ldw	ra,8(sp)
 400f558:	df000117 	ldw	fp,4(sp)
 400f55c:	dc000017 	ldw	r16,0(sp)
 400f560:	dec00304 	addi	sp,sp,12
 400f564:	f800283a 	ret

0400f568 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 400f568:	defffe04 	addi	sp,sp,-8
 400f56c:	df000115 	stw	fp,4(sp)
 400f570:	df000104 	addi	fp,sp,4
 400f574:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 400f578:	e0bfff17 	ldw	r2,-4(fp)
 400f57c:	10bffe84 	addi	r2,r2,-6
 400f580:	10c00428 	cmpgeui	r3,r2,16
 400f584:	18001a1e 	bne	r3,zero,400f5f0 <alt_exception_cause_generated_bad_addr+0x88>
 400f588:	100690ba 	slli	r3,r2,2
 400f58c:	00810074 	movhi	r2,1025
 400f590:	10bd6804 	addi	r2,r2,-2656
 400f594:	1885883a 	add	r2,r3,r2
 400f598:	10800017 	ldw	r2,0(r2)
 400f59c:	1000683a 	jmp	r2
 400f5a0:	0400f5e0 	cmpeqi	r16,zero,983
 400f5a4:	0400f5e0 	cmpeqi	r16,zero,983
 400f5a8:	0400f5f0 	cmpltui	r16,zero,983
 400f5ac:	0400f5f0 	cmpltui	r16,zero,983
 400f5b0:	0400f5f0 	cmpltui	r16,zero,983
 400f5b4:	0400f5e0 	cmpeqi	r16,zero,983
 400f5b8:	0400f5e8 	cmpgeui	r16,zero,983
 400f5bc:	0400f5f0 	cmpltui	r16,zero,983
 400f5c0:	0400f5e0 	cmpeqi	r16,zero,983
 400f5c4:	0400f5e0 	cmpeqi	r16,zero,983
 400f5c8:	0400f5f0 	cmpltui	r16,zero,983
 400f5cc:	0400f5e0 	cmpeqi	r16,zero,983
 400f5d0:	0400f5e8 	cmpgeui	r16,zero,983
 400f5d4:	0400f5f0 	cmpltui	r16,zero,983
 400f5d8:	0400f5f0 	cmpltui	r16,zero,983
 400f5dc:	0400f5e0 	cmpeqi	r16,zero,983
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 400f5e0:	00800044 	movi	r2,1
 400f5e4:	00000306 	br	400f5f4 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 400f5e8:	0005883a 	mov	r2,zero
 400f5ec:	00000106 	br	400f5f4 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 400f5f0:	0005883a 	mov	r2,zero
  }
}
 400f5f4:	e037883a 	mov	sp,fp
 400f5f8:	df000017 	ldw	fp,0(sp)
 400f5fc:	dec00104 	addi	sp,sp,4
 400f600:	f800283a 	ret

0400f604 <atexit>:
 400f604:	200b883a 	mov	r5,r4
 400f608:	000f883a 	mov	r7,zero
 400f60c:	000d883a 	mov	r6,zero
 400f610:	0009883a 	mov	r4,zero
 400f614:	400f7801 	jmpi	400f780 <__register_exitproc>

0400f618 <exit>:
 400f618:	defffe04 	addi	sp,sp,-8
 400f61c:	000b883a 	mov	r5,zero
 400f620:	dc000015 	stw	r16,0(sp)
 400f624:	dfc00115 	stw	ra,4(sp)
 400f628:	2021883a 	mov	r16,r4
 400f62c:	400f8980 	call	400f898 <__call_exitprocs>
 400f630:	00810074 	movhi	r2,1025
 400f634:	10861b04 	addi	r2,r2,6252
 400f638:	11000017 	ldw	r4,0(r2)
 400f63c:	20800f17 	ldw	r2,60(r4)
 400f640:	10000126 	beq	r2,zero,400f648 <exit+0x30>
 400f644:	103ee83a 	callr	r2
 400f648:	8009883a 	mov	r4,r16
 400f64c:	400fa180 	call	400fa18 <_exit>

0400f650 <_fputs_r>:
 400f650:	defff804 	addi	sp,sp,-32
 400f654:	dc400615 	stw	r17,24(sp)
 400f658:	2023883a 	mov	r17,r4
 400f65c:	2809883a 	mov	r4,r5
 400f660:	dc000515 	stw	r16,20(sp)
 400f664:	dfc00715 	stw	ra,28(sp)
 400f668:	3021883a 	mov	r16,r6
 400f66c:	d9400315 	stw	r5,12(sp)
 400f670:	40004c40 	call	40004c4 <strlen>
 400f674:	d8800215 	stw	r2,8(sp)
 400f678:	d8800415 	stw	r2,16(sp)
 400f67c:	d8800304 	addi	r2,sp,12
 400f680:	d8800015 	stw	r2,0(sp)
 400f684:	00800044 	movi	r2,1
 400f688:	d8800115 	stw	r2,4(sp)
 400f68c:	88000226 	beq	r17,zero,400f698 <_fputs_r+0x48>
 400f690:	88800e17 	ldw	r2,56(r17)
 400f694:	10001226 	beq	r2,zero,400f6e0 <_fputs_r+0x90>
 400f698:	8080030b 	ldhu	r2,12(r16)
 400f69c:	10c8000c 	andi	r3,r2,8192
 400f6a0:	1800061e 	bne	r3,zero,400f6bc <_fputs_r+0x6c>
 400f6a4:	81001917 	ldw	r4,100(r16)
 400f6a8:	00f7ffc4 	movi	r3,-8193
 400f6ac:	10880014 	ori	r2,r2,8192
 400f6b0:	20c6703a 	and	r3,r4,r3
 400f6b4:	8080030d 	sth	r2,12(r16)
 400f6b8:	80c01915 	stw	r3,100(r16)
 400f6bc:	d80d883a 	mov	r6,sp
 400f6c0:	800b883a 	mov	r5,r16
 400f6c4:	8809883a 	mov	r4,r17
 400f6c8:	4004da00 	call	4004da0 <__sfvwrite_r>
 400f6cc:	dfc00717 	ldw	ra,28(sp)
 400f6d0:	dc400617 	ldw	r17,24(sp)
 400f6d4:	dc000517 	ldw	r16,20(sp)
 400f6d8:	dec00804 	addi	sp,sp,32
 400f6dc:	f800283a 	ret
 400f6e0:	8809883a 	mov	r4,r17
 400f6e4:	400491c0 	call	400491c <__sinit>
 400f6e8:	003feb06 	br	400f698 <_fputs_r+0x48>

0400f6ec <fputs>:
 400f6ec:	00810074 	movhi	r2,1025
 400f6f0:	10861c04 	addi	r2,r2,6256
 400f6f4:	280d883a 	mov	r6,r5
 400f6f8:	200b883a 	mov	r5,r4
 400f6fc:	11000017 	ldw	r4,0(r2)
 400f700:	400f6501 	jmpi	400f650 <_fputs_r>

0400f704 <memcmp>:
 400f704:	01c000c4 	movi	r7,3
 400f708:	3980192e 	bgeu	r7,r6,400f770 <memcmp+0x6c>
 400f70c:	2144b03a 	or	r2,r4,r5
 400f710:	11c4703a 	and	r2,r2,r7
 400f714:	10000f26 	beq	r2,zero,400f754 <memcmp+0x50>
 400f718:	20800003 	ldbu	r2,0(r4)
 400f71c:	28c00003 	ldbu	r3,0(r5)
 400f720:	10c0151e 	bne	r2,r3,400f778 <memcmp+0x74>
 400f724:	31bfff84 	addi	r6,r6,-2
 400f728:	01ffffc4 	movi	r7,-1
 400f72c:	00000406 	br	400f740 <memcmp+0x3c>
 400f730:	20800003 	ldbu	r2,0(r4)
 400f734:	28c00003 	ldbu	r3,0(r5)
 400f738:	31bfffc4 	addi	r6,r6,-1
 400f73c:	10c00e1e 	bne	r2,r3,400f778 <memcmp+0x74>
 400f740:	21000044 	addi	r4,r4,1
 400f744:	29400044 	addi	r5,r5,1
 400f748:	31fff91e 	bne	r6,r7,400f730 <memcmp+0x2c>
 400f74c:	0005883a 	mov	r2,zero
 400f750:	f800283a 	ret
 400f754:	20c00017 	ldw	r3,0(r4)
 400f758:	28800017 	ldw	r2,0(r5)
 400f75c:	18bfee1e 	bne	r3,r2,400f718 <memcmp+0x14>
 400f760:	31bfff04 	addi	r6,r6,-4
 400f764:	21000104 	addi	r4,r4,4
 400f768:	29400104 	addi	r5,r5,4
 400f76c:	39bff936 	bltu	r7,r6,400f754 <memcmp+0x50>
 400f770:	303fe91e 	bne	r6,zero,400f718 <memcmp+0x14>
 400f774:	003ff506 	br	400f74c <memcmp+0x48>
 400f778:	10c5c83a 	sub	r2,r2,r3
 400f77c:	f800283a 	ret

0400f780 <__register_exitproc>:
 400f780:	defffa04 	addi	sp,sp,-24
 400f784:	dc000315 	stw	r16,12(sp)
 400f788:	04010074 	movhi	r16,1025
 400f78c:	84061b04 	addi	r16,r16,6252
 400f790:	80c00017 	ldw	r3,0(r16)
 400f794:	dc400415 	stw	r17,16(sp)
 400f798:	dfc00515 	stw	ra,20(sp)
 400f79c:	18805217 	ldw	r2,328(r3)
 400f7a0:	2023883a 	mov	r17,r4
 400f7a4:	10003726 	beq	r2,zero,400f884 <__register_exitproc+0x104>
 400f7a8:	10c00117 	ldw	r3,4(r2)
 400f7ac:	010007c4 	movi	r4,31
 400f7b0:	20c00e16 	blt	r4,r3,400f7ec <__register_exitproc+0x6c>
 400f7b4:	1a000044 	addi	r8,r3,1
 400f7b8:	8800221e 	bne	r17,zero,400f844 <__register_exitproc+0xc4>
 400f7bc:	18c00084 	addi	r3,r3,2
 400f7c0:	18c7883a 	add	r3,r3,r3
 400f7c4:	18c7883a 	add	r3,r3,r3
 400f7c8:	12000115 	stw	r8,4(r2)
 400f7cc:	10c7883a 	add	r3,r2,r3
 400f7d0:	19400015 	stw	r5,0(r3)
 400f7d4:	0005883a 	mov	r2,zero
 400f7d8:	dfc00517 	ldw	ra,20(sp)
 400f7dc:	dc400417 	ldw	r17,16(sp)
 400f7e0:	dc000317 	ldw	r16,12(sp)
 400f7e4:	dec00604 	addi	sp,sp,24
 400f7e8:	f800283a 	ret
 400f7ec:	00800034 	movhi	r2,0
 400f7f0:	10800004 	addi	r2,r2,0
 400f7f4:	10002626 	beq	r2,zero,400f890 <__register_exitproc+0x110>
 400f7f8:	01006404 	movi	r4,400
 400f7fc:	d9400015 	stw	r5,0(sp)
 400f800:	d9800115 	stw	r6,4(sp)
 400f804:	d9c00215 	stw	r7,8(sp)
 400f808:	00000000 	call	0 <__alt_mem_onchip_memory>
 400f80c:	d9400017 	ldw	r5,0(sp)
 400f810:	d9800117 	ldw	r6,4(sp)
 400f814:	d9c00217 	ldw	r7,8(sp)
 400f818:	10001d26 	beq	r2,zero,400f890 <__register_exitproc+0x110>
 400f81c:	81000017 	ldw	r4,0(r16)
 400f820:	10000115 	stw	zero,4(r2)
 400f824:	02000044 	movi	r8,1
 400f828:	22405217 	ldw	r9,328(r4)
 400f82c:	0007883a 	mov	r3,zero
 400f830:	12400015 	stw	r9,0(r2)
 400f834:	20805215 	stw	r2,328(r4)
 400f838:	10006215 	stw	zero,392(r2)
 400f83c:	10006315 	stw	zero,396(r2)
 400f840:	883fde26 	beq	r17,zero,400f7bc <__register_exitproc+0x3c>
 400f844:	18c9883a 	add	r4,r3,r3
 400f848:	2109883a 	add	r4,r4,r4
 400f84c:	1109883a 	add	r4,r2,r4
 400f850:	21802215 	stw	r6,136(r4)
 400f854:	01800044 	movi	r6,1
 400f858:	12406217 	ldw	r9,392(r2)
 400f85c:	30cc983a 	sll	r6,r6,r3
 400f860:	4992b03a 	or	r9,r9,r6
 400f864:	12406215 	stw	r9,392(r2)
 400f868:	21c04215 	stw	r7,264(r4)
 400f86c:	01000084 	movi	r4,2
 400f870:	893fd21e 	bne	r17,r4,400f7bc <__register_exitproc+0x3c>
 400f874:	11006317 	ldw	r4,396(r2)
 400f878:	218cb03a 	or	r6,r4,r6
 400f87c:	11806315 	stw	r6,396(r2)
 400f880:	003fce06 	br	400f7bc <__register_exitproc+0x3c>
 400f884:	18805304 	addi	r2,r3,332
 400f888:	18805215 	stw	r2,328(r3)
 400f88c:	003fc606 	br	400f7a8 <__register_exitproc+0x28>
 400f890:	00bfffc4 	movi	r2,-1
 400f894:	003fd006 	br	400f7d8 <__register_exitproc+0x58>

0400f898 <__call_exitprocs>:
 400f898:	defff504 	addi	sp,sp,-44
 400f89c:	df000915 	stw	fp,36(sp)
 400f8a0:	dd400615 	stw	r21,24(sp)
 400f8a4:	dc800315 	stw	r18,12(sp)
 400f8a8:	dfc00a15 	stw	ra,40(sp)
 400f8ac:	ddc00815 	stw	r23,32(sp)
 400f8b0:	dd800715 	stw	r22,28(sp)
 400f8b4:	dd000515 	stw	r20,20(sp)
 400f8b8:	dcc00415 	stw	r19,16(sp)
 400f8bc:	dc400215 	stw	r17,8(sp)
 400f8c0:	dc000115 	stw	r16,4(sp)
 400f8c4:	d9000015 	stw	r4,0(sp)
 400f8c8:	2839883a 	mov	fp,r5
 400f8cc:	04800044 	movi	r18,1
 400f8d0:	057fffc4 	movi	r21,-1
 400f8d4:	00810074 	movhi	r2,1025
 400f8d8:	10861b04 	addi	r2,r2,6252
 400f8dc:	12000017 	ldw	r8,0(r2)
 400f8e0:	45005217 	ldw	r20,328(r8)
 400f8e4:	44c05204 	addi	r19,r8,328
 400f8e8:	a0001c26 	beq	r20,zero,400f95c <__call_exitprocs+0xc4>
 400f8ec:	a0800117 	ldw	r2,4(r20)
 400f8f0:	15ffffc4 	addi	r23,r2,-1
 400f8f4:	b8000d16 	blt	r23,zero,400f92c <__call_exitprocs+0x94>
 400f8f8:	14000044 	addi	r16,r2,1
 400f8fc:	8421883a 	add	r16,r16,r16
 400f900:	8421883a 	add	r16,r16,r16
 400f904:	84402004 	addi	r17,r16,128
 400f908:	a463883a 	add	r17,r20,r17
 400f90c:	a421883a 	add	r16,r20,r16
 400f910:	e0001e26 	beq	fp,zero,400f98c <__call_exitprocs+0xf4>
 400f914:	80804017 	ldw	r2,256(r16)
 400f918:	e0801c26 	beq	fp,r2,400f98c <__call_exitprocs+0xf4>
 400f91c:	bdffffc4 	addi	r23,r23,-1
 400f920:	843fff04 	addi	r16,r16,-4
 400f924:	8c7fff04 	addi	r17,r17,-4
 400f928:	bd7ff91e 	bne	r23,r21,400f910 <__call_exitprocs+0x78>
 400f92c:	00800034 	movhi	r2,0
 400f930:	10800004 	addi	r2,r2,0
 400f934:	10000926 	beq	r2,zero,400f95c <__call_exitprocs+0xc4>
 400f938:	a0800117 	ldw	r2,4(r20)
 400f93c:	1000301e 	bne	r2,zero,400fa00 <__call_exitprocs+0x168>
 400f940:	a0800017 	ldw	r2,0(r20)
 400f944:	10003226 	beq	r2,zero,400fa10 <__call_exitprocs+0x178>
 400f948:	a009883a 	mov	r4,r20
 400f94c:	98800015 	stw	r2,0(r19)
 400f950:	00000000 	call	0 <__alt_mem_onchip_memory>
 400f954:	9d000017 	ldw	r20,0(r19)
 400f958:	a03fe41e 	bne	r20,zero,400f8ec <__call_exitprocs+0x54>
 400f95c:	dfc00a17 	ldw	ra,40(sp)
 400f960:	df000917 	ldw	fp,36(sp)
 400f964:	ddc00817 	ldw	r23,32(sp)
 400f968:	dd800717 	ldw	r22,28(sp)
 400f96c:	dd400617 	ldw	r21,24(sp)
 400f970:	dd000517 	ldw	r20,20(sp)
 400f974:	dcc00417 	ldw	r19,16(sp)
 400f978:	dc800317 	ldw	r18,12(sp)
 400f97c:	dc400217 	ldw	r17,8(sp)
 400f980:	dc000117 	ldw	r16,4(sp)
 400f984:	dec00b04 	addi	sp,sp,44
 400f988:	f800283a 	ret
 400f98c:	a0800117 	ldw	r2,4(r20)
 400f990:	80c00017 	ldw	r3,0(r16)
 400f994:	10bfffc4 	addi	r2,r2,-1
 400f998:	15c01426 	beq	r2,r23,400f9ec <__call_exitprocs+0x154>
 400f99c:	80000015 	stw	zero,0(r16)
 400f9a0:	183fde26 	beq	r3,zero,400f91c <__call_exitprocs+0x84>
 400f9a4:	95c8983a 	sll	r4,r18,r23
 400f9a8:	a0806217 	ldw	r2,392(r20)
 400f9ac:	a5800117 	ldw	r22,4(r20)
 400f9b0:	2084703a 	and	r2,r4,r2
 400f9b4:	10000b26 	beq	r2,zero,400f9e4 <__call_exitprocs+0x14c>
 400f9b8:	a0806317 	ldw	r2,396(r20)
 400f9bc:	2088703a 	and	r4,r4,r2
 400f9c0:	20000c1e 	bne	r4,zero,400f9f4 <__call_exitprocs+0x15c>
 400f9c4:	89400017 	ldw	r5,0(r17)
 400f9c8:	d9000017 	ldw	r4,0(sp)
 400f9cc:	183ee83a 	callr	r3
 400f9d0:	a0800117 	ldw	r2,4(r20)
 400f9d4:	15bfbf1e 	bne	r2,r22,400f8d4 <__call_exitprocs+0x3c>
 400f9d8:	98800017 	ldw	r2,0(r19)
 400f9dc:	153fcf26 	beq	r2,r20,400f91c <__call_exitprocs+0x84>
 400f9e0:	003fbc06 	br	400f8d4 <__call_exitprocs+0x3c>
 400f9e4:	183ee83a 	callr	r3
 400f9e8:	003ff906 	br	400f9d0 <__call_exitprocs+0x138>
 400f9ec:	a5c00115 	stw	r23,4(r20)
 400f9f0:	003feb06 	br	400f9a0 <__call_exitprocs+0x108>
 400f9f4:	89000017 	ldw	r4,0(r17)
 400f9f8:	183ee83a 	callr	r3
 400f9fc:	003ff406 	br	400f9d0 <__call_exitprocs+0x138>
 400fa00:	a0800017 	ldw	r2,0(r20)
 400fa04:	a027883a 	mov	r19,r20
 400fa08:	1029883a 	mov	r20,r2
 400fa0c:	003fb606 	br	400f8e8 <__call_exitprocs+0x50>
 400fa10:	0005883a 	mov	r2,zero
 400fa14:	003ffb06 	br	400fa04 <__call_exitprocs+0x16c>

0400fa18 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 400fa18:	defffd04 	addi	sp,sp,-12
 400fa1c:	df000215 	stw	fp,8(sp)
 400fa20:	df000204 	addi	fp,sp,8
 400fa24:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 400fa28:	0001883a 	nop
 400fa2c:	e0bfff17 	ldw	r2,-4(fp)
 400fa30:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 400fa34:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 400fa38:	10000226 	beq	r2,zero,400fa44 <_exit+0x2c>
    ALT_SIM_FAIL();
 400fa3c:	002af070 	cmpltui	zero,zero,43969
 400fa40:	00000106 	br	400fa48 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 400fa44:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 400fa48:	003fff06 	br	400fa48 <_exit+0x30>
